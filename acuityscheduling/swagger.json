{"basePath":"/elements/api-v2","paths":{"/appointment-types":{"get":{"summary":"List appointment types","operationId":"getAppointmentTypes","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/appointmentTypesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"in":"query","name":"deleted","description":"Retrieve deleted appointment types","type":"boolean","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["appointment-types"]}},"/appointment-types/{id}/available-dates":{"get":{"summary":"List available dates for appointment","operationId":"getAppointmentTypesAvailableDates","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/appointmentsAvailabilityDatesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"Appointment type ID to check availability for","type":"string","required":true},{"in":"query","name":"month","description":"Month to check available dates. For example 2019-02","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["appointment-types"]}},"/appointment-types/{id}/available-times":{"get":{"summary":"List available times for appointment","operationId":"getAppointmentTypesAvailableTimes","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/appointmentsAvailabilityTimesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"Appointment type ID to check availability for","type":"string","required":true},{"in":"query","name":"date","description":"Date to check available times. For example, 2019-02-06","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["appointment-types"]}},"/appointments":{"post":{"summary":"Create an appointment","operationId":"createAppointment","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/appointments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/createAppointment"},"in":"body","name":"appointment","description":"The appointment object","required":true}],"tags":["appointments"]},"get":{"summary":"Search for appointments","operationId":"getAppointments","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/appointmentsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"integer","required":false},{"in":"query","name":"where","description":"The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, firstName = 'John'","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["appointments"]}},"/appointments/{id}":{"patch":{"summary":"Update an appointemnt","operationId":"updateAppointmentById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/appointments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The appointment ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/updateAppointment"},"in":"body","name":"appointment","description":"The appointment object","required":true}],"tags":["appointments"]},"get":{"summary":"Retrieve an appointment","operationId":"getAppointmentById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/appointments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The appointment ID","type":"string","required":true}],"tags":["appointments"]},"delete":{"summary":"Cancel an appointment","operationId":"deleteAppointmentById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The appointment ID","type":"string","required":true}],"tags":["appointments"]}},"/appointments/{id}/payments":{"get":{"summary":"Search for appointment payments","operationId":"getAppointmentsPayments","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/appointmentsPaymentsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The appointment ID","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["appointments"]}},"/appointments/{id}/reschedule":{"patch":{"summary":"Reschedule an appointment","operationId":"updateAppointmentsReschedule","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/appointments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The appointment ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/appointmentsReschedule"},"in":"body","name":"body","description":"The appointment object ","required":true}],"tags":["appointments"]}},"/available-times/validate":{"post":{"summary":"Validate available times for an appointment","operationId":"createAvailableTimeValidate","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/appointmentsAvailabilityCheckTimesResponse"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/appointmentsAvailabilityCheckTimes"},"in":"body","name":"body","description":"The time object","required":true}],"tags":["available-times"]}},"/calendars":{"get":{"summary":"List existing calenders","operationId":"getCalendars","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/calendarsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["calendars"]}},"/export":{"get":{"summary":"List existing calenders","operationId":"getExport","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/calendarsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["export"]}},"/objects":{"get":{"operationId":"getObjects","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the available objects.","tags":["objects"]}},"/objects/{objectName}/docs":{"get":{"operationId":"getObjectsObjectNameDocs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Include discovery metadata in definitions","in":"query","name":"discovery","required":false,"type":"boolean"},{"description":"Optionally resolve swagger references for an inline object definition","in":"query","name":"resolveReferences","required":false,"type":"boolean"},{"description":"Include only OpenAPI / Swagger properties in definitions","in":"query","name":"basic","required":false,"type":"boolean"},{"description":"The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger","in":"query","name":"version","required":false,"default":"-1","type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/swaggerDocs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get swagger docs for an object.","tags":["objects"]}},"/objects/{objectName}/metadata":{"get":{"operationId":"getObjectsObjectNameMetadata","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/objectsMetadata"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the field for an object.","tags":["objects"]}},"/ping":{"get":{"summary":"Ping the Element to confirm that the Hub Element has a heartbeat. If the Element does not have a heartbeat, an error message will be returned.","operationId":"getPing","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/ping"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true}],"tags":["ping"]}},"/publish":{"get":{"summary":"List appointment types","operationId":"getPublish","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/appointmentTypesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of items returned in a query. Defaults to 200 if not supplied","type":"string","required":false},{"in":"query","name":"deleted","description":"Retrieve deleted appointment types","type":"boolean","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["publish"]}},"/{objectName}":{"get":{"operationId":"getByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {objectName}","tags":["objectName"]},"post":{"operationId":"createByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}":{"delete":{"operationId":"deleteObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {objectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"produces":["application/json","application/pdf"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {objectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}":{"get":{"operationId":"getObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {childObjectName}","tags":["objectName"]},"post":{"operationId":"createObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {childObjectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {childObjectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}/{childObjectId}":{"delete":{"operationId":"deleteObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {childObjectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {childObjectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]}}},"schemes":["https"],"definitions":{"fieldsCreateAppointment":{"properties":{"id":{"format":"int32","type":"integer","x-samplevalue":1},"value":{"type":"string","x-samplevalue":"Party time!"}},"title":"fieldsCreateAppointment","x-has-customfields":false,"type":"object"},"swaggerschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact-POST-Response","type":"string"}}},"appointmentsAvailabilityDatesListObject":{"properties":{"date":{"format":"date","type":"string","x-mask":"yyyy-MM-dd","x-samplevalue":"2019-02-01"}},"title":"appointmentsAvailabilityDatesList","type":"object","x-has-customfields":false,"x-primary-key":["date"],"x-vendor-objectname":"availability-dates"},"appointmentsAvailabilityCheckTimes":{"properties":{"appointmentTypeID":{"format":"int32","type":"integer","x-samplevalue":1},"calendarID":{"format":"int32","type":"integer","x-samplevalue":1},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2016-02-03T14:00:00-0800"}},"required":["datetime","appointmentTypeID"],"title":"appointmentsAvailabilityCheckTimes","x-has-customfields":false,"x-primary-key":["datetime"],"x-vendor-objectname":"check-times","type":"object"},"swaggerdefinitions":{"x-has-customfields":false,"type":"object","title":"definitions","properties":{"definition-name":{"$ref":"#/definitions/swaggerdefinition-name"}}},"ping":{"properties":{"dateTime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSZ","x-samplevalue":"2018-03-21T09:56:10.669Z"},"endpoint":{"type":"string","x-samplevalue":"acuityscheduling"},"valid":{"type":"string","x-samplevalue":"true"}},"title":"ping","x-has-customfields":false,"type":"object"},"swagger415":{"x-has-customfields":false,"type":"object","title":"415","properties":{"description":{"x-samplevalue":"Unsupported media type - The server cannot handle the requested Content-Type","type":"string"}}},"values":{"properties":{"fieldID":{"format":"int32","type":"integer","x-samplevalue":1},"id":{"format":"int32","type":"integer","x-samplevalue":21502993},"name":{"type":"string","x-samplevalue":"Is this your first visit?"},"value":{"type":"string","x-samplevalue":"yes"}},"title":"values","x-has-customfields":false,"type":"object"},"appointmentsReschedule":{"properties":{"calendarID":{"format":"int32","type":"integer","x-samplevalue":1},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2016-02-03T14:00:00-0800"},"id":{"format":"int32","type":"integer","x-samplevalue":1,"x-readOnly":true},"timezone":{"type":"string","x-samplevalue":"America/Los_Angeles"}},"required":["datetime"],"title":"appointmentsReschedule","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"reschedule","type":"object"},"swaggerdefinition-name":{"x-has-customfields":false,"type":"object","title":"definition-name","properties":{"properties":{"$ref":"#/definitions/swaggerproperties"}}},"swaggerparameters":{"x-has-customfields":false,"title":"parameters","properties":{"schema":{"$ref":"#/definitions/swaggerparametersschema"},"in":{"x-samplevalue":"header","type":"string"},"name":{"x-samplevalue":"Authorization","type":"string"},"description":{"x-samplevalue":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string"},"type":{"x-samplevalue":"string","type":"string"},"required":{"x-samplevalue":true,"type":"boolean"}},"type":"object"},"appointmentTypesListObject":{"properties":{"addonIDs":{"items":{"type":"integer"},"type":"array","x-samplevalue":[1]},"calendarIDs":{"items":{"type":"integer"},"type":"array","x-samplevalue":[2010742]},"category":{"type":"string","x-samplevalue":""},"classSize":{"format":"int32","type":"integer","x-samplevalue":8},"color":{"type":"string","x-samplevalue":"#D7B4DF"},"description":{"type":"string","x-samplevalue":""},"duration":{"format":"int32","type":"integer","x-samplevalue":30},"formIDs":{"items":{"type":"integer"},"type":"array","x-samplevalue":[1]},"id":{"format":"int32","type":"integer","x-samplevalue":6058208},"name":{"type":"string","x-samplevalue":"PayMe"},"paddingAfter":{"format":"int32","type":"integer","x-samplevalue":0},"paddingBefore":{"format":"int32","type":"integer","x-samplevalue":0},"price":{"type":"string","x-samplevalue":"0.10"},"private":{"type":"boolean","x-samplevalue":false},"type":{"enum":["service","class"],"type":"string","x-samplevalue":"service"}},"title":"appointmentTypesList","type":"object","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"appointment-types"},"swaggerparametersschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact","type":"string"}}},"swaggerresponses":{"x-has-customfields":false,"type":"object","title":"responses","properties":{"200":{"$ref":"#/definitions/swagger200"},"400":{"$ref":"#/definitions/swagger400"},"401":{"$ref":"#/definitions/swagger401"},"403":{"$ref":"#/definitions/swagger403"},"404":{"$ref":"#/definitions/swagger404"},"405":{"$ref":"#/definitions/swagger405"},"406":{"$ref":"#/definitions/swagger406"},"409":{"$ref":"#/definitions/swagger409"},"415":{"$ref":"#/definitions/swagger415"},"500":{"$ref":"#/definitions/swagger500"},"502":{"$ref":"#/definitions/swagger502"}}},"swaggerproperties":{"x-has-customfields":false,"type":"object","title":"properties","properties":{"definition-property":{"$ref":"#/definitions/swaggerdefinition-property"}}},"calendarsListObject":{"properties":{"description":{"type":"string","x-samplevalue":""},"email":{"type":"string","x-samplevalue":"mayur.dhande@gslab.com","x-sub-format":"email"},"id":{"format":"int32","type":"integer","x-samplevalue":2018339},"image":{"type":"string","x-samplevalue":"//acuitys-a299.kxcdn.com/calendar-2018339.jpg?1521625862"},"location":{"type":"string","x-samplevalue":"Pune"},"name":{"type":"string","x-samplevalue":"Marathi Calendar"},"replyTo":{"type":"string","x-samplevalue":""},"thumbnail":{"type":"string","x-samplevalue":"//acuitys-a299.kxcdn.com/calendar-thumb-2018339.jpg?1521625862"},"timezone":{"type":"string","x-samplevalue":"Asia/Calcutta"}},"title":"calendarsList","type":"object","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"calendars"},"swagger-contacts-path":{"x-has-customfields":false,"type":"object","title":"/contacts","properties":{"post":{"$ref":"#/definitions/swaggerpost"}}},"swagger200":{"x-has-customfields":false,"type":"object","title":"200","properties":{"schema":{"$ref":"#/definitions/swaggerschema"},"description":{"x-samplevalue":"OK - Everything worked as expected","type":"string"}}},"appointments":{"properties":{"addonIDs":{"items":{"type":"integer"},"type":"array","x-samplevalue":[1]},"amountPaid":{"type":"string","x-samplevalue":"0.00"},"appointmentTypeID":{"format":"int32","type":"integer","x-reference-objectname":"appointment-types","x-samplevalue":6058208},"calendar":{"type":"string","x-samplevalue":""},"calendarID":{"format":"int32","type":"integer","x-reference-objectname":"calendars","x-samplevalue":2010742},"calendarTimezone":{"type":"string","x-samplevalue":"Asia/Calcutta"},"canClientCancel":{"type":"boolean","x-samplevalue":true},"canClientReschedule":{"type":"boolean","x-samplevalue":true},"canceled":{"type":"boolean","x-samplevalue":false},"category":{"type":"string","x-samplevalue":""},"classID":{"format":"int32","type":"integer","x-samplevalue":1},"confirmationPage":{"type":"string","x-samplevalue":"https://www.acuityscheduling.com/schedule.php?action=appt&owner=15392299&id%5B%5D=f3e99587ac8eb37e86491085822cd234"},"date":{"type":"string","x-samplevalue":"March 28, 2018"},"dateCreated":{"type":"string","x-samplevalue":"March 21, 2018"},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-28T04:44:00+0530"},"datetimeCreated":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-21T04:23:12-0500"},"duration":{"type":"string","x-samplevalue":"30"},"email":{"type":"string","x-samplevalue":"sagar.p@gmail.com","x-sub-format":"email"},"endTime":{"type":"string","x-samplevalue":"5:14am"},"firstName":{"type":"string","x-samplevalue":"Sagar"},"forms":{"items":{"$ref":"#/definitions/forms"},"type":"array"},"formsText":{"type":"string","x-samplevalue":"Name: Sagar Pradhan\nPhone: 1223123\nE-mail: sagar.p@gmail.com\nPrice: $0.10\n"},"id":{"format":"int32","type":"integer","x-samplevalue":181424437},"isVerified":{"type":"boolean","x-samplevalue":false},"lastName":{"type":"string","x-samplevalue":"Pradhan"},"location":{"type":"string","x-samplevalue":""},"notes":{"type":"string","x-samplevalue":"This is a confidential ,meeting."},"paid":{"type":"string","x-samplevalue":"yes"},"phone":{"type":"string","x-samplevalue":"1223123"},"price":{"type":"string","x-samplevalue":"0.10"},"scheduledBy":{"type":"string","x-samplevalue":"mayur.dhande@gslab.com"},"time":{"type":"string","x-samplevalue":"4:44am"},"timezone":{"type":"string","x-samplevalue":"Asia/Calcutta"},"type":{"type":"string","x-samplevalue":"PayMe"}},"title":"appointments","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"appointments","type":"object"},"swagger400":{"x-has-customfields":false,"type":"object","title":"400","properties":{"description":{"x-samplevalue":"Bad Request - Often due to a missing request parameter","type":"string"}}},"swaggerinfo":{"x-has-customfields":false,"type":"object","title":"info","properties":{"contact":{"$ref":"#/definitions/swaggercontact"},"title":{"x-samplevalue":"hubspotcrm","type":"string"},"version":{"x-samplevalue":"api-v2","type":"string"}}},"swagger401":{"x-has-customfields":false,"type":"object","title":"401","properties":{"description":{"x-samplevalue":"Unauthorized - An invalid element token, user secret and/or org secret provided","type":"string"}}},"swagger500":{"x-has-customfields":false,"type":"object","title":"500","properties":{"description":{"x-samplevalue":"Server error - Something went wrong on the Cloud Elements server","type":"string"}}},"swaggerpaths":{"x-has-customfields":false,"type":"object","title":"paths","properties":{"/contacts":{"$ref":"#/definitions/swagger-contacts-path"}}},"swagger403":{"x-has-customfields":false,"type":"object","title":"403","properties":{"description":{"x-samplevalue":"Forbidden - Access to the resource by the provider is forbidden","type":"string"}}},"swagger502":{"x-has-customfields":false,"type":"object","title":"502","properties":{"description":{"x-samplevalue":"Provider server error - Something went wrong on the Provider or Endpoint's server","type":"string"}}},"swagger404":{"x-has-customfields":false,"type":"object","title":"404","properties":{"description":{"x-samplevalue":"Not found - The requested resource is not found","type":"string"}}},"swagger405":{"x-has-customfields":false,"type":"object","title":"405","properties":{"description":{"x-samplevalue":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected","type":"string"}}},"appointmentsAvailabilityCheckTimesResponse":{"properties":{"appointmentTypeID":{"format":"int32","type":"integer","x-samplevalue":6058208},"calendarID":{"format":"int32","type":"integer","x-samplevalue":2010742},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-28T14:00:00+0530"},"valid":{"type":"boolean","x-samplevalue":true}},"title":"appointmentsAvailabilityCheckTimesResponse","x-has-customfields":false,"x-primary-key":["datetime"],"x-vendor-objectname":"check-times","type":"object"},"objectsMetadataFields":{"properties":{"mask":{"type":"string"},"type":{"type":"string"},"vendorDisplayName":{"type":"string"},"vendorPath":{"type":"string"},"vendorReadOnly":{"type":"boolean"},"vendorRequired":{"type":"boolean"}},"type":"object"},"swaggerDocs":{"x-has-customfields":false,"title":"swaggerDocs","properties":{"basePath":{"x-samplevalue":"/elements/api-v2/hubs/crm","type":"string"},"paths":{"$ref":"#/definitions/swaggerpaths"},"host":{"x-samplevalue":"localhost:5050","type":"string"},"schemes":{"x-samplevalue":["http"],"type":"array","items":{"type":"string"}},"definitions":{"$ref":"#/definitions/swaggerdefinitions"},"swagger":{"x-samplevalue":"2.0","type":"string"},"info":{"$ref":"#/definitions/swaggerinfo"},"tags":{"type":"array","items":{"$ref":"#/definitions/swaggertags"}}},"type":"object"},"appointmentsDelete":{"properties":{"addonIDs":{"items":{"type":"integer"},"type":"array","x-samplevalue":[1]},"amountPaid":{"type":"string","x-samplevalue":"0.00"},"appointmentTypeID":{"format":"int32","type":"integer","x-reference-objectname":"appointment-types","x-samplevalue":6058208},"calendar":{"type":"string","x-samplevalue":""},"calendarID":{"format":"int32","type":"integer","x-reference-objectname":"calendars","x-samplevalue":2010742},"calendarTimezone":{"type":"string","x-samplevalue":"Asia/Calcutta"},"canClientCancel":{"type":"boolean","x-samplevalue":true},"canClientReschedule":{"type":"boolean","x-samplevalue":true},"canceled":{"type":"boolean","x-samplevalue":false},"category":{"type":"string","x-samplevalue":""},"classID":{"format":"int32","type":"integer","x-samplevalue":1},"confirmationPage":{"type":"string","x-samplevalue":"https://www.acuityscheduling.com/schedule.php?action=appt&owner=15392299&id%5B%5D=f3e99587ac8eb37e86491085822cd234"},"date":{"type":"string","x-samplevalue":"March 28, 2018"},"dateCreated":{"type":"string","x-samplevalue":"March 21, 2018"},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-28T04:44:00+0530"},"datetimeCreated":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-21T04:23:12-0500"},"duration":{"type":"string","x-samplevalue":"30"},"email":{"type":"string","x-samplevalue":"sagar.p@gmail.com","x-sub-format":"email"},"endTime":{"type":"string","x-samplevalue":"5:14am"},"firstName":{"type":"string","x-samplevalue":"Sagar"},"forms":{"items":{"$ref":"#/definitions/forms"},"type":"array"},"formsText":{"type":"string","x-samplevalue":"Name: Sagar Pradhan\nPhone: 1223123\nE-mail: sagar.p@gmail.com\nPrice: $0.10\n"},"id":{"format":"int32","type":"integer","x-samplevalue":181424437},"isVerified":{"type":"boolean","x-samplevalue":false},"lastName":{"type":"string","x-samplevalue":"Pradhan"},"location":{"type":"string","x-samplevalue":""},"noShow":{"type":"boolean","x-samplevalue":false},"notes":{"type":"string","x-samplevalue":"This is a confidential ,meeting."},"paid":{"type":"string","x-samplevalue":"yes"},"phone":{"type":"string","x-samplevalue":"1223123"},"price":{"type":"string","x-samplevalue":"0.10"},"scheduledBy":{"type":"string","x-samplevalue":"mayur.dhande@gslab.com"},"time":{"type":"string","x-samplevalue":"4:44am"},"timezone":{"type":"string","x-samplevalue":"Asia/Calcutta"},"type":{"type":"string","x-samplevalue":"PayMe"}},"title":"appointmentsDelete","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"appointments","type":"object"},"updateAppointment":{"properties":{"certificate":{"type":"string","x-samplevalue":"ABC123"},"email":{"type":"string","x-samplevalue":"bob.mctest@example.com","x-sub-format":"email"},"fields":{"items":{"$ref":"#/definitions/fieldsCreateAppointment"},"type":"array"},"firstName":{"type":"string","x-samplevalue":"Bob"},"id":{"format":"int32","type":"integer","x-samplevalue":1,"x-readOnly":true},"lastName":{"type":"string","x-samplevalue":"McTest"},"notes":{"type":"string"},"phone":{"type":"string","x-samplevalue":"121321"}},"title":"updateAppointment","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"appointments","type":"object"},"swaggercontact":{"x-has-customfields":false,"type":"object","title":"contact","properties":{"email":{"x-samplevalue":"support@cloud-elements.com","type":"string"}}},"appointmentsAvailabilityTimesListObject":{"properties":{"slotsAvailable":{"format":"int32","type":"integer","x-samplevalue":1},"time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-06T09:00:00+0530"}},"title":"appointmentsAvailabilityTimesList","type":"object","x-has-customfields":false,"x-primary-key":["time"],"x-vendor-objectname":"availability-times"},"appointmentsListObject":{"properties":{"addonIDs":{"items":{"type":"integer"},"type":"array","x-samplevalue":[1]},"amountPaid":{"type":"string","x-samplevalue":"0.00"},"appointmentTypeID":{"format":"int32","type":"integer","x-reference-objectname":"appointment-types","x-samplevalue":6058208},"calendar":{"type":"string","x-samplevalue":""},"calendarID":{"format":"int32","type":"integer","x-reference-objectname":"calendars","x-samplevalue":2010742},"calendarTimezone":{"type":"string","x-samplevalue":"Asia/Calcutta"},"canClientCancel":{"type":"boolean","x-samplevalue":true},"canClientReschedule":{"type":"boolean","x-samplevalue":true},"canceled":{"type":"boolean","x-samplevalue":false},"category":{"type":"string","x-samplevalue":""},"classID":{"format":"int32","type":"integer","x-samplevalue":1},"confirmationPage":{"type":"string","x-samplevalue":"https://www.acuityscheduling.com/schedule.php?action=appt&owner=15392299&id%5B%5D=f3e99587ac8eb37e86491085822cd234"},"date":{"type":"string","x-samplevalue":"March 28, 2018"},"dateCreated":{"type":"string","x-samplevalue":"March 21, 2018"},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-28T04:44:00+0530"},"datetimeCreated":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-21T04:23:12-0500"},"duration":{"type":"string","x-samplevalue":"30"},"email":{"type":"string","x-samplevalue":"sagar.p@gmail.com","x-searchable":true,"x-searchable-operators":["="],"x-sub-format":"email"},"endTime":{"type":"string","x-samplevalue":"5:14am"},"firstName":{"type":"string","x-samplevalue":"Sagar","x-searchable":true,"x-searchable-operators":["="]},"forms":{"items":{"$ref":"#/definitions/forms"},"type":"array"},"formsText":{"type":"string","x-samplevalue":"Name: Sagar Pradhan\nPhone: 1223123\nE-mail: sagar.p@gmail.com\nPrice: $0.10\n"},"id":{"format":"int32","type":"integer","x-samplevalue":181424437},"lastName":{"type":"string","x-samplevalue":"Pradhan","x-searchable":true,"x-searchable-operators":["="]},"location":{"type":"string","x-samplevalue":""},"notes":{"type":"string","x-samplevalue":"This is a confidential ,meeting."},"paid":{"type":"string","x-samplevalue":"yes"},"phone":{"type":"string","x-samplevalue":"1223123","x-searchable":true,"x-searchable-operators":["="]},"price":{"type":"string","x-samplevalue":"0.10"},"time":{"type":"string","x-samplevalue":"4:44am"},"timezone":{"type":"string","x-samplevalue":"Asia/Calcutta"},"type":{"type":"string","x-samplevalue":"PayMe"}},"title":"appointmentsList","type":"object","x-has-customfields":false,"x-primary-key":["id"],"x-searchable":true,"x-searchable-joins":["and"],"x-vendor-objectname":"appointments"},"createAppointment":{"properties":{"addonIDs":{"items":{"format":"int32","type":"integer"},"type":"array"},"appointmentTypeID":{"format":"int32","type":"integer","x-samplevalue":1},"calendarID":{"format":"int32","type":"integer","x-samplevalue":1},"certificate":{"type":"string","x-samplevalue":"ABC123"},"datetime":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2016-02-03T14:00:00-0800"},"email":{"type":"string","x-samplevalue":"bob.mctest@example.com","x-sub-format":"email"},"fields":{"items":{"$ref":"#/definitions/fieldsCreateAppointment"},"type":"array"},"firstName":{"type":"string","x-samplevalue":"Bob"},"id":{"format":"int32","type":"integer","x-samplevalue":1,"x-readOnly":true},"lastName":{"type":"string","x-samplevalue":"McTest"},"notes":{"type":"string"},"phone":{"type":"string","x-samplevalue":"121321"},"timezone":{"type":"string","x-samplevalue":"America/Los_Angeles"}},"required":["datetime","appointmentTypeID","firstName","lastName","email"],"title":"createAppointment","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"appointments","type":"object"},"swaggerpost":{"x-has-customfields":false,"type":"object","title":"post","properties":{"summary":{"x-samplevalue":"Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.","type":"string"},"operationId":{"x-samplevalue":"createContact","type":"string"},"responses":{"$ref":"#/definitions/swaggerresponses"},"parameters":{"type":"array","items":{"$ref":"#/definitions/swaggerparameters"}},"tags":{"x-samplevalue":["contacts"],"type":"array","items":{"type":"string"}}}},"swagger406":{"x-has-customfields":false,"type":"object","title":"406","properties":{"description":{"x-samplevalue":"Not acceptable - The response content type does not match the 'Accept' header value","type":"string"}}},"swaggerdefinition-property":{"x-has-customfields":false,"type":"object","title":"#/definitions/definition-property","properties":{"type":{"x-samplevalue":"string","type":"string"}}},"Object":{"description":"Fields for the object. There will be fields associated with an Object, which are not all described here.","properties":{"objectField":{"type":"string"}},"type":"object"},"appointmentsPaymentsListObject":{"properties":{"amount":{"type":"string","x-samplevalue":"0.10"},"created":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-03-21T14:29:34+0530"},"notes":{"type":"string","x-samplevalue":""},"processor":{"enum":["stripe","paypal","paypal_pro","braintree","authorizenet"],"type":"string","x-samplevalue":"square"},"transactionID":{"type":"string","x-samplevalue":"e3H6WCoLWJROP8gpwUevDvMF"}},"title":"appointmentsPaymentsList","type":"object","x-has-customfields":false,"x-primary-key":["transactionID"]},"swagger409":{"x-has-customfields":false,"type":"object","title":"409","properties":{"description":{"x-samplevalue":"Conflict - If a resource being created already exists","type":"string"}}},"objectsMetadata":{"properties":{"fields":{"items":{"$ref":"#/definitions/objectsMetadataFields"},"type":"array"}},"type":"object"},"swaggertags":{"x-has-customfields":false,"title":"tags","properties":{"name":{"x-samplevalue":"contacts","type":"string"}},"type":"object"},"forms":{"properties":{"id":{"format":"int32","type":"integer","x-samplevalue":1},"name":{"type":"string","x-samplevalue":"Example Intake Form"},"values":{"items":{"$ref":"#/definitions/values"},"type":"array"}},"title":"forms","x-has-customfields":false,"type":"object"},"Pong":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"}},"type":"object"}},"swagger":"2.0","info":{"contact":{"email":"support@cloud-elements.com"},"title":"acuityscheduling","version":"api-v2"},"tags":[{"name":"appointments"},{"name":"appointment-types"},{"name":"calendars"},{"name":"ping"},{"name":"available-times"},{"name":"objects"},{"name":"publish"},{"name":"objectName"},{"name":"export"}]}