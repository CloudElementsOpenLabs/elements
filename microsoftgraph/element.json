{
  "configuration": [
    {
      "internal": false,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "subscriptionId",
      "active": true,
      "description": "subscriptionId",
      "type": "TEXTFIELD_128",
      "groupControl": false,
      "resellerConfig": false,
      "key": "subscriptionId",
      "required": false
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "0",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph Pagination Start Index",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Pagination Start Index",
      "groupControl": false,
      "key": "pagination.page.startindex"
    },
    {
      "internal": true,
      "companyConfig": false,
      "defaultValue": "10",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth Refresh Interval (s)",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "OAuth Refresh Interval (s)",
      "groupControl": false,
      "key": "oauth.user.refresh_interval"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "page",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph Pagination Type",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Pagination Type",
      "groupControl": false,
      "key": "pagination.type"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "https://graph.microsoft.com/v1.0",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph Base URL",
      "type": "TEXTFIELD_1000",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Base URL",
      "groupControl": false,
      "key": "base.url"
    },
    {
      "internal": true,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "OAuth Refresh Time",
      "active": true,
      "description": "Microsoft Graph OAuth Refresh Time",
      "type": "TEXTFIELD_64",
      "groupControl": false,
      "resellerConfig": false,
      "key": "oauth.user.refresh_time",
      "required": false
    },
    {
      "internal": true,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "OAuth Refresh Token",
      "active": true,
      "description": "Microsoft Graph OAuth Refresh Token",
      "type": "TEXTFIELD_64",
      "groupControl": false,
      "resellerConfig": false,
      "key": "oauth.user.refresh_token",
      "required": false
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "100",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph Max Page Size (or limit)",
      "type": "TEXTFIELD_32",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Max Page Size (or limit)",
      "groupControl": false,
      "key": "pagination.max"
    },
    {
      "internal": true,
      "companyConfig": false,
      "defaultValue": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth Authorization URL",
      "type": "TEXTFIELD_1000",
      "resellerConfig": false,
      "required": true,
      "hideFromConsole": true,
      "name": "OAuth Authorization URL",
      "groupControl": false,
      "key": "oauth.authorization.url"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "true",
      "displayOrder": 1,
      "active": true,
      "description": "Enables use of global fields query parameter to filter response to only specified fields. This will override any existing vendor functionality on the connector",
      "type": "BOOLEAN",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Allow Select Fields parameter",
      "groupControl": false,
      "key": "allow.select.fields"
    },
    {
      "internal": true,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "OAuth Access Token",
      "active": true,
      "description": "Microsoft Graph OAuth Access Token",
      "type": "TEXTFIELD_32",
      "groupControl": false,
      "resellerConfig": false,
      "key": "oauth.user.token",
      "required": false
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "true",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth basic header",
      "type": "BOOLEAN",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "OAuth basic header",
      "groupControl": false,
      "key": "oauth.basic.header"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "offline_access Group.ReadWrite.All User.Read.All User.ReadWrite.All Group.ReadWrite.All",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth Scope",
      "type": "TEXTFIELD_64",
      "resellerConfig": false,
      "required": true,
      "hideFromConsole": false,
      "name": "OAuth Scope",
      "groupControl": false,
      "key": "oauth.scope"
    },
    {
      "internal": false,
      "hideFromConsole": false,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "OAuth API Key",
      "active": true,
      "description": "Microsoft Graph OAuth API Key",
      "type": "TEXTFIELD_128",
      "groupControl": false,
      "resellerConfig": false,
      "key": "oauth.api.key",
      "required": false
    },
    {
      "internal": false,
      "hideFromConsole": false,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "OAuth API Secret",
      "active": true,
      "description": "Microsoft Graph OAuth API Secret",
      "type": "PASSWORD",
      "groupControl": false,
      "resellerConfig": false,
      "key": "oauth.api.secret",
      "required": false
    },
    {
      "internal": true,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 1,
      "name": "OAuth Token Revoke URL",
      "active": true,
      "description": "Microsoft Graph OAuth Token Revoke URL",
      "type": "TEXTFIELD_1000",
      "groupControl": false,
      "resellerConfig": false,
      "key": "oauth.token.revoke_url",
      "required": false
    },
    {
      "internal": true,
      "companyConfig": false,
      "defaultValue": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth Token Refresh URL",
      "type": "TEXTFIELD_1000",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "OAuth Token Refresh URL",
      "groupControl": false,
      "key": "oauth.token.refresh_url"
    },
    {
      "internal": true,
      "companyConfig": false,
      "defaultValue": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth Token URL",
      "type": "TEXTFIELD_1000",
      "resellerConfig": false,
      "required": true,
      "hideFromConsole": true,
      "name": "OAuth Token URL",
      "groupControl": false,
      "key": "oauth.token.url"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "{insert_base_url}/elements/jsp/home.jsp",
      "displayOrder": 1,
      "active": true,
      "description": "Microsoft Graph OAuth Callback URL",
      "type": "TEXTFIELD_1000",
      "resellerConfig": false,
      "required": true,
      "hideFromConsole": true,
      "name": "OAuth Callback URL",
      "groupControl": false,
      "key": "oauth.callback.url"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "true",
      "displayOrder": 1,
      "active": true,
      "description": "Used to enable/disable filtering of null values from the responses.",
      "type": "BOOLEAN",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": false,
      "name": "Filter null values from the response",
      "groupControl": false,
      "key": "filter.response.nulls"
    },
    {
      "internal": false,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 11,
      "name": "Event Notification Signature Key",
      "active": true,
      "description": "Microsoft Graph Event Notification Signature Key",
      "type": "TEXTFIELD_128",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.signature.key",
      "required": false
    },
    {
      "internal": false,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 98,
      "name": "Default select fields",
      "active": true,
      "description": "Generic map used to specify default fields for bulk download and GET /all requests. Each key should be the canonical objectName and values may be specified as a comma-delimited string or a list of strings",
      "type": "TEXTAREA",
      "groupControl": false,
      "resellerConfig": false,
      "key": "default.select.fields.map",
      "required": false
    },
    {
      "internal": true,
      "companyConfig": false,
      "defaultValue": "webhooks",
      "displayOrder": 100,
      "active": true,
      "description": "Event Type",
      "type": "TEXTFIELD_128",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": true,
      "name": "Event Type",
      "groupControl": false,
      "key": "event.vendor.type"
    },
    {
      "internal": false,
      "companyConfig": false,
      "defaultValue": "false",
      "displayOrder": 101,
      "active": true,
      "description": "Enable/Disable Event Notification",
      "type": "BOOLEAN",
      "resellerConfig": false,
      "required": false,
      "hideFromConsole": false,
      "name": "Event Notifications Enabled",
      "groupControl": false,
      "key": "event.notification.enabled"
    },
    {
      "internal": false,
      "hideFromConsole": false,
      "companyConfig": false,
      "displayOrder": 102,
      "name": "Event Notification Callback URL",
      "active": true,
      "description": "Event Notification Callback URL",
      "type": "TEXTFIELD_1000",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.callback.url",
      "required": false
    },
    {
      "internal": false,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 103,
      "name": "Event Notification Instance Finder",
      "active": true,
      "description": "Event Notification Instance Finder",
      "type": "TEXTFIELD_1000",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.instance.finder",
      "required": false
    },
    {
      "internal": false,
      "hideFromConsole": true,
      "companyConfig": false,
      "displayOrder": 104,
      "name": "Event Notification Subscription ID",
      "active": true,
      "description": "Event Notification Subscription ID",
      "type": "TEXTFIELD_1000",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.subscription.id",
      "required": false
    },
    {
      "internal": false,
      "hideFromConsole": false,
      "companyConfig": false,
      "displayOrder": 110,
      "name": "Event Notification Basic Authentication UserName",
      "active": true,
      "description": "Event Notification basic authentication username",
      "type": "TEXTFIELD_1000",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.basic.username",
      "required": false
    },
    {
      "internal": false,
      "hideFromConsole": false,
      "companyConfig": false,
      "displayOrder": 112,
      "name": "Event Notification Basic Authentication Password",
      "active": true,
      "description": "Event Notification basic authentication password",
      "type": "PASSWORD",
      "groupControl": false,
      "resellerConfig": false,
      "key": "event.notification.basic.password",
      "required": false
    }
  ],
  "objects": [],
  "description": "Add a Microsoft Graph instance to connect your existing account allowing you to manage calendars and sync to a variety of microsoft endpoints. You will need your AWS account information to add an instance",
  "cloneable": true,
  "extended": false,
  "bulkDownloadEnabled": false,
  "useModelsForMetadata": true,
  "trialAccount": false,
  "logo": "microsoftgraph",
  "hooks": [],
  "beta": false,
  "key": "microsoftgraph",
  "authentication": {
    "type": "oauth2"
  },
  "bulkUploadEnabled": false,
  "image": "http://developers.cloud-elements.com/assets/img/default-ce-logo-element-builder.png",
  "models": [],
  "active": true,
  "resources": [
    {
      "method": "GET",
      "kind": "eb",
      "description": "Search all calendars an user has access to",
      "type": "api",
      "vendorPath": "/me/calendars",
      "path": "/hubs/general/calendars",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "calendarsList",
        "swagger": {
          "owner": {
            "x-has-customfields": false,
            "title": "owner",
            "type": "object",
            "properties": {
              "address": {
                "x-samplevalue": "cloudelements6@cloudelements6.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "claude elements",
                "type": "string"
              }
            }
          },
          "calendarsList": {
            "x-has-customfields": false,
            "title": "calendarsList",
            "properties": {
              "owner": {
                "type": "owner"
              },
              "changeKey": {
                "x-samplevalue": "x85BSBCCkk21rS4rXhnI2QAAAqr6zQ==",
                "type": "string"
              },
              "color": {
                "x-samplevalue": "auto",
                "type": "string"
              },
              "canEdit": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "canShare": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "name": {
                "x-samplevalue": "Calendar",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "AAMkAGY4MDgzNjBkLWRmZTEtNGRjYy05MTgyLTQzNjZlYjIxZThhMQBGAAAAAADgOYA3opc2TKP4lKdcSZilBwDHzkFIEIKSTbWtLiteGcjZAAAAAAEGAADHzkFIEIKSTbWtLiteGcjZAAACqtQaAAA=",
                "type": "string"
              },
              "canViewPrivateItems": {
                "x-samplevalue": true,
                "type": "boolean"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "query",
          "converter": "toODataFilter",
          "dataType": "string",
          "name": "where",
          "description": "The CEQL search expression. For example: name like 'test'",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "converter:toODataFilter",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "orderBy",
          "description": "Specifies the order of the result set, a valid order by query would be: name desc",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$orderBy",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$top",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve ",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$skip",
          "required": false
        }
      ],
      "rootKey": "|value"
    },
    {
      "method": "POST",
      "kind": "eb",
      "description": "Create a calendar",
      "type": "api",
      "vendorPath": "/me/calendars",
      "path": "/hubs/general/calendars",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "POST",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "requestName": "calendarsPost",
        "transform": false,
        "name": "calendars",
        "requestSwagger": {
          "calendarsPost": {
            "x-has-customfields": false,
            "title": "calendarsPost",
            "properties": {
              "name": {
                "x-samplevalue": "test",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "swagger": {
          "owner": {
            "x-has-customfields": false,
            "title": "owner",
            "type": "object",
            "x-vendor-objectname": "owner",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@adatum.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "calendars": {
            "x-has-customfields": false,
            "title": "calendars",
            "properties": {
              "owner": {
                "type": "owner"
              },
              "changeKey": {
                "x-samplevalue": "DxYSthXJXEWwAQSYQnXvIgAAIxGttg==",
                "type": "string"
              },
              "color": {
                "x-samplevalue": "auto",
                "type": "string"
              },
              "canEdit": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "canShare": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "name": {
                "x-samplevalue": "Volunteer",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "AAMkADJmMVAAA=",
                "type": "string"
              },
              "canViewPrivateItems": {
                "x-samplevalue": true,
                "type": "boolean"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "calendarsPost",
          "name": "body",
          "description": "The calendar body",
          "vendorDataType": "calendarsPost",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        }
      ]
    },
    {
      "path": "/hubs/general/calendars/{calendarId}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "DELETE",
      "method": "DELETE",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Delete a calendar by id",
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "deletes a calendar by id",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "vendorPath": "/me/calendars/{id}"
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Retrieve a calendar an user has access to",
      "type": "api",
      "vendorPath": "/me/calendars/{id}",
      "path": "/hubs/general/calendars/{calendarId}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "calendar",
        "swagger": {
          "calendar": {
            "x-has-customfields": false,
            "title": "calendar",
            "properties": {
              "owner": {
                "type": "owner"
              },
              "changeKey": {
                "x-samplevalue": "x85BSBCCkk21rS4rXhnI2QAAAqr6zg==",
                "type": "string"
              },
              "color": {
                "x-samplevalue": "auto",
                "type": "string"
              },
              "canEdit": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "canShare": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "name": {
                "x-samplevalue": "United States holidays",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "AAMkAGY4MDgzNjBkLWRmZTEtNGRjYy05MTgyLTQzNjZlYjIxZThhMQBGAAAAAADgOYA3opc2TKP4lKdcSZilBwDHzkFIEIKSTbWtLiteGcjZAAAAAAEGAADHzkFIEIKSTbWtLiteGcjZAAACqtQbAAA=",
                "type": "string"
              },
              "canViewPrivateItems": {
                "x-samplevalue": true,
                "type": "boolean"
              }
            }
          },
          "owner": {
            "x-has-customfields": false,
            "title": "owner",
            "type": "object",
            "properties": {
              "address": {
                "x-samplevalue": "cloudelements6@cloudelements6.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "claude elements",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "path",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ]
    },
    {
      "method": "PATCH",
      "kind": "eb",
      "description": "Update a calendar",
      "type": "api",
      "vendorPath": "/me/calendars/{id}",
      "path": "/hubs/general/calendars/{calendarId}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "PATCH",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "requestName": "calendarsPatch",
        "transform": false,
        "name": "calendars",
        "requestSwagger": {
          "calendarsPatch": {
            "x-has-customfields": false,
            "title": "calendarsPatch",
            "properties": {
              "name": {
                "x-samplevalue": "example",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "swagger": {
          "owner": {
            "x-has-customfields": false,
            "title": "owner",
            "type": "object",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@adatum.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            },
            "x-vendor-object": "owner"
          },
          "calendars": {
            "x-has-customfields": false,
            "title": "calendars",
            "properties": {
              "owner": {
                "type": "owner"
              },
              "changeKey": {
                "x-samplevalue": "DxYSthXJXEWwAQSYQnXvIgAAIxGttg==",
                "type": "string"
              },
              "color": {
                "x-samplevalue": "auto",
                "type": "string"
              },
              "canEdit": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "canShare": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "name": {
                "x-samplevalue": "Volunteer",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "AAMkADJmMVAAA=",
                "type": "string"
              },
              "canViewPrivateItems": {
                "x-samplevalue": true,
                "type": "boolean"
              }
            },
            "x-vendor-object": "calendars"
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "calendarsPatch",
          "name": "body",
          "description": "The calendar body",
          "vendorDataType": "calendarsPatch",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "The id of the calendar",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ]
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Search for events on a calendar",
      "type": "api",
      "vendorPath": "/me/calendars/{id}/events",
      "path": "/hubs/general/calendars/{calendarId}/events",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "calendarsEventsList",
        "swagger": {
          "calendarsEventsList": {
            "type": "array",
            "items": {
              "$ref": "calendarsEventsListGet"
            }
          },
          "emailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "emailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "attendees": {
            "x-has-customfields": false,
            "title": "attendees",
            "x-vendor-objectname": "attendees",
            "properties": {
              "emailAddress": {
                "type": "emailAddress"
              },
              "type": {
                "x-samplevalue": "required",
                "type": "string"
              },
              "status": {
                "type": "status"
              }
            }
          },
          "organizer": {
            "x-has-customfields": false,
            "title": "organizer",
            "type": "object",
            "x-vendor-objectname": "organizer",
            "properties": {
              "emailAddress": {
                "type": "organizeremailAddress"
              }
            }
          },
          "start": {
            "x-has-customfields": false,
            "title": "start",
            "type": "object",
            "x-vendor-objectname": "start",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2017-04-21T10:00:00.0000000",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "Pacific Standard Time",
                "type": "string"
              }
            }
          },
          "organizeremailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "organizeremailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "end": {
            "x-has-customfields": false,
            "title": "end",
            "type": "object",
            "x-vendor-objectname": "end",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2017-04-21T12:00:00.0000000",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "Pacific Standard Time",
                "type": "string"
              }
            }
          },
          "location": {
            "x-has-customfields": false,
            "title": "location",
            "type": "object",
            "x-vendor-objectname": "location",
            "properties": {
              "displayName": {
                "x-samplevalue": "Assembly Hall",
                "type": "string"
              }
            }
          },
          "body": {
            "x-has-customfields": false,
            "title": "body",
            "type": "object",
            "x-vendor-objectname": "body",
            "properties": {
              "contentType": {
                "x-samplevalue": "html",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html><head></head><body><p>Dana, this is the time you selected for our orientation. Please bring the notes I sent you.</p></body></html>",
                "type": "string"
              }
            }
          },
          "calendarsEventsListGet": {
            "x-has-customfields": false,
            "title": "calendarsEventsList",
            "x-vendor-objectname": "events",
            "properties": {
              "attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/attendees"
                }
              },
              "organizer": {
                "type": "organizer"
              },
              "subject": {
                "x-samplevalue": "Orientation ",
                "type": "string"
              },
              "start": {
                "type": "start"
              },
              "bodyPreview": {
                "x-samplevalue": "Dana, this is the time you selected for our orientation. Please bring the notes I sent you.",
                "type": "string"
              },
              "end": {
                "type": "end"
              },
              "location": {
                "type": "location"
              },
              "id": {
                "x-samplevalue": "AAMkAGIAAAoZDOFAAA=",
                "type": "string"
              },
              "body": {
                "type": "body"
              }
            }
          },
          "status": {
            "x-has-customfields": false,
            "title": "status",
            "type": "object",
            "x-vendor-objectname": "status",
            "properties": {
              "response": {
                "x-samplevalue": "none",
                "type": "string"
              },
              "time": {
                "x-samplevalue": "0001-01-01T00:00:00Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$skip",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$top",
          "required": false
        },
        {
          "vendorType": "query",
          "converter": "toODataFilter",
          "dataType": "string",
          "name": "where",
          "description": "The CEQL search expression.  A valid query would be: subject like 'tax'",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "converter:toODataFilter",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "orderBy",
          "description": "Specifies the order of the result set, a valid order by query would be: name desc",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$orderBy",
          "required": false
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "The id of the calendar you want to see events on",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "rootKey": "|value"
    },
    {
      "method": "POST",
      "kind": "eb",
      "description": "Create an event on a calendar",
      "type": "api",
      "vendorPath": "/me/calendars/{id}/events",
      "path": "/hubs/general/calendars/{calendarId}/events",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "POST",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "requestName": "eventsPost",
        "transform": false,
        "name": "calendarsEvents",
        "requestSwagger": {
          "eventsPost": {
            "x-has-customfields": false,
            "title": "eventsPost",
            "properties": {
              "subject": {
                "x-samplevalue": "event",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "emailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "emailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "attendees": {
            "x-has-customfields": false,
            "title": "attendees",
            "x-vendor-objectname": "attendees",
            "properties": {
              "emailAddress": {
                "type": "emailAddress"
              },
              "type": {
                "x-samplevalue": "required",
                "type": "string"
              },
              "status": {
                "type": "status"
              }
            }
          },
          "organizer": {
            "x-has-customfields": false,
            "title": "organizer",
            "type": "object",
            "x-vendor-objectname": "organizer",
            "properties": {
              "emailAddress": {
                "type": "organizeremailAddress"
              }
            }
          },
          "start": {
            "x-has-customfields": false,
            "title": "start",
            "type": "object",
            "x-vendor-objectname": "start",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2018-01-30T06:30:00.0003609",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "UTC",
                "type": "string"
              }
            }
          },
          "organizeremailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "organizeremailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "cloudelements6@cloudelements6.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "claude elements",
                "type": "string"
              }
            }
          },
          "end": {
            "x-has-customfields": false,
            "title": "end",
            "type": "object",
            "x-vendor-objectname": "end",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2018-01-30T07:00:00.0003609",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "UTC",
                "type": "string"
              }
            }
          },
          "location": {
            "x-has-customfields": false,
            "title": "location",
            "type": "object",
            "x-vendor-objectname": "location",
            "properties": {
              "displayName": {
                "x-samplevalue": "",
                "type": "string"
              }
            }
          },
          "categories": {
            "x-samplevalue": "example",
            "type": "string",
            "x-vendor-objectname": "categories"
          },
          "body": {
            "x-has-customfields": false,
            "title": "body",
            "type": "object",
            "x-vendor-objectname": "body",
            "properties": {
              "contentType": {
                "x-samplevalue": "text",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "",
                "type": "string"
              }
            }
          },
          "calendarsEvents": {
            "x-has-customfields": false,
            "title": "calendarsEvents",
            "x-vendor-objectname": "events",
            "properties": {
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-01-30T06:21:38.6192365Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
                "format": "date-time",
                "type": "string"
              },
              "importance": {
                "x-samplevalue": "normal",
                "type": "string"
              },
              "subject": {
                "x-samplevalue": "testPost",
                "type": "string"
              },
              "webLink": {
                "x-samplevalue": "https://outlook.office365.com/owa/?itemid=AAMkAGY4MDgzNjBkLWRmZTEtNGRjYy05MTgyLTQzNjZlYjIxZThhMQBGAAAAAADgOYA3opc2TKP4lKdcSZilBwDHzkFIEIKSTbWtLiteGcjZAAB0khYhAADHzkFIEIKSTbWtLiteGcjZAAB14N6gAAA%3D&exvsurl=1&path=/calendar/item",
                "type": "string"
              },
              "iCalUId": {
                "x-samplevalue": "040000008200E00074C5B7101A82E00800000000D91A0F969299D301000000000000000010000000658C98A64243384CA82B85AD16D37D61",
                "type": "string"
              },
              "bodyPreview": {
                "x-samplevalue": "",
                "type": "string"
              },
              "createdDateTime": {
                "x-samplevalue": "2018-01-30T06:21:38.5723609Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
                "format": "date-time",
                "type": "string"
              },
              "body": {
                "type": "body"
              },
              "originalEndTimeZone": {
                "x-samplevalue": "UTC",
                "type": "string"
              },
              "type": {
                "x-samplevalue": "singleInstance",
                "type": "string"
              },
              "isAllDay": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "reminderMinutesBeforeStart": {
                "x-samplevalue": 15,
                "format": "int32",
                "type": "integer"
              },
              "end": {
                "type": "end"
              },
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/categories"
                }
              },
              "id": {
                "x-samplevalue": "AAMkAGY4MDgzNjBkLWRmZTEtNGRjYy05MTgyLTQzNjZlYjIxZThhMQBGAAAAAADgOYA3opc2TKP4lKdcSZilBwDHzkFIEIKSTbWtLiteGcjZAAB0khYhAADHzkFIEIKSTbWtLiteGcjZAAB14N6gAAA=",
                "type": "string"
              },
              "hasAttachments": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "responseRequested": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "isCancelled": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "originalStartTimeZone": {
                "x-samplevalue": "UTC",
                "type": "string"
              },
              "showAs": {
                "x-samplevalue": "busy",
                "type": "string"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/attendees"
                }
              },
              "isReminderOn": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "start": {
                "type": "start"
              },
              "responseStatus": {
                "type": "responseStatus"
              },
              "changeKey": {
                "x-samplevalue": "x85BSBCCkk21rS4rXhnI2QAAdfADDg==",
                "type": "string"
              },
              "isOrganizer": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "organizer": {
                "type": "organizer"
              },
              "location": {
                "type": "location"
              },
              "sensitivity": {
                "x-samplevalue": "normal",
                "type": "string"
              }
            }
          },
          "responseStatus": {
            "x-has-customfields": false,
            "title": "responseStatus",
            "type": "object",
            "x-vendor-objectname": "responseStatus",
            "properties": {
              "response": {
                "x-samplevalue": "organizer",
                "type": "string"
              },
              "time": {
                "x-samplevalue": "0001-01-01T00:00:00Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              }
            }
          },
          "status": {
            "x-has-customfields": false,
            "title": "status",
            "type": "object",
            "x-vendor-objectname": "status",
            "properties": {
              "response": {
                "x-samplevalue": "none",
                "type": "string"
              },
              "time": {
                "x-samplevalue": "0001-01-01T00:00:00Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "The id of the calendar",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "body",
          "dataType": "eventsPost",
          "name": "body",
          "description": "The event body",
          "vendorDataType": "eventsPost",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        }
      ]
    },
    {
      "path": "/hubs/general/calendars/{calendarId}/events/{eventId}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "DELETE",
      "method": "DELETE",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Delete an event on a calendar",
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "no-op",
          "dataType": "string",
          "name": "calendarId",
          "description": "the id of the calendar ",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "eventId",
          "description": "the id of the event you want to delete",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "vendorPath": "/me/calendar/events/{id}"
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Retrieve an event from a calendar",
      "type": "api",
      "vendorPath": "/me/calendars/{calid}/events/{id}",
      "path": "/hubs/general/calendars/{calendarId}/events/{eventId}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "calendarsEvents",
        "swagger": {
          "emailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "emailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "attendees": {
            "x-has-customfields": false,
            "title": "attendees",
            "x-vendor-objectname": "attendees",
            "properties": {
              "emailAddress": {
                "type": "emailAddress"
              },
              "type": {
                "x-samplevalue": "required",
                "type": "string"
              },
              "status": {
                "type": "status"
              }
            }
          },
          "organizer": {
            "x-has-customfields": false,
            "title": "organizer",
            "type": "object",
            "x-vendor-objectname": "organizer",
            "properties": {
              "emailAddress": {
                "type": "organizeremailAddress"
              }
            }
          },
          "start": {
            "x-has-customfields": false,
            "title": "start",
            "type": "object",
            "x-vendor-objectname": "start",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2017-04-21T10:00:00.0000000",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "Pacific Standard Time",
                "type": "string"
              }
            }
          },
          "organizeremailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "organizeremailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "end": {
            "x-has-customfields": false,
            "title": "end",
            "type": "object",
            "x-vendor-objectname": "end",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2017-04-21T12:00:00.0000000",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "Pacific Standard Time",
                "type": "string"
              }
            }
          },
          "location": {
            "x-has-customfields": false,
            "title": "location",
            "type": "object",
            "x-vendor-objectname": "location",
            "properties": {
              "displayName": {
                "x-samplevalue": "Assembly Hall",
                "type": "string"
              }
            }
          },
          "categories": {
            "x-samplevalue": "example",
            "type": "string",
            "x-vendor-objectname": "categories"
          },
          "body": {
            "x-has-customfields": false,
            "title": "body",
            "type": "object",
            "x-vendor-objectname": "body",
            "properties": {
              "contentType": {
                "x-samplevalue": "html",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html><head></head><body><p>Dana, this is the time you selected for our orientation. Please bring the notes I sent you.</p></body></html>",
                "type": "string"
              }
            }
          },
          "calendarsEvents": {
            "x-has-customfields": false,
            "title": "calendarsEvents",
            "properties": {
              "attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/attendees"
                }
              },
              "organizer": {
                "type": "organizer"
              },
              "subject": {
                "x-samplevalue": "Orientation ",
                "type": "string"
              },
              "start": {
                "type": "start"
              },
              "bodyPreview": {
                "x-samplevalue": "Dana, this is the time you selected for our orientation. Please bring the notes I sent you.",
                "type": "string"
              },
              "end": {
                "type": "end"
              },
              "location": {
                "type": "location"
              },
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/categories"
                }
              },
              "id": {
                "x-samplevalue": "AAMkAGIAAAoZDOFAAA=",
                "type": "string"
              },
              "body": {
                "type": "body"
              }
            }
          },
          "status": {
            "x-has-customfields": false,
            "title": "status",
            "type": "object",
            "x-vendor-objectname": "events",
            "properties": {
              "response": {
                "x-samplevalue": "none",
                "type": "string"
              },
              "time": {
                "x-samplevalue": "0001-01-01T00:00:00Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "eventId",
          "description": "The id of the event",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "The id of the calendar",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "calid",
          "required": true
        }
      ]
    },
    {
      "method": "PATCH",
      "kind": "eb",
      "description": "Update an event on a calendar",
      "type": "api",
      "vendorPath": "/me/calendars/{calid}/events/{id}",
      "path": "/hubs/general/calendars/{calendarId}/events/{eventId}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "PATCH",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "requestName": "patchBody",
        "transform": false,
        "name": "calendarsEvents",
        "requestSwagger": {
          "patchBody": {
            "x-has-customfields": false,
            "title": "patchBody",
            "properties": {
              "subject": {
                "x-samplevalue": "updateEvent",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "emailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "emailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "attendees": {
            "x-has-customfields": false,
            "title": "attendees",
            "x-vendor-objectname": "attendees",
            "properties": {
              "emailAddress": {
                "type": "emailAddress"
              },
              "type": {
                "x-samplevalue": "required",
                "type": "string"
              },
              "status": {
                "type": "status"
              }
            }
          },
          "organizer": {
            "x-has-customfields": false,
            "title": "organizer",
            "type": "object",
            "x-vendor-objectname": "organizer",
            "properties": {
              "emailAddress": {
                "type": "organizeremailAddress"
              }
            }
          },
          "start": {
            "x-has-customfields": false,
            "title": "start",
            "type": "object",
            "x-vendor-objectname": "start",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2017-04-21T10:00:00.0000000",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "Pacific Standard Time",
                "type": "string"
              }
            }
          },
          "organizeremailAddress": {
            "x-has-customfields": false,
            "title": "emailAddress",
            "type": "object",
            "x-vendor-objectname": "organizeremailAddress",
            "properties": {
              "address": {
                "x-samplevalue": "samanthab@a830edad905084922E17020313.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Samantha Booth",
                "type": "string"
              }
            }
          },
          "end": {
            "x-has-customfields": false,
            "title": "end",
            "type": "object",
            "x-vendor-objectname": "end",
            "properties": {
              "dateTime": {
                "x-samplevalue": "2017-04-21T12:00:00.0000000",
                "type": "string"
              },
              "timeZone": {
                "x-samplevalue": "Pacific Standard Time",
                "type": "string"
              }
            }
          },
          "location": {
            "x-has-customfields": false,
            "title": "location",
            "type": "object",
            "x-vendor-objectname": "location",
            "properties": {
              "displayName": {
                "x-samplevalue": "Assembly Hall",
                "type": "string"
              }
            }
          },
          "categories": {
            "x-samplevalue": "example",
            "type": "string",
            "x-vendor-objectname": "categories"
          },
          "body": {
            "x-has-customfields": false,
            "title": "body",
            "type": "object",
            "x-vendor-objectname": "body",
            "properties": {
              "contentType": {
                "x-samplevalue": "html",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html><head></head><body><p>Dana, this is the time you selected for our orientation. Please bring the notes I sent you.</p></body></html>",
                "type": "string"
              }
            }
          },
          "calendarsEvents": {
            "x-has-customfields": false,
            "title": "calendarsEvents",
            "properties": {
              "attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/attendees"
                }
              },
              "organizer": {
                "type": "organizer"
              },
              "subject": {
                "x-samplevalue": "Orientation ",
                "type": "string"
              },
              "start": {
                "type": "start"
              },
              "bodyPreview": {
                "x-samplevalue": "Dana, this is the time you selected for our orientation. Please bring the notes I sent you.",
                "type": "string"
              },
              "end": {
                "type": "end"
              },
              "location": {
                "type": "location"
              },
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/categories"
                }
              },
              "id": {
                "x-samplevalue": "AAMkAGIAAAoZDOFAAA=",
                "type": "string"
              },
              "body": {
                "type": "body"
              }
            }
          },
          "status": {
            "x-has-customfields": false,
            "title": "status",
            "type": "object",
            "x-vendor-objectname": "events",
            "properties": {
              "response": {
                "x-samplevalue": "none",
                "type": "string"
              },
              "time": {
                "x-samplevalue": "0001-01-01T00:00:00Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "patchBody",
          "name": "body",
          "description": "the body of the event to patch",
          "vendorDataType": "patchBody",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "eventId",
          "description": "The id of the event you are updating",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "calendarId",
          "description": "The calendar id",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "calid",
          "required": true
        }
      ]
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Search for contacts",
      "type": "api",
      "vendorPath": "/me/contacts",
      "path": "/hubs/general/contacts",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "contactsList",
        "swagger": {
          "HomeAddress": {
            "x-has-customfields": false,
            "title": "HomeAddress",
            "x-vendor-objectname": "HomeAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contactsList": {
            "type": "array",
            "items": {
              "$ref": "contacts"
            },
            "x-vendor-objectname": "Contacts"
          },
          "EmailAddresses": {
            "x-has-customfields": false,
            "title": "EmailAddresses",
            "x-vendor-objectname": "EmailAddress",
            "properties": {
              "Address": {
                "x-samplevalue": "pavelb@a830edad9050849NDA1.onmicrosoft.com",
                "description": "The email address of the person or entity",
                "type": "string"
              },
              "Name": {
                "x-samplevalue": "Pavel Bansky",
                "description": "The display name of the person or entity",
                "type": "string"
              }
            }
          },
          "OtherAddress": {
            "x-has-customfields": false,
            "title": "OtherAddress",
            "x-vendor-objectname": "OtherAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "BusinessAddress": {
            "x-has-customfields": false,
            "title": "BusinessAddress",
            "x-vendor-objectname": "Business Address",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contacts": {
            "x-primary-key": [
              "Id"
            ],
            "x-has-customfields": false,
            "title": "contacts",
            "x-vendor-objectname": "Contacts",
            "properties": {
              "ChangeKey": {
                "description": "Identifies the version of the contact. Every time the contact is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object",
                "type": "string"
              },
              "HomeAddress": {
                "description": "The contact's home address",
                "type": "HomeAddress"
              },
              "FileAs": {
                "description": "The name the contact is filed under",
                "type": "string"
              },
              "lastModifiedDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "YomiCompanyName": {
                "x-sub-format": "Company Name",
                "description": "The phonetic Japanese company name of the contact",
                "type": "string"
              },
              "AssistantName": {
                "x-samplevalue": "Peter",
                "x-displayName": "AssistantName",
                "description": "The name of the contact's assistant",
                "type": "string"
              },
              "GivenName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Pavel",
                "x-name": true,
                "description": "The contact's given name",
                "type": "string"
              },
              "createdDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "Birthday": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-ddThh:mm:ssZ",
                "format": "date-time",
                "x-displayName": "Birthday",
                "description": "The contact's birthday",
                "type": "string"
              },
              "Manager": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Walter B.",
                "description": "The name of the contact's manager",
                "type": "string"
              },
              "JobTitle": {
                "x-sub-format": "Job Title",
                "x-samplevalue": "SSE",
                "description": "The contact's job title",
                "type": "string"
              },
              "CompanyName": {
                "x-sub-format": "Company Name",
                "x-samplevalue": "Alister Co.",
                "description": "The name of the contact's company",
                "type": "string"
              },
              "@odata.id": {
                "type": "string"
              },
              "Department": {
                "x-samplevalue": "Sales",
                "description": "The contact's department",
                "type": "string"
              },
              "PersonalNotes": {
                "x-samplevalue": "Sample notes",
                "description": "The user's notes about the contact",
                "type": "string"
              },
              "DisplayName": {
                "x-samplevalue": "Peter",
                "description": "The contact's display name",
                "type": "string"
              },
              "Children": {
                "x-samplevalue": [
                  "OLIVIA"
                ],
                "description": "The names of the contact's children",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HomePhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's home phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "YomiGivenName": {
                "x-sub-format": "Full Name",
                "description": "The phonetic Japanese given name (first name) of the contact",
                "type": "string"
              },
              "BusinessHomePage": {
                "x-displayName": "BusinessHomePage",
                "description": "The business home page of the contact",
                "type": "string"
              },
              "Categories": {
                "x-samplevalue": [
                  "HOME"
                ],
                "description": "The categories associated with the contact",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "@odata.etag": {
                "type": "string"
              },
              "MobilePhone1": {
                "x-sub-format": "Phone",
                "x-samplevalue": "9876785436",
                "type": "string",
                "x-description": "The contact's mobile phone number"
              },
              "Title": {
                "x-samplevalue": "Title",
                "description": "The contact's title",
                "type": "string"
              },
              "Initials": {
                "x-samplevalue": "Mr.",
                "description": "The contact's initials",
                "type": "string"
              },
              "MiddleName": {
                "x-samplevalue": "John",
                "description": "The contact's middle name",
                "type": "string"
              },
              "NickName": {
                "x-samplevalue": "PB",
                "description": "The contact's nickname",
                "type": "string"
              },
              "SpouseName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Olivia",
                "description": "The name of the contact's spouse",
                "type": "string"
              },
              "BusinessAddress": {
                "description": "The contact's business address",
                "type": "BusinessAddress"
              },
              "ParentFolderId": {
                "description": "The ID of the contact's parent folder",
                "type": "string"
              },
              "ImAddresses": {
                "x-samplevalue": [
                  "Peter12"
                ],
                "description": "The contact's instant messaging (IM) addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Generation": {
                "description": "The contact's generation",
                "type": "string"
              },
              "Profession": {
                "x-sub-format": "Doctor",
                "description": "The contact's profession",
                "type": "string"
              },
              "YomiSurname": {
                "x-sub-format": "Last Name",
                "description": "The phonetic Japanese surname (last name) of the contact",
                "type": "string"
              },
              "EmailAddresses": {
                "description": "The contact's email addresses",
                "type": "array",
                "items": {
                  "$ref": "EmailAddresses"
                }
              },
              "OfficeLocation": {
                "x-samplevalue": "Street 1, NY",
                "description": "The location of the contact's office",
                "type": "string"
              },
              "OtherAddress": {
                "description": "Other addresses for the contact",
                "type": "OtherAddress"
              },
              "BusinessPhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's business phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Id": {
                "description": "The contact's unique identifier",
                "x-readOnly": true,
                "type": "string"
              },
              "Surname": {
                "x-sub-format": "Last Name",
                "x-samplevalue": "Bansky",
                "description": "The contact's surname",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve ",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$skip",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The page size. Defaults to 100 if not provided",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$top",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "orderBy",
          "description": "Specifies the order of the result set, a valid order by query would be: GivenName desc",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$orderBy",
          "required": false
        },
        {
          "vendorType": "query",
          "converter": "toODataFilter",
          "dataType": "string",
          "name": "where",
          "description": "The CEQL search expression. For example: DisplayName = 'Peter'",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "converter:toODataFilter",
          "required": false
        }
      ],
      "rootKey": "|value"
    },
    {
      "path": "/hubs/general/contacts",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Create a contact",
      "model": {
        "requestName": "contactsPostReq",
        "transform": false,
        "name": "contactsPostRes",
        "requestSwagger": {
          "HomeAddress": {
            "x-has-customfields": false,
            "title": "HomeAddress",
            "x-vendor-objectname": "HomeAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contactsPostReq": {
            "x-has-customfields": false,
            "title": "contactsPostReq",
            "x-vendor-objectname": "Contacts",
            "properties": {
              "HomeAddress": {
                "description": "The contact's home address",
                "type": "HomeAddress"
              },
              "FileAs": {
                "description": "The name the contact is filed under",
                "type": "string"
              },
              "YomiCompanyName": {
                "x-sub-format": "Company Name",
                "description": "The phonetic Japanese company name of the contact",
                "type": "string"
              },
              "AssistantName": {
                "x-samplevalue": "Peter",
                "x-displayName": "AssistantName",
                "description": "The name of the contact's assistant",
                "type": "string"
              },
              "GivenName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Pavel",
                "x-name": true,
                "description": "The contact's given name",
                "type": "string"
              },
              "Birthday": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2018-08-07T06:45:27Z",
                "x-mask": "yyyy-mm-ddThh:mm:ssZ",
                "format": "date-time",
                "x-displayName": "Birthday",
                "description": "The contact's birthday",
                "type": "string"
              },
              "Manager": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Walter B.",
                "description": "The name of the contact's manager",
                "type": "string"
              },
              "JobTitle": {
                "x-sub-format": "Job Title",
                "x-samplevalue": "SSE",
                "description": "The contact's job title",
                "type": "string"
              },
              "CompanyName": {
                "x-sub-format": "Company Name",
                "x-samplevalue": "Alister Co.",
                "description": "The name of the contact's company",
                "type": "string"
              },
              "Department": {
                "x-samplevalue": "Sales",
                "description": "The contact's department",
                "type": "string"
              },
              "PersonalNotes": {
                "x-samplevalue": "Sample notes",
                "description": "The user's notes about the contact",
                "type": "string"
              },
              "DisplayName": {
                "x-samplevalue": "Peter",
                "description": "The contact's display name",
                "type": "string"
              },
              "Children": {
                "x-samplevalue": [
                  "OLIVIA"
                ],
                "description": "The names of the contact's children",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HomePhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's home phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "YomiGivenName": {
                "x-sub-format": "Full Name",
                "description": "The phonetic Japanese given name (first name) of the contact",
                "type": "string"
              },
              "BusinessHomePage": {
                "x-displayName": "BusinessHomePage",
                "description": "The business home page of the contact",
                "type": "string"
              },
              "Categories": {
                "x-samplevalue": [
                  "HOME"
                ],
                "description": "The categories associated with the contact",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "MobilePhone1": {
                "x-sub-format": "Phone",
                "x-samplevalue": "9876785436",
                "type": "string",
                "x-description": "The contact's mobile phone number"
              },
              "Title": {
                "x-samplevalue": "Title",
                "description": "The contact's title",
                "type": "string"
              },
              "Initials": {
                "x-samplevalue": "Mr.",
                "description": "The contact's initials",
                "type": "string"
              },
              "MiddleName": {
                "x-samplevalue": "John",
                "description": "The contact's middle name",
                "type": "string"
              },
              "NickName": {
                "x-samplevalue": "PB",
                "description": "The contact's nickname",
                "type": "string"
              },
              "SpouseName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Olivia",
                "description": "The name of the contact's spouse",
                "type": "string"
              },
              "BusinessAddress": {
                "description": "The contact's business address",
                "type": "BusinessAddress"
              },
              "ImAddresses": {
                "x-samplevalue": [
                  "Peter12"
                ],
                "description": "The contact's instant messaging (IM) addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Generation": {
                "description": "The contact's generation",
                "type": "string"
              },
              "Profession": {
                "x-sub-format": "Doctor",
                "description": "The contact's profession",
                "type": "string"
              },
              "YomiSurname": {
                "x-sub-format": "Last Name",
                "description": "The phonetic Japanese surname (last name) of the contact",
                "type": "string"
              },
              "EmailAddresses": {
                "description": "The contact's email addresses",
                "type": "array",
                "items": {
                  "type": "EmailAddresses"
                }
              },
              "OfficeLocation": {
                "x-samplevalue": "Street 1, NY",
                "description": "The location of the contact's office",
                "type": "string"
              },
              "OtherAddress": {
                "description": "Other addresses for the contact",
                "type": "OtherAddress"
              },
              "BusinessPhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's business phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Surname": {
                "x-sub-format": "Last Name",
                "x-samplevalue": "Bansky",
                "description": "The contact's surname",
                "type": "string"
              }
            },
            "required": [
              "GivenName"
            ]
          },
          "EmailAddresses": {
            "x-has-customfields": false,
            "title": "EmailAddresses",
            "x-vendor-objectname": "EmailAddress",
            "properties": {
              "Address": {
                "x-samplevalue": "pavelb@a830edad9050849NDA1.onmicrosoft.com",
                "description": "The email address of the person or entity",
                "type": "string"
              },
              "Name": {
                "x-samplevalue": "Pavel Bansky",
                "description": "The display name of the person or entity",
                "type": "string"
              }
            }
          },
          "OtherAddress": {
            "x-has-customfields": false,
            "title": "OtherAddress",
            "x-vendor-objectname": "OtherAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "BusinessAddress": {
            "x-has-customfields": false,
            "title": "BusinessAddress",
            "x-vendor-objectname": "Business Address",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "HomeAddress": {
            "x-has-customfields": false,
            "title": "HomeAddress",
            "x-vendor-objectname": "HomeAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contactsPostRes": {
            "x-primary-key": [
              "Id"
            ],
            "x-has-customfields": false,
            "title": "contactsPostRes",
            "x-vendor-objectname": "Contacts",
            "properties": {
              "ChangeKey": {
                "description": "Identifies the version of the contact. Every time the contact is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object",
                "type": "string"
              },
              "HomeAddress": {
                "description": "The contact's home address",
                "type": "HomeAddress"
              },
              "FileAs": {
                "description": "The name the contact is filed under",
                "type": "string"
              },
              "lastModifiedDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "YomiCompanyName": {
                "x-sub-format": "Company Name",
                "description": "The phonetic Japanese company name of the contact",
                "type": "string"
              },
              "AssistantName": {
                "x-samplevalue": "Peter",
                "x-displayName": "AssistantName",
                "description": "The name of the contact's assistant",
                "type": "string"
              },
              "GivenName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Pavel",
                "x-name": true,
                "description": "The contact's given name",
                "type": "string"
              },
              "createdDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "Birthday": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-mask": "yyyy-mm-ddThh:mm:ssZ",
                "format": "date-time",
                "x-displayName": "Birthday",
                "description": "The contact's birthday",
                "type": "string"
              },
              "Manager": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Walter B.",
                "description": "The name of the contact's manager",
                "type": "string"
              },
              "JobTitle": {
                "x-sub-format": "Job Title",
                "x-samplevalue": "SSE",
                "description": "The contact's job title",
                "type": "string"
              },
              "CompanyName": {
                "x-sub-format": "Company Name",
                "x-samplevalue": "Alister Co.",
                "description": "The name of the contact's company",
                "type": "string"
              },
              "@odata.id": {
                "type": "string"
              },
              "Department": {
                "x-samplevalue": "Sales",
                "description": "The contact's department",
                "type": "string"
              },
              "PersonalNotes": {
                "x-samplevalue": "Sample notes",
                "description": "The user's notes about the contact",
                "type": "string"
              },
              "DisplayName": {
                "x-samplevalue": "Peter",
                "description": "The contact's display name",
                "type": "string"
              },
              "Children": {
                "x-samplevalue": [
                  "OLIVIA"
                ],
                "description": "The names of the contact's children",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HomePhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's home phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "YomiGivenName": {
                "x-sub-format": "Full Name",
                "description": "The phonetic Japanese given name (first name) of the contact",
                "type": "string"
              },
              "BusinessHomePage": {
                "x-displayName": "BusinessHomePage",
                "description": "The business home page of the contact",
                "type": "string"
              },
              "Categories": {
                "x-samplevalue": [
                  "HOME"
                ],
                "description": "The categories associated with the contact",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "@odata.etag": {
                "type": "string"
              },
              "MobilePhone1": {
                "x-sub-format": "Phone",
                "x-samplevalue": "9876785436",
                "type": "string",
                "x-description": "The contact's mobile phone number"
              },
              "Title": {
                "x-samplevalue": "Title",
                "description": "The contact's title",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "Initials": {
                "x-samplevalue": "Mr.",
                "description": "The contact's initials",
                "type": "string"
              },
              "MiddleName": {
                "x-samplevalue": "John",
                "description": "The contact's middle name",
                "type": "string"
              },
              "NickName": {
                "x-samplevalue": "PB",
                "description": "The contact's nickname",
                "type": "string"
              },
              "SpouseName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Olivia",
                "description": "The name of the contact's spouse",
                "type": "string"
              },
              "BusinessAddress": {
                "description": "The contact's business address",
                "type": "BusinessAddress"
              },
              "ParentFolderId": {
                "description": "The ID of the contact's parent folder",
                "type": "string"
              },
              "ImAddresses": {
                "x-samplevalue": [
                  "Peter12"
                ],
                "description": "The contact's instant messaging (IM) addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Generation": {
                "description": "The contact's generation",
                "type": "string"
              },
              "Profession": {
                "x-sub-format": "Doctor",
                "description": "The contact's profession",
                "type": "string"
              },
              "YomiSurname": {
                "x-sub-format": "Last Name",
                "description": "The phonetic Japanese surname (last name) of the contact",
                "type": "string"
              },
              "EmailAddresses": {
                "description": "The contact's email addresses",
                "type": "array",
                "items": {
                  "$ref": "EmailAddresses"
                }
              },
              "OfficeLocation": {
                "x-samplevalue": "Street 1, NY",
                "description": "The location of the contact's office",
                "type": "string"
              },
              "OtherAddress": {
                "description": "Other addresses for the contact",
                "type": "OtherAddress"
              },
              "BusinessPhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's business phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Id": {
                "description": "The contact's unique identifier",
                "x-readOnly": true,
                "type": "string"
              },
              "Surname": {
                "x-sub-format": "Last Name",
                "x-samplevalue": "Bansky",
                "description": "The contact's surname",
                "type": "string"
              }
            }
          },
          "EmailAddresses": {
            "x-has-customfields": false,
            "title": "EmailAddresses",
            "x-vendor-objectname": "EmailAddress",
            "properties": {
              "Address": {
                "x-samplevalue": "pavelb@a830edad9050849NDA1.onmicrosoft.com",
                "description": "The email address of the person or entity",
                "type": "string"
              },
              "Name": {
                "x-samplevalue": "Pavel Bansky",
                "description": "The display name of the person or entity",
                "type": "string"
              }
            }
          },
          "OtherAddress": {
            "x-has-customfields": false,
            "title": "OtherAddress",
            "x-vendor-objectname": "OtherAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "BusinessAddress": {
            "x-has-customfields": false,
            "title": "BusinessAddress",
            "x-vendor-objectname": "Business Address",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "contactsPostReq",
          "name": "body",
          "description": "The contact object",
          "vendorDataType": "contactsPostReq",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        }
      ],
      "vendorPath": "/me/contacts"
    },
    {
      "path": "/hubs/general/contacts/{id}",
      "vendorMethod": "DELETE",
      "method": "DELETE",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Delete a contact",
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The contact ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "vendorPath": "/me/contacts/{id}"
    },
    {
      "path": "/hubs/general/contacts/{id}",
      "vendorMethod": "GET",
      "method": "GET",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Retrieve a contact",
      "model": {
        "transform": false,
        "name": "contacts",
        "swagger": {
          "HomeAddress": {
            "x-has-customfields": false,
            "title": "HomeAddress",
            "x-vendor-objectname": "HomeAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "EmailAddresses": {
            "x-has-customfields": false,
            "title": "EmailAddresses",
            "x-vendor-objectname": "EmailAddress",
            "properties": {
              "Address": {
                "x-samplevalue": "pavelb@a830edad9050849NDA1.onmicrosoft.com",
                "description": "The email address of the person or entity",
                "type": "string"
              },
              "Name": {
                "x-samplevalue": "Pavel Bansky",
                "description": "The display name of the person or entity",
                "type": "string"
              }
            }
          },
          "OtherAddress": {
            "x-has-customfields": false,
            "title": "OtherAddress",
            "x-vendor-objectname": "OtherAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "BusinessAddress": {
            "x-has-customfields": false,
            "title": "BusinessAddress",
            "x-vendor-objectname": "Business Address",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contacts": {
            "x-primary-key": [
              "Id"
            ],
            "x-has-customfields": false,
            "title": "contacts",
            "x-vendor-objectname": "Contacts",
            "properties": {
              "ChangeKey": {
                "description": "Identifies the version of the contact. Every time the contact is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object",
                "type": "string"
              },
              "HomeAddress": {
                "description": "The contact's home address",
                "type": "HomeAddress"
              },
              "FileAs": {
                "description": "The name the contact is filed under",
                "type": "string"
              },
              "lastModifiedDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "YomiCompanyName": {
                "x-sub-format": "Company Name",
                "description": "The phonetic Japanese company name of the contact",
                "type": "string"
              },
              "AssistantName": {
                "x-samplevalue": "Peter",
                "x-displayName": "AssistantName",
                "description": "The name of the contact's assistant",
                "type": "string"
              },
              "GivenName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Pavel",
                "x-name": true,
                "description": "The contact's given name",
                "type": "string"
              },
              "createdDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "Birthday": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "x-displayName": "Birthday",
                "description": "The contact's birthday",
                "type": "string"
              },
              "Manager": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Walter B.",
                "description": "The name of the contact's manager",
                "type": "string"
              },
              "JobTitle": {
                "x-sub-format": "Job Title",
                "x-samplevalue": "SSE",
                "description": "The contact's job title",
                "type": "string"
              },
              "CompanyName": {
                "x-sub-format": "Company Name",
                "x-samplevalue": "Alister Co.",
                "description": "The name of the contact's company",
                "type": "string"
              },
              "@odata.id": {
                "type": "string"
              },
              "Department": {
                "x-samplevalue": "Sales",
                "description": "The contact's department",
                "type": "string"
              },
              "PersonalNotes": {
                "x-samplevalue": "Sample notes",
                "description": "The user's notes about the contact",
                "type": "string"
              },
              "DisplayName": {
                "x-samplevalue": "Peter",
                "description": "The contact's display name",
                "type": "string"
              },
              "Children": {
                "x-samplevalue": [
                  "OLIVIA"
                ],
                "description": "The names of the contact's children",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HomePhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's home phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "YomiGivenName": {
                "x-sub-format": "Full Name",
                "description": "The phonetic Japanese given name (first name) of the contact",
                "type": "string"
              },
              "BusinessHomePage": {
                "x-displayName": "BusinessHomePage",
                "description": "The business home page of the contact",
                "type": "string"
              },
              "Categories": {
                "x-samplevalue": [
                  "HOME"
                ],
                "description": "The categories associated with the contact",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "@odata.etag": {
                "type": "string"
              },
              "MobilePhone1": {
                "x-sub-format": "Phone",
                "x-samplevalue": "9876785436",
                "type": "string",
                "x-description": "The contact's mobile phone number"
              },
              "Title": {
                "x-samplevalue": "Title",
                "description": "The contact's title",
                "type": "string"
              },
              "Initials": {
                "x-samplevalue": "Mr.",
                "description": "The contact's initials",
                "type": "string"
              },
              "MiddleName": {
                "x-samplevalue": "John",
                "description": "The contact's middle name",
                "type": "string"
              },
              "NickName": {
                "x-samplevalue": "PB",
                "description": "The contact's nickname",
                "type": "string"
              },
              "SpouseName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Olivia",
                "description": "The name of the contact's spouse",
                "type": "string"
              },
              "BusinessAddress": {
                "description": "The contact's business address",
                "type": "BusinessAddress"
              },
              "ParentFolderId": {
                "description": "The ID of the contact's parent folder",
                "type": "string"
              },
              "ImAddresses": {
                "x-samplevalue": [
                  "Peter12"
                ],
                "description": "The contact's instant messaging (IM) addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Generation": {
                "description": "The contact's generation",
                "type": "string"
              },
              "Profession": {
                "x-sub-format": "Doctor",
                "description": "The contact's profession",
                "type": "string"
              },
              "YomiSurname": {
                "x-sub-format": "Last Name",
                "description": "The phonetic Japanese surname (last name) of the contact",
                "type": "string"
              },
              "EmailAddresses": {
                "description": "The contact's email addresses",
                "type": "array",
                "items": {
                  "$ref": "EmailAddresses"
                }
              },
              "OfficeLocation": {
                "x-samplevalue": "Street 1, NY",
                "description": "The location of the contact's office",
                "type": "string"
              },
              "OtherAddress": {
                "description": "Other addresses for the contact",
                "type": "OtherAddress"
              },
              "BusinessPhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's business phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Id": {
                "description": "The contact's unique identifier",
                "x-readOnly": true,
                "type": "string"
              },
              "Surname": {
                "x-sub-format": "Last Name",
                "x-samplevalue": "Bansky",
                "description": "The contact's surname",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The contact ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "vendorPath": "/me/contacts/{id}"
    },
    {
      "path": "/hubs/general/contacts/{id}",
      "vendorMethod": "PATCH",
      "method": "PATCH",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Update a contact",
      "model": {
        "requestName": "contactsPatchReq",
        "transform": false,
        "name": "contactsPatchRes",
        "requestSwagger": {
          "HomeAddress": {
            "x-has-customfields": false,
            "title": "HomeAddress",
            "x-vendor-objectname": "HomeAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contactsPatchReq": {
            "x-has-customfields": false,
            "title": "contactsPatchReq",
            "x-vendor-objectname": "Contacts",
            "properties": {
              "HomeAddress": {
                "description": "The contact's home address",
                "type": "HomeAddress"
              },
              "FileAs": {
                "description": "The name the contact is filed under",
                "type": "string"
              },
              "YomiCompanyName": {
                "x-sub-format": "Company Name",
                "description": "The phonetic Japanese company name of the contact",
                "type": "string"
              },
              "AssistantName": {
                "x-samplevalue": "Peter",
                "x-displayName": "AssistantName",
                "description": "The name of the contact's assistant",
                "type": "string"
              },
              "GivenName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Pavel",
                "x-name": true,
                "description": "The contact's given name",
                "type": "string"
              },
              "Birthday": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "format": "date-time",
                "x-displayName": "Birthday",
                "description": "The contact's birthday",
                "type": "string"
              },
              "Manager": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Walter B.",
                "description": "The name of the contact's manager",
                "type": "string"
              },
              "JobTitle": {
                "x-sub-format": "Job Title",
                "x-samplevalue": "SSE",
                "description": "The contact's job title",
                "type": "string"
              },
              "CompanyName": {
                "x-sub-format": "Company Name",
                "x-samplevalue": "Alister Co.",
                "description": "The name of the contact's company",
                "type": "string"
              },
              "Department": {
                "x-samplevalue": "Sales",
                "description": "The contact's department",
                "type": "string"
              },
              "PersonalNotes": {
                "x-samplevalue": "Sample notes",
                "description": "The user's notes about the contact",
                "type": "string"
              },
              "DisplayName": {
                "x-samplevalue": "Peter",
                "description": "The contact's display name",
                "type": "string"
              },
              "Children": {
                "x-samplevalue": [
                  "OLIVIA"
                ],
                "description": "The names of the contact's children",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HomePhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's home phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "YomiGivenName": {
                "x-sub-format": "Full Name",
                "description": "The phonetic Japanese given name (first name) of the contact",
                "type": "string"
              },
              "BusinessHomePage": {
                "x-displayName": "BusinessHomePage",
                "description": "The business home page of the contact",
                "type": "string"
              },
              "Categories": {
                "x-samplevalue": [
                  "HOME"
                ],
                "description": "The categories associated with the contact",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "MobilePhone1": {
                "x-sub-format": "Phone",
                "x-samplevalue": "9876785436",
                "type": "string",
                "x-description": "The contact's mobile phone number"
              },
              "Title": {
                "x-samplevalue": "Title",
                "description": "The contact's title",
                "type": "string"
              },
              "Initials": {
                "x-samplevalue": "Mr.",
                "description": "The contact's initials",
                "type": "string"
              },
              "MiddleName": {
                "x-samplevalue": "John",
                "description": "The contact's middle name",
                "type": "string"
              },
              "NickName": {
                "x-samplevalue": "PB",
                "description": "The contact's nickname",
                "type": "string"
              },
              "SpouseName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Olivia",
                "description": "The name of the contact's spouse",
                "type": "string"
              },
              "BusinessAddress": {
                "description": "The contact's business address",
                "type": "BusinessAddress"
              },
              "ImAddresses": {
                "x-samplevalue": [
                  "Peter12"
                ],
                "description": "The contact's instant messaging (IM) addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Generation": {
                "description": "The contact's generation",
                "type": "string"
              },
              "Profession": {
                "x-sub-format": "Doctor",
                "description": "The contact's profession",
                "type": "string"
              },
              "YomiSurname": {
                "x-sub-format": "Last Name",
                "description": "The phonetic Japanese surname (last name) of the contact",
                "type": "string"
              },
              "EmailAddresses": {
                "description": "The contact's email addresses",
                "type": "array",
                "items": {
                  "$ref": "EmailAddresses"
                }
              },
              "OfficeLocation": {
                "x-samplevalue": "Street 1, NY",
                "description": "The location of the contact's office",
                "type": "string"
              },
              "OtherAddress": {
                "description": "Other addresses for the contact",
                "type": "OtherAddress"
              },
              "BusinessPhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's business phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Surname": {
                "x-sub-format": "Last Name",
                "x-samplevalue": "Bansky",
                "description": "The contact's surname",
                "type": "string"
              }
            }
          },
          "EmailAddresses": {
            "x-has-customfields": false,
            "title": "EmailAddresses",
            "x-vendor-objectname": "EmailAddress",
            "properties": {
              "Address": {
                "x-samplevalue": "pavelb@a830edad9050849NDA1.onmicrosoft.com",
                "description": "The email address of the person or entity",
                "type": "string"
              },
              "Name": {
                "x-samplevalue": "Pavel Bansky",
                "description": "The display name of the person or entity",
                "type": "string"
              }
            }
          },
          "OtherAddress": {
            "x-has-customfields": false,
            "title": "OtherAddress",
            "x-vendor-objectname": "OtherAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "BusinessAddress": {
            "x-has-customfields": false,
            "title": "BusinessAddress",
            "x-vendor-objectname": "Business Address",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "HomeAddress": {
            "x-has-customfields": false,
            "title": "HomeAddress",
            "x-vendor-objectname": "HomeAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "contactsPatchRes": {
            "x-primary-key": [
              "Id"
            ],
            "x-has-customfields": false,
            "title": "contactsPatchRes",
            "x-vendor-objectname": "Contacts",
            "properties": {
              "ChangeKey": {
                "description": "Identifies the version of the contact. Every time the contact is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object",
                "type": "string"
              },
              "HomeAddress": {
                "description": "The contact's home address",
                "type": "HomeAddress"
              },
              "FileAs": {
                "description": "The name the contact is filed under",
                "type": "string"
              },
              "lastModifiedDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "YomiCompanyName": {
                "x-sub-format": "Company Name",
                "description": "The phonetic Japanese company name of the contact",
                "type": "string"
              },
              "AssistantName": {
                "x-samplevalue": "Peter",
                "x-displayName": "AssistantName",
                "description": "The name of the contact's assistant",
                "type": "string"
              },
              "GivenName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Pavel",
                "x-name": true,
                "description": "The contact's given name",
                "type": "string"
              },
              "createdDateTime": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-samplevalue": "2014-10-22T20:38:18Z",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "description": "The time the contact was created",
                "type": "string"
              },
              "Birthday": {
                "x-sub-format": "Date Time - ISO 8601 +Offset",
                "x-mask": "yyyy-mm-dd'T'hh:mm:ssZ",
                "format": "date-time",
                "x-displayName": "Birthday",
                "description": "The contact's birthday",
                "type": "string"
              },
              "Manager": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Walter B.",
                "description": "The name of the contact's manager",
                "type": "string"
              },
              "JobTitle": {
                "x-sub-format": "Job Title",
                "x-samplevalue": "SSE",
                "description": "The contact's job title",
                "type": "string"
              },
              "CompanyName": {
                "x-sub-format": "Company Name",
                "x-samplevalue": "Alister Co.",
                "description": "The name of the contact's company",
                "type": "string"
              },
              "@odata.id": {
                "type": "string"
              },
              "Department": {
                "x-samplevalue": "Sales",
                "description": "The contact's department",
                "type": "string"
              },
              "PersonalNotes": {
                "x-samplevalue": "Sample notes",
                "description": "The user's notes about the contact",
                "type": "string"
              },
              "DisplayName": {
                "x-samplevalue": "Peter",
                "description": "The contact's display name",
                "type": "string"
              },
              "Children": {
                "x-samplevalue": [
                  "OLIVIA"
                ],
                "description": "The names of the contact's children",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HomePhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's home phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "YomiGivenName": {
                "x-sub-format": "Full Name",
                "description": "The phonetic Japanese given name (first name) of the contact",
                "type": "string"
              },
              "BusinessHomePage": {
                "x-displayName": "BusinessHomePage",
                "description": "The business home page of the contact",
                "type": "string"
              },
              "Categories": {
                "x-samplevalue": [
                  "HOME"
                ],
                "description": "The categories associated with the contact",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "@odata.etag": {
                "type": "string"
              },
              "MobilePhone1": {
                "x-sub-format": "Phone",
                "x-samplevalue": "9876785436",
                "type": "string",
                "x-description": "The contact's mobile phone number"
              },
              "Title": {
                "x-samplevalue": "Title",
                "description": "The contact's title",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "Initials": {
                "x-samplevalue": "Mr.",
                "description": "The contact's initials",
                "type": "string"
              },
              "MiddleName": {
                "x-samplevalue": "John",
                "description": "The contact's middle name",
                "type": "string"
              },
              "NickName": {
                "x-samplevalue": "PB",
                "description": "The contact's nickname",
                "type": "string"
              },
              "SpouseName": {
                "x-sub-format": "Full Name",
                "x-samplevalue": "Olivia",
                "description": "The name of the contact's spouse",
                "type": "string"
              },
              "BusinessAddress": {
                "description": "The contact's business address",
                "type": "BusinessAddress"
              },
              "ParentFolderId": {
                "description": "The ID of the contact's parent folder",
                "type": "string"
              },
              "ImAddresses": {
                "x-samplevalue": [
                  "Peter12"
                ],
                "description": "The contact's instant messaging (IM) addresses",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Generation": {
                "description": "The contact's generation",
                "type": "string"
              },
              "Profession": {
                "x-sub-format": "Doctor",
                "description": "The contact's profession",
                "type": "string"
              },
              "YomiSurname": {
                "x-sub-format": "Last Name",
                "description": "The phonetic Japanese surname (last name) of the contact",
                "type": "string"
              },
              "EmailAddresses": {
                "description": "The contact's email addresses",
                "type": "array",
                "items": {
                  "$ref": "EmailAddresses"
                }
              },
              "OfficeLocation": {
                "x-samplevalue": "Street 1, NY",
                "description": "The location of the contact's office",
                "type": "string"
              },
              "OtherAddress": {
                "description": "Other addresses for the contact",
                "type": "OtherAddress"
              },
              "BusinessPhones": {
                "x-sub-format": "Phone",
                "x-samplevalue": [
                  "+1 732 555 0102"
                ],
                "description": "The contact's business phone numbers",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Id": {
                "description": "The contact's unique identifier",
                "x-readOnly": true,
                "type": "string"
              },
              "Surname": {
                "x-sub-format": "Last Name",
                "x-samplevalue": "Bansky",
                "description": "The contact's surname",
                "type": "string"
              }
            }
          },
          "EmailAddresses": {
            "x-has-customfields": false,
            "title": "EmailAddresses",
            "x-vendor-objectname": "EmailAddress",
            "properties": {
              "Address": {
                "x-samplevalue": "pavelb@a830edad9050849NDA1.onmicrosoft.com",
                "description": "The email address of the person or entity",
                "type": "string"
              },
              "Name": {
                "x-samplevalue": "Pavel Bansky",
                "description": "The display name of the person or entity",
                "type": "string"
              }
            }
          },
          "OtherAddress": {
            "x-has-customfields": false,
            "title": "OtherAddress",
            "x-vendor-objectname": "OtherAddress",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          },
          "BusinessAddress": {
            "x-has-customfields": false,
            "title": "BusinessAddress",
            "x-vendor-objectname": "Business Address",
            "properties": {
              "CountryOrRegion": {
                "x-sub-format": "Country",
                "x-samplevalue": "United States",
                "x-displayName": "CountryOrRegion",
                "description": "The country or region",
                "type": "string"
              },
              "State": {
                "x-sub-format": "State",
                "x-samplevalue": "Maharashtra",
                "x-displayName": "State",
                "description": "The State",
                "type": "string"
              },
              "PostalCode": {
                "x-sub-format": "Postal Code",
                "x-samplevalue": "411045",
                "x-displayName": "PostalCode",
                "description": "The postal code",
                "type": "string"
              },
              "Street": {
                "x-sub-format": "Street Name",
                "x-samplevalue": "Carter Street",
                "x-displayName": "Street",
                "description": "The street",
                "type": "string"
              },
              "City": {
                "x-sub-format": "City",
                "x-samplevalue": "Boston",
                "x-displayName": "City",
                "description": "The City",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The contact ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "body",
          "dataType": "contactsPatchReq",
          "name": "body",
          "description": "The contact object",
          "vendorDataType": "contactsPatchReq",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        }
      ],
      "vendorPath": "/me/contacts/{id}"
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Search for messages",
      "type": "api",
      "vendorPath": "/me/messages",
      "path": "/hubs/general/messages",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "messagesList",
        "swagger": {
          "FromEmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "test.name@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Test Name",
                "type": "string"
              }
            }
          },
          "ToRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhande@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "messagesListObject": {
            "x-primary-key": [
              "id"
            ],
            "x-has-customfields": false,
            "title": "messagesListObject",
            "type": "object",
            "x-vendor-objectname": "Message",
            "properties": {
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "Attachments"
                }
              },
              "flag": {
                "type": "Flag"
              },
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "parentFolderId": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoALgAAA3ptkzmErVtFol1E09_uAQwBAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAA==",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              },
              "importance": {
                "x-samplevalue": "Normal",
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high"
                ]
              },
              "subject": {
                "x-samplevalue": "RE: Meet for lunch?1",
                "x-name": true,
                "type": "string"
              },
              "webLink": {
                "x-samplevalue": "https://outlook.live.com/owa/?ItemID=AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09%2BuAQwHAPehCfYsiBlKkJ%2B3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ%2B3hVGsPnoAAAACZcN0AAAA&exvsurl=1&viewmodel=ReadMessageItem",
                "type": "string"
              },
              "isDraft": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "isRead": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "bodyPreview": {
                "x-samplevalue": "copy that.\r\n________________________________\r\nFrom: Mayur Dhande <mayur.dhande@gslab.com>\r\nSent: Tuesday, May 22, 2018 10:23:59 AM\r\nTo: Mayur Dhande\r\nSubject: Re: Meet for lunch?1\r\n\r\nokay ?\r\n\r\nThanks and Regards,\r\nMayur Dhande\r\nSoftware Engineer | Mobile:",
                "type": "string"
              },
              "createdDateTime": {
                "x-samplevalue": "2018-05-22T10:44:27Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "body": {
                "type": "Body"
              },
              "inferenceClassification": {
                "x-samplevalue": "Focused",
                "type": "string",
                "enum": [
                  "focused",
                  "other"
                ]
              },
              "meetingMessageType": {
                "x-samplevalue": "MeetingRequest",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('0003bffd-11e0-5f61-0000-000000000000@84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa')/Messages('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA')",
                "type": "string"
              },
              "internetMessageId": {
                "x-samplevalue": "<PN1PR0101MB14088778111755D914EC81AD96940@PN1PR0101MB1408.INDPRD01.PROD.OUTLOOK.COM>",
                "type": "string"
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "ToRecipients"
                }
              },
              "isReadReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "from": {
                "type": "From"
              },
              "uniqueBody": {
                "type": "Body"
              },
              "categories": {
                "x-samplevalue": [
                  "Snacks"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA",
                "type": "string"
              },
              "hasAttachments": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "sentDateTime": {
                "x-samplevalue": "2018-05-22T10:44:29Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "conversationId": {
                "x-samplevalue": "AQQkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoAEAA7_l28bBLhRJTV5BK3JGxa",
                "type": "string"
              },
              "@odata.etag": {
                "x-samplevalue": "W/\"CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q\"",
                "type": "string"
              },
              "changeKey": {
                "x-samplevalue": "CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q",
                "type": "string"
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "ExtensionsResponse"
                }
              },
              "receivedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "sender": {
                "type": "Sender"
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "BccRecipients"
                }
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "CcRecipients"
                }
              },
              "isDeliveryReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "$ref": "ReplyTo"
                }
              }
            }
          },
          "ToRecipients": {
            "x-has-customfields": false,
            "title": "ToRecipients",
            "properties": {
              "emailAddress": {
                "type": "ToRecipientsEmailAddress"
              }
            }
          },
          "From": {
            "x-has-customfields": false,
            "title": "From",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "FromEmailAddress"
              }
            }
          },
          "Attachments": {
            "x-has-customfields": false,
            "title": "Attachments",
            "properties": {
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "menu.txt",
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "01001000 01101001 00100000 01001000 01101111 01110111 00100000 01100001 01110010 01100101 00100000 01111001 01101111 01110101",
                "type": "string"
              }
            }
          },
          "Flag": {
            "x-has-customfields": false,
            "title": "Flag",
            "type": "object",
            "properties": {
              "flagStatus": {
                "x-samplevalue": "NotFlagged",
                "type": "string"
              }
            }
          },
          "EmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "SenderEmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ReplyTo": {
            "x-has-customfields": false,
            "title": "ReplyTo",
            "properties": {
              "emailAddress": {
                "type": "EmailAddress"
              }
            }
          },
          "Sender": {
            "x-has-customfields": false,
            "title": "Sender",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "SenderEmailAddress"
              }
            }
          },
          "BccRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipients": {
            "x-has-customfields": false,
            "title": "CcRecipients",
            "properties": {
              "emailAddress": {
                "type": "CcRecipientsEmailAddress"
              }
            }
          },
          "messagesList": {
            "type": "array",
            "items": {
              "$ref": "messagesListObject"
            }
          },
          "BccRecipients": {
            "x-has-customfields": false,
            "title": "BccRecipients",
            "properties": {
              "emailAddress": {
                "type": "BccRecipientsEmailAddress"
              }
            }
          },
          "Body": {
            "x-has-customfields": false,
            "title": "Body",
            "type": "object",
            "properties": {
              "contentType": {
                "x-samplevalue": "HTML",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=us-ascii\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n</head>\r\n<body>\r\ncopy that.\r\n<hr tabindex=\"-1\" style=\"display:inline-block; width:98%\">\r\n<div id=\"divRplyFwdMsg\" dir=\"ltr\">\r\n<div>&nbsp;</div>\r\n</div>\r\n<div>\r\n<div dir=\"ltr\">okay ?</div><div><span style=\"color:rgb(136,136,136); font-size:12.8px\">Thanks and Regards,</span></div>\r\n<div dir=\"ltr\"><b style=\"color:rgb(136,136,136); font-size:12.8px\">Jamws S</b> wrote:<br>\r\n<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nThe new cafeteria is open.</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n",
                "type": "string"
              }
            }
          },
          "ExtensionsResponse": {
            "x-has-customfields": true,
            "title": "ExtensionsResponse",
            "properties": {
              "extensionName": {
                "x-samplevalue": "Com.Contoso.Referral",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('ddfc984d-b826-40d7-b48b-57002df800e5@1717f226-49d1-4d0c-9d74-709fad664b77')/Messages\r\n('AAMkAGEbs88AAB84uLuAAA=')/extensions('Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral')",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral",
                "type": "string"
              }
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve. Defaults to 1 ",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$skip",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The page size. Defaults to 100",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$top",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "orderBy",
          "description": "The orderBy parameter. For example, lastModifiedDateTime desc",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "$orderBy",
          "required": false
        },
        {
          "vendorType": "query",
          "converter": "toODataFilter",
          "dataType": "string",
          "name": "where",
          "description": "The CEQL search expression. The operators available are \"LIKE\", \"=\", \"!=\", \">\", \">=\", \"<\", \"<=\", “AND” and \"OR\". For example, from=’acb@g.com’ or subject = ‘Hi’",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "converter:toODataFilter",
          "required": false
        }
      ],
      "rootKey": "|value"
    },
    {
      "path": "/hubs/general/messages",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Create a message",
      "model": {
        "requestName": "CreateMessage",
        "transform": false,
        "name": "messagesResponse",
        "requestSwagger": {
          "SingleValueExtendedProperties": {
            "x-has-customfields": false,
            "title": "SingleValueExtendedProperties",
            "properties": {
              "propertyId": {
                "x-samplevalue": "String {66f5a359-4659-4830-9070-00047ec6ac6e} Name Color",
                "type": "string"
              },
              "value": {
                "x-samplevalue": "Green",
                "type": "string"
              }
            }
          },
          "BccRecipientsCreateMessage": {
            "x-has-customfields": false,
            "title": "BccRecipients",
            "properties": {
              "emailAddress": {
                "type": "EmailAddressMessageCreate"
              }
            },
            "required": [
              "emailAddress"
            ]
          },
          "FromEmailAddressCreateMessage": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande Outlook",
                "type": "string"
              }
            }
          },
          "EmailAddressMessageCreate": {
            "x-has-customfields": false,
            "title": "EmailAddressMessageCreate",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhande@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            },
            "required": [
              "address"
            ]
          },
          "FromCreateMessage": {
            "x-has-customfields": false,
            "title": "From",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "FromEmailAddressCreateMessage"
              }
            }
          },
          "MultiValueExtendedProperties": {
            "x-has-customfields": false,
            "title": "MultiValueExtendedProperties",
            "properties": {
              "propertyId": {
                "x-samplevalue": "String {66f5a359-4659-4830-9070-00047ec6ac6e} Name Color",
                "type": "string"
              },
              "value": {
                "x-samplevalue": [
                  "Green",
                  "Aqua",
                  "Blue"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "CcRecipientsCreateMessage": {
            "x-has-customfields": false,
            "title": "CcRecipients",
            "properties": {
              "emailAddress": {
                "type": "EmailAddressMessageCreate"
              }
            },
            "required": [
              "emailAddress"
            ]
          },
          "Attachments": {
            "x-has-customfields": false,
            "title": "Attachments",
            "properties": {
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "menu.txt",
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "01001000 01101001 00100000 01001000 01101111 01110111 00100000 01100001 01110010 01100101 00100000 01111001 01101111 01110101",
                "type": "string"
              }
            }
          },
          "ExtensionsRequest": {
            "x-has-customfields": true,
            "title": "ExtensionsRequest",
            "properties": {
              "extensionName": {
                "x-samplevalue": "Com.Contoso.Referral",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              }
            }
          },
          "ToRecipientsCreateMessage": {
            "x-has-customfields": false,
            "title": "ToRecipients",
            "properties": {
              "emailAddress": {
                "type": "EmailAddressMessageCreate"
              }
            },
            "required": [
              "emailAddress"
            ]
          },
          "SenderEmailAddressCreateMessage": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande Outlook",
                "type": "string"
              }
            }
          },
          "CreateMessage": {
            "x-has-customfields": false,
            "x-vendor-objectname": "Message",
            "properties": {
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "Attachments"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "SingleValueExtendedProperties"
                }
              },
              "importance": {
                "x-samplevalue": "Normal",
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "subject": {
                "x-samplevalue": "RE: Meet for lunch?1",
                "x-name": true,
                "type": "string"
              },
              "isRead": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "body": {
                "type": "Body"
              },
              "inferenceClassification": {
                "x-samplevalue": "Focused",
                "type": "string",
                "enum": [
                  "Focused",
                  "Other"
                ]
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "ExtensionsRequest"
                }
              },
              "internetMessageId": {
                "x-samplevalue": "<PN1PR0101MB14088778111755D914EC81AD96940@PN1PR0101MB1408.INDPRD01.PROD.OUTLOOK.COM>",
                "type": "string"
              },
              "toRecipients": {
                "x-conditional-required": "Required when CcRecipients or BccRecipients is not provided",
                "type": "array",
                "items": {
                  "$ref": "ToRecipients"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "MultiValueExtendedProperties"
                }
              },
              "sender": {
                "type": "SenderCreateMessage"
              },
              "bccRecipients": {
                "x-conditional-required": "Required when CcRecipients or ToRecipients is not provided",
                "type": "array",
                "items": {
                  "$ref": "BccRecipients"
                }
              },
              "isReadReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "ccRecipients": {
                "x-conditional-required": "Required when ToRecipients or BccRecipients is not provided",
                "type": "array",
                "items": {
                  "$ref": "CcRecipients"
                }
              },
              "isDeliveryReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "from": {
                "type": "FromCreateMessage"
              },
              "categories": {
                "x-samplevalue": [
                  "Snacks"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "Body": {
            "x-has-customfields": false,
            "title": "Body",
            "type": "object",
            "properties": {
              "contentType": {
                "x-samplevalue": "HTML",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=us-ascii\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n</head>\r\n<body>\r\ncopy that.\r\n<hr tabindex=\"-1\" style=\"display:inline-block; width:98%\">\r\n<div id=\"divRplyFwdMsg\" dir=\"ltr\">\r\n<div>&nbsp;</div>\r\n</div>\r\n<div>\r\n<div dir=\"ltr\">okay ?</div><div><span style=\"color:rgb(136,136,136); font-size:12.8px\">Thanks and Regards,</span></div>\r\n<div dir=\"ltr\"><b style=\"color:rgb(136,136,136); font-size:12.8px\">Jamws S</b> wrote:<br>\r\n<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nThe new cafeteria is open.</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n",
                "type": "string"
              }
            }
          },
          "SenderCreateMessage": {
            "x-has-customfields": false,
            "title": "Sender",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "SenderEmailAddressCreateMessage"
              }
            }
          }
        },
        "swagger": {
          "FromEmailAddress": {
            "x-has-customfields": false,
            "title": "FromEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ToRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "ToRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhande@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ToRecipients": {
            "x-has-customfields": false,
            "title": "ToRecipients",
            "properties": {
              "emailAddress": {
                "type": "ToRecipientsEmailAddress"
              }
            }
          },
          "From": {
            "x-has-customfields": false,
            "title": "From",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "FromEmailAddress"
              }
            }
          },
          "messagesResponse": {
            "x-primary-key": [
              "id"
            ],
            "x-has-customfields": false,
            "title": "messagesResponse",
            "type": "object",
            "x-vendor-objectname": "Message",
            "properties": {
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "AttachmentsResponse"
                }
              },
              "flag": {
                "type": "Flag"
              },
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "parentFolderId": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoALgAAA3ptkzmErVtFol1E09_uAQwBAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAA==",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "importance": {
                "x-samplevalue": "Normal",
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high"
                ]
              },
              "subject": {
                "x-samplevalue": "RE: Meet for lunch?1",
                "x-name": true,
                "type": "string"
              },
              "webLink": {
                "x-samplevalue": "https://outlook.live.com/owa/?ItemID=AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09%2BuAQwHAPehCfYsiBlKkJ%2B3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ%2B3hVGsPnoAAAACZcN0AAAA&exvsurl=1&viewmodel=ReadMessageItem",
                "type": "string"
              },
              "isDraft": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "isRead": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "bodyPreview": {
                "x-samplevalue": "copy that.\r\n________________________________\r\nFrom: Mayur Dhande <mayur.dhande@gslab.com>\r\nSent: Tuesday, May 22, 2018 10:23:59 AM\r\nTo: Mayur Dhande\r\nSubject: Re: Meet for lunch?1\r\n\r\nokay ?\r\n\r\nThanks and Regards,\r\nMayur Dhande\r\nSoftware Engineer | Mobile:",
                "type": "string"
              },
              "createdDateTime": {
                "x-samplevalue": "2018-05-22T10:44:27Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "body": {
                "type": "Body"
              },
              "inferenceClassification": {
                "x-samplevalue": "Focused",
                "type": "string",
                "enum": [
                  "focused",
                  "other"
                ]
              },
              "meetingMessageType": {
                "x-samplevalue": "MeetingRequest",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('0003bffd-11e0-5f61-0000-000000000000@84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa')/Messages('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA')",
                "type": "string"
              },
              "internetMessageId": {
                "x-samplevalue": "<PN1PR0101MB14088778111755D914EC81AD96940@PN1PR0101MB1408.INDPRD01.PROD.OUTLOOK.COM>",
                "type": "string"
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "ToRecipients"
                }
              },
              "isReadReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "from": {
                "type": "From"
              },
              "uniqueBody": {
                "type": "Body"
              },
              "categories": {
                "x-samplevalue": [
                  "Snacks"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA",
                "type": "string"
              },
              "hasAttachments": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "sentDateTime": {
                "x-samplevalue": "2018-05-22T10:44:29Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "conversationId": {
                "x-samplevalue": "AQQkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoAEAA7_l28bBLhRJTV5BK3JGxa",
                "type": "string"
              },
              "@odata.etag": {
                "x-samplevalue": "W/\"CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q\"",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "changeKey": {
                "x-samplevalue": "CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q",
                "type": "string"
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "ExtensionsResponse"
                }
              },
              "receivedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "attachments@odata.context": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "sender": {
                "type": "Sender"
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "BccRecipients"
                }
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "CcRecipients"
                }
              },
              "isDeliveryReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "$ref": "ReplyTo"
                }
              }
            }
          },
          "Flag": {
            "x-has-customfields": false,
            "title": "Flag",
            "type": "object",
            "properties": {
              "flagStatus": {
                "x-samplevalue": "NotFlagged",
                "type": "string"
              }
            }
          },
          "EmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "SenderEmailAddress": {
            "x-has-customfields": false,
            "title": "SenderEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ReplyTo": {
            "x-has-customfields": false,
            "title": "ReplyTo",
            "properties": {
              "emailAddress": {
                "type": "EmailAddress"
              }
            }
          },
          "Sender": {
            "x-has-customfields": false,
            "title": "Sender",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "SenderEmailAddress"
              }
            }
          },
          "BccRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "BccRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "CcRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipients": {
            "x-has-customfields": false,
            "title": "CcRecipients",
            "properties": {
              "emailAddress": {
                "type": "CcRecipientsEmailAddress"
              }
            }
          },
          "BccRecipients": {
            "x-has-customfields": false,
            "title": "BccRecipients",
            "properties": {
              "emailAddress": {
                "type": "BccRecipientsEmailAddress"
              }
            }
          },
          "AttachmentsResponse": {
            "x-has-customfields": false,
            "title": "AttachmentsResponse",
            "properties": {
              "size": {
                "format": "int32",
                "type": "integer"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "menu.txt",
                "type": "string"
              },
              "isInline": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "@odata.context": {
                "type": "string"
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA",
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "01001000 01101001 00100000 01001000 01101111 01110111 00100000 01100001 01110010 01100101 00100000 01111001 01101111 01110101",
                "type": "string"
              }
            }
          },
          "Body": {
            "x-has-customfields": false,
            "title": "Body",
            "type": "object",
            "properties": {
              "contentType": {
                "x-samplevalue": "HTML",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=us-ascii\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n</head>\r\n<body>\r\ncopy that.\r\n<hr tabindex=\"-1\" style=\"display:inline-block; width:98%\">\r\n<div id=\"divRplyFwdMsg\" dir=\"ltr\">\r\n<div>&nbsp;</div>\r\n</div>\r\n<div>\r\n<div dir=\"ltr\">okay ?</div><div><span style=\"color:rgb(136,136,136); font-size:12.8px\">Thanks and Regards,</span></div>\r\n<div dir=\"ltr\"><b style=\"color:rgb(136,136,136); font-size:12.8px\">Jamws S</b> wrote:<br>\r\n<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nThe new cafeteria is open.</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n",
                "type": "string"
              }
            }
          },
          "ExtensionsResponse": {
            "x-has-customfields": true,
            "title": "ExtensionsResponse",
            "properties": {
              "extensionName": {
                "x-samplevalue": "Com.Contoso.Referral",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('ddfc984d-b826-40d7-b48b-57002df800e5@1717f226-49d1-4d0c-9d74-709fad664b77')/Messages\r\n('AAMkAGEbs88AAB84uLuAAA=')/extensions('Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral')",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "CreateMessage",
          "name": "body",
          "description": "The message object",
          "vendorDataType": "CreateMessage",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        }
      ],
      "vendorPath": "/me/messages"
    },
    {
      "path": "/hubs/general/messages/{id}",
      "vendorMethod": "DELETE",
      "method": "DELETE",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Delete a message",
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{id}"
    },
    {
      "path": "/hubs/general/messages/{id}",
      "vendorMethod": "GET",
      "method": "GET",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Retrieve a message",
      "model": {
        "transform": false,
        "name": "messages",
        "swagger": {
          "FromEmailAddress": {
            "x-has-customfields": false,
            "title": "FromEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ToRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "ToRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhande@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ToRecipients": {
            "x-has-customfields": false,
            "title": "ToRecipients",
            "properties": {
              "emailAddress": {
                "type": "ToRecipientsEmailAddress"
              }
            }
          },
          "From": {
            "x-has-customfields": false,
            "title": "From",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "FromEmailAddress"
              }
            }
          },
          "Attachments": {
            "x-has-customfields": false,
            "title": "Attachments",
            "properties": {
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "menu.txt",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "01001000 01101001 00100000 01001000 01101111 01110111 00100000 01100001 01110010 01100101 00100000 01111001 01101111 01110101",
                "type": "string"
              }
            }
          },
          "Flag": {
            "x-has-customfields": false,
            "title": "Flag",
            "type": "object",
            "properties": {
              "flagStatus": {
                "x-samplevalue": "NotFlagged",
                "type": "string"
              }
            }
          },
          "EmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "SenderEmailAddress": {
            "x-has-customfields": false,
            "title": "SenderEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ReplyTo": {
            "x-has-customfields": false,
            "title": "ReplyTo",
            "properties": {
              "emailAddress": {
                "type": "EmailAddress"
              }
            }
          },
          "Sender": {
            "x-has-customfields": false,
            "title": "Sender",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "SenderEmailAddress"
              }
            }
          },
          "BccRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "BccRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "CcRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipients": {
            "x-has-customfields": false,
            "title": "CcRecipients",
            "properties": {
              "emailAddress": {
                "type": "CcRecipientsEmailAddress"
              }
            }
          },
          "BccRecipients": {
            "x-has-customfields": false,
            "title": "BccRecipients",
            "properties": {
              "emailAddress": {
                "type": "BccRecipientsEmailAddress"
              }
            }
          },
          "messages": {
            "x-primary-key": [
              "id"
            ],
            "x-has-customfields": false,
            "title": "messages",
            "type": "object",
            "x-vendor-objectname": "Message",
            "properties": {
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "Attachments"
                }
              },
              "flag": {
                "type": "Flag"
              },
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "parentFolderId": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoALgAAA3ptkzmErVtFol1E09_uAQwBAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAA==",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "importance": {
                "x-samplevalue": "Normal",
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high"
                ]
              },
              "subject": {
                "x-samplevalue": "RE: Meet for lunch?1",
                "x-name": true,
                "type": "string"
              },
              "webLink": {
                "x-samplevalue": "https://outlook.live.com/owa/?ItemID=AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09%2BuAQwHAPehCfYsiBlKkJ%2B3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ%2B3hVGsPnoAAAACZcN0AAAA&exvsurl=1&viewmodel=ReadMessageItem",
                "type": "string"
              },
              "isDraft": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "isRead": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "bodyPreview": {
                "x-samplevalue": "copy that.\r\n________________________________\r\nFrom: Mayur Dhande <mayur.dhande@gslab.com>\r\nSent: Tuesday, May 22, 2018 10:23:59 AM\r\nTo: Mayur Dhande\r\nSubject: Re: Meet for lunch?1\r\n\r\nokay ?\r\n\r\nThanks and Regards,\r\nMayur Dhande\r\nSoftware Engineer | Mobile:",
                "type": "string"
              },
              "createdDateTime": {
                "x-samplevalue": "2018-05-22T10:44:27Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "body": {
                "type": "Body"
              },
              "inferenceClassification": {
                "x-samplevalue": "Focused",
                "type": "string",
                "enum": [
                  "focused",
                  "other"
                ]
              },
              "meetingMessageType": {
                "x-samplevalue": "MeetingRequest",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('0003bffd-11e0-5f61-0000-000000000000@84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa')/Messages('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA')",
                "type": "string"
              },
              "internetMessageId": {
                "x-samplevalue": "<PN1PR0101MB14088778111755D914EC81AD96940@PN1PR0101MB1408.INDPRD01.PROD.OUTLOOK.COM>",
                "type": "string"
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "ToRecipients"
                }
              },
              "isReadReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "from": {
                "type": "From"
              },
              "uniqueBody": {
                "type": "Body"
              },
              "categories": {
                "x-samplevalue": [
                  "Snacks"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA",
                "type": "string"
              },
              "hasAttachments": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "sentDateTime": {
                "x-samplevalue": "2018-05-22T10:44:29Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "conversationId": {
                "x-samplevalue": "AQQkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoAEAA7_l28bBLhRJTV5BK3JGxa",
                "type": "string"
              },
              "@odata.etag": {
                "x-samplevalue": "W/\"CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q\"",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "changeKey": {
                "x-samplevalue": "CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q",
                "type": "string"
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "ExtensionsResponse"
                }
              },
              "receivedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "sender": {
                "type": "Sender"
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "BccRecipients"
                }
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "CcRecipients"
                }
              },
              "isDeliveryReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "$ref": "ReplyTo"
                }
              }
            }
          },
          "Body": {
            "x-has-customfields": false,
            "title": "Body",
            "type": "object",
            "properties": {
              "contentType": {
                "x-samplevalue": "HTML",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=us-ascii\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n</head>\r\n<body>\r\ncopy that.\r\n<hr tabindex=\"-1\" style=\"display:inline-block; width:98%\">\r\n<div id=\"divRplyFwdMsg\" dir=\"ltr\">\r\n<div>&nbsp;</div>\r\n</div>\r\n<div>\r\n<div dir=\"ltr\">okay ?</div><div><span style=\"color:rgb(136,136,136); font-size:12.8px\">Thanks and Regards,</span></div>\r\n<div dir=\"ltr\"><b style=\"color:rgb(136,136,136); font-size:12.8px\">Jamws S</b> wrote:<br>\r\n<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nThe new cafeteria is open.</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n",
                "type": "string"
              }
            }
          },
          "ExtensionsResponse": {
            "x-has-customfields": true,
            "title": "ExtensionsResponse",
            "properties": {
              "extensionName": {
                "x-samplevalue": "Com.Contoso.Referral",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('ddfc984d-b826-40d7-b48b-57002df800e5@1717f226-49d1-4d0c-9d74-709fad664b77')/Messages\r\n('AAMkAGEbs88AAB84uLuAAA=')/extensions('Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral')",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{id}"
    },
    {
      "path": "/hubs/general/messages/{id}",
      "vendorMethod": "PATCH",
      "method": "PATCH",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Update a message",
      "model": {
        "requestName": "UpdateMessage",
        "transform": false,
        "name": "messages",
        "requestSwagger": {
          "ExtensionsRequest": {
            "x-has-customfields": true,
            "title": "ExtensionsRequest",
            "properties": {
              "extensionName": {
                "x-samplevalue": "Com.Contoso.Referral",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              }
            }
          },
          "SingleValueExtendedProperties": {
            "x-has-customfields": false,
            "title": "SingleValueExtendedProperties",
            "properties": {
              "propertyId": {
                "x-samplevalue": "String {66f5a359-4659-4830-9070-00047ec6ac6e} Name Color",
                "type": "string"
              },
              "value": {
                "x-samplevalue": "Green",
                "type": "string"
              }
            }
          },
          "UpdateMessage": {
            "x-has-customfields": false,
            "title": "UpdateMessage",
            "x-vendor-objectname": "Message",
            "properties": {
              "attachments": {
                "type": "array",
                "items": {
                  "type": "Attachments"
                }
              },
              "importance": {
                "x-samplevalue": "Normal",
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "subject": {
                "x-samplevalue": "RE: Meet for lunch?1",
                "x-name": true,
                "type": "string"
              },
              "isRead": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "body": {
                "type": "Body"
              },
              "inferenceClassification": {
                "x-samplevalue": "Focused",
                "type": "string",
                "enum": [
                  "Focused",
                  "Other"
                ]
              },
              "extensions": {
                "type": "array",
                "items": {
                  "type": "ExtensionsRequest"
                }
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "type": "ToRecipientsUpdateMessage"
                }
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "type": "BccRecipients"
                }
              },
              "isReadReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "type": "CcRecipients"
                }
              },
              "isDeliveryReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "categories": {
                "x-samplevalue": [
                  "Snacks"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "BccRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "BccRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "CcRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipients": {
            "x-has-customfields": false,
            "title": "CcRecipients",
            "properties": {
              "emailAddress": {
                "type": "CcRecipientsEmailAddress"
              }
            }
          },
          "BccRecipients": {
            "x-has-customfields": false,
            "title": "BccRecipients",
            "properties": {
              "emailAddress": {
                "type": "BccRecipientsEmailAddress"
              }
            }
          },
          "ToRecipientsUpdateMessage": {
            "x-has-customfields": false,
            "title": "ToRecipientsUpdateMessage",
            "properties": {
              "emailAddress": {
                "type": "EmailAddress"
              }
            }
          },
          "Attachments": {
            "x-has-customfields": false,
            "title": "Attachments",
            "properties": {
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "menu.txt",
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "01001000 01101001 00100000 01001000 01101111 01110111 00100000 01100001 01110010 01100101 00100000 01111001 01101111 01110101",
                "type": "string"
              }
            }
          },
          "Body": {
            "x-has-customfields": false,
            "title": "Body",
            "type": "object",
            "properties": {
              "contentType": {
                "x-samplevalue": "HTML",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=us-ascii\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n</head>\r\n<body>\r\ncopy that.\r\n<hr tabindex=\"-1\" style=\"display:inline-block; width:98%\">\r\n<div id=\"divRplyFwdMsg\" dir=\"ltr\">\r\n<div>&nbsp;</div>\r\n</div>\r\n<div>\r\n<div dir=\"ltr\">okay ?</div><div><span style=\"color:rgb(136,136,136); font-size:12.8px\">Thanks and Regards,</span></div>\r\n<div dir=\"ltr\"><b style=\"color:rgb(136,136,136); font-size:12.8px\">Jamws S</b> wrote:<br>\r\n<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nThe new cafeteria is open.</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n",
                "type": "string"
              }
            }
          },
          "EmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "FromEmailAddress": {
            "x-has-customfields": false,
            "title": "FromEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ToRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "ToRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhande@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ToRecipients": {
            "x-has-customfields": false,
            "title": "ToRecipients",
            "properties": {
              "emailAddress": {
                "type": "ToRecipientsEmailAddress"
              }
            }
          },
          "From": {
            "x-has-customfields": false,
            "title": "From",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "FromEmailAddress"
              }
            }
          },
          "Attachments": {
            "x-has-customfields": false,
            "title": "Attachments",
            "properties": {
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "menu.txt",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "01001000 01101001 00100000 01001000 01101111 01110111 00100000 01100001 01110010 01100101 00100000 01111001 01101111 01110101",
                "type": "string"
              }
            }
          },
          "Flag": {
            "x-has-customfields": false,
            "title": "Flag",
            "type": "object",
            "properties": {
              "flagStatus": {
                "x-samplevalue": "NotFlagged",
                "type": "string"
              }
            }
          },
          "EmailAddress": {
            "x-has-customfields": false,
            "title": "EmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "SenderEmailAddress": {
            "x-has-customfields": false,
            "title": "SenderEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "mayur.dhandegs@outlook.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            }
          },
          "ReplyTo": {
            "x-has-customfields": false,
            "title": "ReplyTo",
            "properties": {
              "emailAddress": {
                "type": "EmailAddress"
              }
            }
          },
          "Sender": {
            "x-has-customfields": false,
            "title": "Sender",
            "type": "object",
            "properties": {
              "emailAddress": {
                "type": "SenderEmailAddress"
              }
            }
          },
          "BccRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "BccRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipientsEmailAddress": {
            "x-has-customfields": false,
            "title": "CcRecipientsEmailAddress",
            "type": "object",
            "properties": {
              "address": {
                "x-sub-format": "email",
                "x-samplevalue": "afrin.chakure@gslab.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Afrin Chakure",
                "type": "string"
              }
            }
          },
          "CcRecipients": {
            "x-has-customfields": false,
            "title": "CcRecipients",
            "properties": {
              "emailAddress": {
                "type": "CcRecipientsEmailAddress"
              }
            }
          },
          "BccRecipients": {
            "x-has-customfields": false,
            "title": "BccRecipients",
            "properties": {
              "emailAddress": {
                "type": "BccRecipientsEmailAddress"
              }
            }
          },
          "messages": {
            "x-primary-key": [
              "id"
            ],
            "x-has-customfields": false,
            "title": "messages",
            "type": "object",
            "x-vendor-objectname": "Message",
            "properties": {
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "Attachments"
                }
              },
              "flag": {
                "type": "Flag"
              },
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "parentFolderId": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoALgAAA3ptkzmErVtFol1E09_uAQwBAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAA==",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "importance": {
                "x-samplevalue": "Normal",
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high"
                ]
              },
              "subject": {
                "x-samplevalue": "RE: Meet for lunch?1",
                "x-name": true,
                "type": "string"
              },
              "webLink": {
                "x-samplevalue": "https://outlook.live.com/owa/?ItemID=AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09%2BuAQwHAPehCfYsiBlKkJ%2B3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ%2B3hVGsPnoAAAACZcN0AAAA&exvsurl=1&viewmodel=ReadMessageItem",
                "type": "string"
              },
              "isDraft": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "isRead": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "bodyPreview": {
                "x-samplevalue": "copy that.\r\n________________________________\r\nFrom: Mayur Dhande <mayur.dhande@gslab.com>\r\nSent: Tuesday, May 22, 2018 10:23:59 AM\r\nTo: Mayur Dhande\r\nSubject: Re: Meet for lunch?1\r\n\r\nokay ?\r\n\r\nThanks and Regards,\r\nMayur Dhande\r\nSoftware Engineer | Mobile:",
                "type": "string"
              },
              "createdDateTime": {
                "x-samplevalue": "2018-05-22T10:44:27Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "body": {
                "type": "Body"
              },
              "inferenceClassification": {
                "x-samplevalue": "Focused",
                "type": "string",
                "enum": [
                  "focused",
                  "other"
                ]
              },
              "meetingMessageType": {
                "x-samplevalue": "MeetingRequest",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('0003bffd-11e0-5f61-0000-000000000000@84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa')/Messages('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA')",
                "type": "string"
              },
              "internetMessageId": {
                "x-samplevalue": "<PN1PR0101MB14088778111755D914EC81AD96940@PN1PR0101MB1408.INDPRD01.PROD.OUTLOOK.COM>",
                "type": "string"
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "ToRecipients"
                }
              },
              "isReadReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "from": {
                "type": "From"
              },
              "uniqueBody": {
                "type": "Body"
              },
              "categories": {
                "x-samplevalue": [
                  "Snacks"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBCQAAAPehCfYsiBlKkJ_3hVGsPnoAAAACZcN0AAAA",
                "type": "string"
              },
              "hasAttachments": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "sentDateTime": {
                "x-samplevalue": "2018-05-22T10:44:29Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "conversationId": {
                "x-samplevalue": "AQQkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoAEAA7_l28bBLhRJTV5BK3JGxa",
                "type": "string"
              },
              "@odata.etag": {
                "x-samplevalue": "W/\"CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q\"",
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "changeKey": {
                "x-samplevalue": "CQAAABYAAAD3oQn2LIgZSpCft4VRrD56AAACZU/q",
                "type": "string"
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "ExtensionsResponse"
                }
              },
              "receivedDateTime": {
                "x-samplevalue": "2018-05-22T10:44:31Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "sender": {
                "type": "Sender"
              },
              "bccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "BccRecipients"
                }
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "$ref": "CcRecipients"
                }
              },
              "isDeliveryReceiptRequested": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "$ref": "ReplyTo"
                }
              }
            }
          },
          "Body": {
            "x-has-customfields": false,
            "title": "Body",
            "type": "object",
            "properties": {
              "contentType": {
                "x-samplevalue": "HTML",
                "type": "string"
              },
              "content": {
                "x-samplevalue": "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=us-ascii\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n</head>\r\n<body>\r\ncopy that.\r\n<hr tabindex=\"-1\" style=\"display:inline-block; width:98%\">\r\n<div id=\"divRplyFwdMsg\" dir=\"ltr\">\r\n<div>&nbsp;</div>\r\n</div>\r\n<div>\r\n<div dir=\"ltr\">okay ?</div><div><span style=\"color:rgb(136,136,136); font-size:12.8px\">Thanks and Regards,</span></div>\r\n<div dir=\"ltr\"><b style=\"color:rgb(136,136,136); font-size:12.8px\">Jamws S</b> wrote:<br>\r\n<blockquote class=\"gmail_quote\" style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nThe new cafeteria is open.</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n",
                "type": "string"
              }
            }
          },
          "ExtensionsResponse": {
            "x-has-customfields": true,
            "title": "ExtensionsResponse",
            "properties": {
              "extensionName": {
                "x-samplevalue": "Com.Contoso.Referral",
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('ddfc984d-b826-40d7-b48b-57002df800e5@1717f226-49d1-4d0c-9d74-709fad664b77')/Messages\r\n('AAMkAGEbs88AAB84uLuAAA=')/extensions('Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral')",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.OpenTypeExtension",
                "type": "string"
              },
              "id": {
                "x-samplevalue": "Microsoft.OutlookServices.OpenTypeExtension.Com.Contoso.Referral",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "body",
          "dataType": "UpdateMessage",
          "name": "body",
          "description": "The message object",
          "vendorDataType": "UpdateMessage",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{id}"
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "List attachments for a message",
      "type": "api",
      "vendorPath": "/me/messages/{message_id}/attachments",
      "path": "/hubs/general/messages/{id}/attachments",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "model": {
        "transform": false,
        "name": "messagesAttachmentsList",
        "swagger": {
          "messagesAttachmentsListObject": {
            "x-primary-key": [
              "id"
            ],
            "x-has-customfields": false,
            "title": "messagesAttachmentsListObject",
            "type": "object",
            "x-vendor-objectname": "Attachment",
            "properties": {
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-05-23T09:30:19Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "contentId": {
                "x-samplevalue": "ii_jhiwqs880_1638c559b4465942",
                "type": "string"
              },
              "permission": {
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "contentLocation": {
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "/9j/4AAQSkZJRgABAQEAYABgAAD//hCx9odHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0n77u/JyBpZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJKeM4JrM0PQtGvfhFHeDw9qGp6pNrv2Q/YbgCZwsDSAJ+6fCBScqASSNxbAAE+2j0K9m+p5zRXo3gf4cWXiKx00a1cPYzaABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH1n8FB/wAWj0T/AHZ//SiWu92ruLbRuIAJxyQOg/U/nRRXgVf4kvVnrU/gXoed+Nv+Rkuv+vW0/wDQrmiiisyz/9k=",
                "type": "string"
              },
              "providerType": {
                "type": "string"
              },
              "sourceUrl": {
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('0003bffd-11e0-5f61-0000-000000000000@84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa')/Messages('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBDAAAAPehCfYsiBlKkJ_3hVGsPnoAAAAC120UAAAA')/Attachments('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBDAAAAPehCfYsiBlKkJ_3hVGsPnoAAAAC120UAAAAARIAEADESDY7rnA_SZzdcCR54yPp')",
                "type": "string"
              },
              "isFolder": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "size": {
                "x-samplevalue": 231962,
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "x-samplevalue": "fail 2.JPG",
                "type": "string"
              },
              "isInline": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBDAAAAPehCfYsiBlKkJ_3hVGsPnoAAAAC120UAAAAARIAEADESDY7rnA_SZzdcCR54yPp",
                "type": "string"
              },
              "contentType": {
                "x-samplevalue": "image/jpeg",
                "type": "string"
              }
            }
          },
          "messagesAttachmentsList": {
            "type": "array",
            "items": {
              "$ref": "messagesAttachmentsListObject"
            }
          }
        }
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The number of resources to return in a given page. Defaults to 100",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "pageSize",
          "required": false
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "message_id",
          "required": true
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve. Defaults to 1",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "page",
          "required": false
        }
      ],
      "rootKey": "value"
    },
    {
      "path": "/hubs/general/messages/{id}/attachments",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Create an attachment for a message",
      "model": {
        "requestName": "CreateMessagesAttachments",
        "transform": false,
        "name": "messagesAttachments",
        "requestSwagger": {
          "CreateMessagesAttachments": {
            "x-has-customfields": false,
            "title": "CreateMessagesAttachments",
            "x-vendor-objectname": "Attachment",
            "properties": {
              "sourceUrl": {
                "x-conditional-required": "Required when @odata.type is #Microsoft.OutlookServices.ReferenceAttachment",
                "x-samplevalue": "https://contoso-my.spoppe.com/personal/danas_contoso_onmicrosoft_com/Documents/Pics/koala.jpg",
                "type": "string"
              },
              "isFolder": {
                "type": "boolean"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "fail 2.JPG",
                "type": "string"
              },
              "permission": {
                "type": "string"
              },
              "contentBytes": {
                "x-conditional-required": "Required when @odata.type is #Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "providerType": {
                "type": "string"
              }
            },
            "required": [
              "@odata.type",
              "name"
            ]
          }
        },
        "swagger": {
          "messagesAttachments": {
            "x-primary-key": [
              "id"
            ],
            "x-has-customfields": false,
            "title": "messagesAttachments",
            "type": "object",
            "x-vendor-objectname": "Attachment",
            "properties": {
              "lastModifiedDateTime": {
                "x-samplevalue": "2018-05-23T09:30:19Z",
                "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
                "format": "date-time",
                "type": "string"
              },
              "@odata.type": {
                "x-samplevalue": "#Microsoft.OutlookServices.FileAttachment",
                "type": "string"
              },
              "contentId": {
                "x-samplevalue": "ii_jhiwqs880_1638c559b4465942",
                "type": "string"
              },
              "permission": {
                "type": "string"
              },
              "@odata.context": {
                "type": "string"
              },
              "contentLocation": {
                "type": "string"
              },
              "contentBytes": {
                "x-samplevalue": "/9j/4AAQSkZJRgABAQEAYABgAAD/4RDyRXhpZgAATU0AKgAAAAgABAE7AAIAAAANAAAISodpAdU1ibTR4f1i1lgfZK9zHCET3yJTkY5yM5BGM5FeBV/iS9WetT+Behz3jb/kY7n/AK9bT/0K5oo8bf8AIx3P/Xraf+hXNFZlnzn48/5KBrn/AF+yf+hVz9FFe/S/hx9EeTU+N+oUUUVoQFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH1n8FB/wAWj0T/AHZ//SiWu92ruLbRuIAJxyQOg/U/nRRXgVf4kvVnrU/gXoed+Nv+Rkuv+vW0/wDQrmiiisyz/9k=",
                "type": "string"
              },
              "providerType": {
                "type": "string"
              },
              "sourceUrl": {
                "type": "string"
              },
              "@odata.id": {
                "x-samplevalue": "https://outlook.office.com/api/v2.0/Users('0003bffd-11e0-5f61-0000-000000000000@84df9e7f-e9f6-40af-b435-aaaaaaaaaaaa')/Messages('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBDAAAAPehCfYsiBlKkJ_3hVGsPnoAAAAC120UAAAA')/Attachments('AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBDAAAAPehCfYsiBlKkJ_3hVGsPnoAAAAC120UAAAAARIAEADESDY7rnA_SZzdcCR54yPp')",
                "type": "string"
              },
              "isFolder": {
                "x-samplevalue": false,
                "type": "boolean"
              },
              "size": {
                "x-samplevalue": 231962,
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "x-samplevalue": "fail 2.JPG",
                "type": "string"
              },
              "isInline": {
                "x-samplevalue": true,
                "type": "boolean"
              },
              "id": {
                "x-samplevalue": "AQMkADAwATNiZmYAZC0xMQBlMC01ZjYxLTAwAi0wMAoARgAAA3ptkzmErVtFol1E09_uAQwHAPehCfYsiBlKkJ_3hVGsPnoAAAIBDAAAAPehCfYsiBlKkJ_3hVGsPnoAAAAC120UAAAAARIAEADESDY7rnA_SZzdcCR54yPp",
                "type": "string"
              },
              "contentType": {
                "x-samplevalue": "image/jpeg",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "CreateMessagesAttachments",
          "name": "body",
          "description": "The attachment body",
          "vendorDataType": "CreateMessagesAttachments",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "message_id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{message_id}/attachments"
    },
    {
      "path": "/hubs/general/messages/{id}/attachments/{attachmentId}",
      "vendorMethod": "DELETE",
      "method": "DELETE",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Delete an attachment for a message",
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "attachmentId",
          "description": "The attachment ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "attachment_id",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "message_id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{message_id}/attachments/{attachment_id}"
    },
    {
      "path": "/hubs/general/messages/{id}/forward",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Forward a message",
      "model": {
        "requestName": "messagesForward",
        "transform": false,
        "name": "messagesForwardResponse",
        "requestSwagger": {
          "messagesForward": {
            "x-has-customfields": false,
            "title": "messagesForward",
            "x-vendor-objectname": "Forward",
            "properties": {
              "toRecipients": {
                "type": "array",
                "items": {
                  "$ref": "ToRecipientsForward"
                }
              },
              "comment": {
                "x-samplevalue": "FYI",
                "type": "string"
              }
            },
            "required": [
              "toRecipients"
            ]
          },
          "EmailAddressForward": {
            "x-has-customfields": false,
            "title": "EmailAddressForward",
            "type": "object",
            "properties": {
              "address": {
                "x-samplevalue": "katiej@a830edad9050849NDA1.onmicrosoft.com",
                "type": "string"
              },
              "name": {
                "x-samplevalue": "Mayur Dhande",
                "type": "string"
              }
            },
            "required": [
              "address"
            ]
          },
          "ToRecipientsForward": {
            "x-has-customfields": false,
            "title": "ToRecipientsForward",
            "properties": {
              "emailAddress": {
                "type": "EmailAddressForward"
              }
            }
          }
        },
        "swagger": {
          "messagesForwardResponse": {
            "x-has-customfields": false,
            "title": "messagesForwardResponse",
            "x-vendor-objectname": "Forward",
            "properties": {}
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "messagesForward",
          "name": "body",
          "description": "The message body",
          "vendorDataType": "messagesForward",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "message_id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{message_id}/forward"
    },
    {
      "path": "/hubs/general/messages/{id}/reply",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Reply to sender of the message",
      "model": {
        "requestName": "messagesReply",
        "transform": false,
        "name": "messagesReplyResponse",
        "requestSwagger": {
          "messagesReply": {
            "x-has-customfields": false,
            "title": "messagesReply",
            "x-vendor-objectname": "Reply",
            "properties": {
              "comment": {
                "x-samplevalue": "FYI",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "messagesReplyResponse": {
            "x-has-customfields": false,
            "title": "messagesReplyResponse",
            "x-vendor-objectname": "Reply",
            "properties": {}
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "messagesReply",
          "name": "body",
          "description": "The reply body",
          "vendorDataType": "messagesReply",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "message_id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{message_id}/reply"
    },
    {
      "path": "/hubs/general/messages/{id}/replyall",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Reply to all the message receipients",
      "model": {
        "requestName": "messagesReplyall",
        "transform": false,
        "name": "messagesReplyallResponse",
        "requestSwagger": {
          "messagesReplyall": {
            "x-has-customfields": false,
            "title": "messagesReplyall",
            "x-vendor-objectname": "Replyall",
            "properties": {
              "comment": {
                "x-samplevalue": "FYI",
                "type": "string"
              }
            }
          }
        },
        "swagger": {
          "messagesReplyallResponse": {
            "x-has-customfields": false,
            "title": "messagesReplyallResponse",
            "x-vendor-objectname": "Reply",
            "properties": {}
          }
        }
      },
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "messagesReplyall",
          "name": "body",
          "description": "The reply body",
          "vendorDataType": "messagesReplyall",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The message ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "message_id",
          "required": true
        }
      ],
      "vendorPath": "/me/messages/{message_id}/replyall"
    },
    {
      "path": "/hubs/general/teams",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "method": "GET",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Search all calendars an user has access to",
      "type": "api",
      "hooks": [],
      "modelMigrated": false,
      "vendorPath": "https://graph.microsoft.com/beta/groups",
      "rootKey": "|value"
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Search all calendars an user has access to",
      "type": "api",
      "vendorPath": "https://graph.microsoft.com/beta/groups/{id}/channels",
      "path": "/hubs/general/teams/{id}/channels",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The Object ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The number of resources to return in a given page",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "pageSize",
          "required": false
        },
        {
          "vendorType": "query",
          "converter": "toQueryParameters",
          "dataType": "string",
          "name": "where",
          "description": "The CEQL search expression",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "converter:toQueryParameters",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "page",
          "required": false
        }
      ],
      "rootKey": "|value"
    },
    {
      "method": "GET",
      "kind": "eb",
      "description": "Search all calendars an user has access to",
      "type": "api",
      "vendorPath": "https://graph.microsoft.com/beta/teams/{id}/channels/{channelId}/messages",
      "path": "/hubs/general/teams/{id}/channels/{channelId}/messages",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "GET",
      "response": {
        "contentType": "application/json"
      },
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "channelId",
          "description": "The Object ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "channelId",
          "required": true
        },
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "id",
          "description": "The Object ID",
          "vendorDataType": "string",
          "source": "request",
          "type": "path",
          "vendorName": "id",
          "required": true
        },
        {
          "vendorType": "query",
          "converter": "toQueryParameters",
          "dataType": "string",
          "name": "where",
          "description": "The CEQL search expression",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "converter:toQueryParameters",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "page",
          "description": "The page number of resources to retrieve",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "page",
          "required": false
        },
        {
          "vendorType": "query",
          "dataType": "string",
          "name": "pageSize",
          "description": "The number of resources to return in a given page",
          "vendorDataType": "string",
          "source": "request",
          "type": "query",
          "vendorName": "pageSize",
          "required": false
        }
      ],
      "rootKey": "|value"
    },
    {
      "path": "/hubs/general/webhook-refresh",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "PATCH",
      "method": "PATCH",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Update a(n) /webhook-refresh when we updated other tokens",
      "type": "onRefresh",
      "hooks": [
        {
          "isLegacy": false,
          "contextParams": "request_vendor_body,request_vendor_path,configuration",
          "mimeType": "application/javascript",
          "body": "if (configuration.subscriptionId==null){\n done ({\n \"continue\":false,\n\n });\n} \nelse{\n done ({ \n \"request_vendor_path\": `/subscriptions/${configuration.subscriptionId}`,\n \"request_vendor_body\": {\n \"expirationDateTime\": addHours(8)\n }\n });\n}\n function addHours(h){\n let date =new Date();\n date.setHours(date.getHours()+h);\n return date;\n}\n\n",
          "type": "preRequest"
        }
      ],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "webhookBody",
          "name": "body",
          "description": "webhook update body",
          "vendorDataType": "webhookBody",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": false
        }
      ],
      "vendorPath": "/subscriptions"
    },
    {
      "path": "/hubs/general/webhook-refresh/{id}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "PATCH",
      "method": "PATCH",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Update a(n) /webhook-refresh when we updated other tokens",
      "type": "onRefresh",
      "hooks": [
        {
          "isLegacy": false,
          "contextParams": "request_vendor_body,request_vendor_path,configuration",
          "mimeType": "application/javascript",
          "body": "if (event.notification.enabled === false){\n\tdone ({ continue: false});\n}  \nelse{\n\tdone ({  \n\t    \"request_vendor_path\": `/subscriptions/${configuration.subscriptionId}`,\n\t    \"request_vendor_body\": {\n\t          \"expirationDateTime\": addHours(8)\n\t    }\n\t});\n}\n\tfunction addHours(h){\n    let date =new Date();\n    date.setHours(date.getHours()+h);\n    return date;\n}\n\n",
          "type": "preRequest"
        }
      ],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "webhookBody",
          "name": "body",
          "description": "webhook update body",
          "vendorDataType": "webhookBody",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": false
        }
      ],
      "vendorPath": "/subscriptions/{id}"
    },
    {
      "path": "/hubs/general/webhooks",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "POST",
      "method": "POST",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Create a(n) /webhooks",
      "type": "onProvisionWebhook",
      "hooks": [
        {
          "isLegacy": false,
          "contextParams": "request_vendor_body",
          "mimeType": "application/javascript",
          "body": "var date=new Date();\nfunction addHours(h){\n    date.setHours(date.getHours()+h);\n    return date;\n}\nvar newDate=addHours(8);\n\nvar body={\n  \"changeType\": \"created,updated,deleted\",\n  \"notificationUrl\": \"{webhookCallbackUrl}\",\n  \"resource\": \"/me/events\",\n  \"expirationDateTime\": newDate\n}\n\ndone ({  \n\t\"request_vendor_body\": JSON.stringify(body),  \n\t\"continue\": true \n})",
          "type": "preRequest"
        }
      ],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "body",
          "dataType": "webhookbody",
          "name": "body",
          "description": "The body of the webhook",
          "vendorDataType": "webhookbody",
          "source": "request",
          "type": "body",
          "vendorName": "body",
          "required": false
        },
        {
          "vendorType": "bodyField",
          "dataType": "string",
          "name": "subscriptionId",
          "description": "Getting the subscription id.",
          "vendorDataType": "string",
          "source": "response",
          "type": "configuration",
          "vendorName": "id",
          "required": false
        }
      ],
      "vendorPath": "/subscriptions"
    },
    {
      "path": "/hubs/general/webhooks/{id}",
      "paginationType": "VENDOR_SUPPORTED",
      "vendorMethod": "DELETE",
      "method": "DELETE",
      "kind": "eb",
      "response": {
        "contentType": "application/json"
      },
      "description": "Deletes a webhook by id",
      "type": "onDeleteWebhook",
      "hooks": [],
      "modelMigrated": false,
      "parameters": [
        {
          "vendorType": "path",
          "dataType": "string",
          "name": "subscriptionId",
          "description": "delete webhook.",
          "vendorDataType": "string",
          "source": "request",
          "type": "configuration",
          "vendorName": "id",
          "required": false
        }
      ],
      "vendorPath": "/subscriptions/{id}"
    }
  ],
  "protocolType": "http",
  "transformationsEnabled": true,
  "deleted": false,
  "hub": "general",
  "typeOauth": false,
  "name": "Microsoft Graph - Teams",
  "extendable": true,
  "parameters": [
    {
      "vendorType": "header",
      "name": "application/json",
      "source": "request",
      "type": "value",
      "vendorName": "Accept",
      "required": false
    },
    {
      "vendorType": "header",
      "name": "application/json",
      "source": "request",
      "type": "value",
      "vendorName": "Content-Type",
      "required": false
    }
  ]
}