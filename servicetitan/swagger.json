{"basePath":"/elements/api-v2","paths":{"/customers":{"post":{"summary":"Create a(n) customers","operationId":"createCustomer","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/customersPostReq"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["customers"]},"get":{"summary":"Search for customers","operationId":"getCustomers","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/customersObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["customers"]}},"/customers/{id}":{"get":{"summary":"Retrieve a(n) customers","operationId":"getCustomerById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["customers"]},"put":{"summary":"Update a(n) customers","operationId":"replaceCustomerById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/customersPutReq"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["customers"]}},"/invoices":{"post":{"summary":"Create a(n) invoices","operationId":"createInvoice","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/invoicesPostReq"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["invoices"]},"get":{"summary":"Search for invoices","operationId":"getInvoices","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/invoicesObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["invoices"]}},"/invoices/{id}":{"get":{"summary":"Retrieve a(n) invoices","operationId":"getInvoiceById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["invoices"]},"put":{"summary":"Update a(n) invoices","operationId":"replaceInvoiceById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/invoicesPutReq"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["invoices"]}},"/objects":{"get":{"operationId":"getObjects","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the available objects.","tags":["objects"]}},"/objects/{objectName}/docs":{"get":{"operationId":"getObjectsObjectNameDocs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Include discovery metadata in definitions","in":"query","name":"discovery","required":false,"type":"boolean"},{"description":"Optionally resolve swagger references for an inline object definition","in":"query","name":"resolveReferences","required":false,"type":"boolean"},{"description":"Include only OpenAPI / Swagger properties in definitions","in":"query","name":"basic","required":false,"type":"boolean"},{"description":"The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger","in":"query","name":"version","required":false,"default":"-1","type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/swaggerDocs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get swagger docs for an object.","tags":["objects"]}},"/objects/{objectName}/metadata":{"get":{"operationId":"getObjectsObjectNameMetadata","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/objectsMetadata"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the field for an object.","tags":["objects"]}},"/ping":{"get":{"operationId":"getPing","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Pong"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.","tags":["ping"]}},"/services":{"get":{"summary":"Search for services","operationId":"getServices","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/servicesObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["services"]}},"/services/{id}":{"get":{"summary":"Retrieve a(n) services","operationId":"getServiceById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/services"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["services"]}},"/vendors":{"post":{"summary":"Create a(n) vendors","operationId":"createVendor","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/vendorsPostReq"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["vendors"]},"get":{"summary":"Search for vendors","operationId":"getVendors","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["vendors"]}},"/vendors/{id}":{"get":{"summary":"Retrieve a(n) vendors","operationId":"getVendorById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["vendors"]},"put":{"summary":"Update a(n) vendors","operationId":"replaceVendorById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/vendorsPutReq"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["vendors"]}},"/{objectName}":{"get":{"operationId":"getByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {objectName}","tags":["objectName"]},"post":{"operationId":"createByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}":{"delete":{"operationId":"deleteObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {objectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"produces":["application/json","application/pdf"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {objectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}":{"get":{"operationId":"getObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {childObjectName}","tags":["objectName"]},"post":{"operationId":"createObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {childObjectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}/{childObjectId}":{"delete":{"operationId":"deleteObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {childObjectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {childObjectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]}}},"schemes":["https"],"definitions":{"invoicesItemsSku":{"properties":{"displayName":{"type":"string","x-samplevalue":"Standard WH"},"generalLedgerAccountId":{"format":"int32","type":"integer","x-samplevalue":400},"generalLedgerAccountName":{"type":"string","x-samplevalue":"Fixture"},"id":{"format":"int32","type":"integer","x-samplevalue":712},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2019-11-25T21:30:41.0956875Z"},"name":{"type":"string","x-samplevalue":"W1005"},"soldHours":{"format":"int32","type":"integer","x-samplevalue":10},"type":{"type":"string","x-samplevalue":"Service"}},"title":"sku","type":"object"},"servicesImages":{"properties":{"fileName":{"type":"string","x-samplevalue":"Images/Service/707-q4zc50pd.hcm.png"}},"title":"images","type":"object"},"swaggerdefinitions":{"x-has-customfields":false,"type":"object","title":"definitions","properties":{"definition-name":{"$ref":"#/definitions/swaggerdefinition-name"}}},"swaggerdefinition-name":{"x-has-customfields":false,"type":"object","title":"definition-name","properties":{"properties":{"$ref":"#/definitions/swaggerproperties"}}},"swaggerparameters":{"x-has-customfields":false,"title":"parameters","properties":{"schema":{"$ref":"#/definitions/swaggerparametersschema"},"in":{"x-samplevalue":"header","type":"string"},"name":{"x-samplevalue":"Authorization","type":"string"},"description":{"x-samplevalue":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string"},"type":{"x-samplevalue":"string","type":"string"},"required":{"x-samplevalue":true,"type":"boolean"}},"type":"object"},"servicesMaterials":{"properties":{"materialId":{"format":"int32","type":"integer","x-samplevalue":232875},"quantity":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"materials","type":"object"},"swagger-contacts-path":{"x-has-customfields":false,"type":"object","title":"/contacts","properties":{"post":{"$ref":"#/definitions/swaggerpost"}}},"swagger200":{"x-has-customfields":false,"type":"object","title":"200","properties":{"schema":{"$ref":"#/definitions/swaggerschema"},"description":{"x-samplevalue":"OK - Everything worked as expected","type":"string"}}},"swagger400":{"x-has-customfields":false,"type":"object","title":"400","properties":{"description":{"x-samplevalue":"Bad Request - Often due to a missing request parameter","type":"string"}}},"swagger401":{"x-has-customfields":false,"type":"object","title":"401","properties":{"description":{"x-samplevalue":"Unauthorized - An invalid element token, user secret and/or org secret provided","type":"string"}}},"invoicesStatus":{"properties":{"depositedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-30T09:08:50.3208821Z"},"name":{"type":"string","x-samplevalue":"Exported"},"value":{"format":"int32","type":"integer","x-samplevalue":2}},"title":"status","type":"object"},"servicesObject":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"addOnMemberPrice":{"format":"int32","type":"integer","x-samplevalue":675},"addOnPrice":{"format":"int32","type":"integer","x-samplevalue":700},"addOns":{"items":{"type":"integer"},"type":"array","x-samplevalue":[232931,232933,232935,232937]},"baseRate1":{"format":"int32","type":"integer","x-samplevalue":0},"baseRate2":{"format":"int32","type":"integer","x-samplevalue":0},"baseRate3":{"format":"int32","type":"integer","x-samplevalue":0},"bonus":{"format":"int32","type":"integer","x-samplevalue":0},"categories":{"items":{"$ref":"#/definitions/servicesCategories"},"type":"array"},"commissionBonus":{"format":"int32","type":"integer","x-samplevalue":0},"commissionHours":{"format":"int32","type":"integer","x-samplevalue":0},"description":{"type":"string","x-samplevalue":"Part of the Standard Collection®, this elegant toilet features the AquaForce® flushing system for outstanding performance. The longer seat and bowl with a tall 16-½” rim provide greater comfort and ease of use. Inspired by the classic styles of the 1920s, design-matched fixtures from this collection complement traditional décor nicely."},"displayInAmount":{"type":"boolean","x-samplevalue":false},"displayName":{"type":"string","x-samplevalue":"American Standard Toilet"},"externalId":{"type":"string","x-samplevalue":"1646"},"id":{"format":"int32","type":"integer","x-samplevalue":706},"images":{"items":{"$ref":"#/definitions/servicesImages"},"type":"array"},"isOtTask":{"type":"boolean","x-samplevalue":false},"materials":{"items":{"$ref":"#/definitions/servicesMaterials"},"type":"array"},"memberPrice":{"format":"int32","type":"integer","x-samplevalue":725},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:45:45.3207218Z"},"name":{"type":"string","x-samplevalue":"AMSTDTLT"},"noTax":{"type":"boolean","x-samplevalue":false},"payTechSpecificBonus":{"type":"boolean","x-samplevalue":false},"paysCommission":{"type":"boolean","x-samplevalue":true},"price":{"format":"int32","type":"integer","x-samplevalue":750},"quickbooksAccount":{"type":"string","x-samplevalue":"Drain"},"source":{"type":"string","x-samplevalue":"ServiceTitan Pricebook"},"taxable":{"type":"boolean","x-samplevalue":false},"upgrades":{"items":{"type":"integer"},"type":"array","x-samplevalue":[707,708]},"videos":{"items":{"$ref":"#/definitions/servicesVideos"},"type":"array"}},"title":"services","type":"object"},"swagger403":{"x-has-customfields":false,"type":"object","title":"403","properties":{"description":{"x-samplevalue":"Forbidden - Access to the resource by the provider is forbidden","type":"string"}}},"swagger404":{"x-has-customfields":false,"type":"object","title":"404","properties":{"description":{"x-samplevalue":"Not found - The requested resource is not found","type":"string"}}},"swagger405":{"x-has-customfields":false,"type":"object","title":"405","properties":{"description":{"x-samplevalue":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected","type":"string"}}},"servicesCategories":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"id":{"format":"int32","type":"integer","x-samplevalue":690},"name":{"type":"string","x-samplevalue":"Toilet"}},"title":"categories","type":"object"},"swaggerDocs":{"x-has-customfields":false,"title":"swaggerDocs","properties":{"basePath":{"x-samplevalue":"/elements/api-v2/hubs/crm","type":"string"},"paths":{"$ref":"#/definitions/swaggerpaths"},"host":{"x-samplevalue":"localhost:5050","type":"string"},"schemes":{"x-samplevalue":["http"],"type":"array","items":{"type":"string"}},"definitions":{"$ref":"#/definitions/swaggerdefinitions"},"swagger":{"x-samplevalue":"2.0","type":"string"},"info":{"$ref":"#/definitions/swaggerinfo"},"tags":{"type":"array","items":{"$ref":"#/definitions/swaggertags"}}},"type":"object"},"swaggercontact":{"x-has-customfields":false,"type":"object","title":"contact","properties":{"email":{"x-samplevalue":"support@cloud-elements.com","type":"string"}}},"customersCustomFields":{"properties":{"name":{"type":"string","x-samplevalue":"Test Custom Field"},"typeId":{"format":"int32","type":"integer","x-samplevalue":473601},"value":{"type":"string"}},"title":"customFields","type":"object"},"invoicesItems":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"description":{"type":"string","x-samplevalue":"Standard Water Heater"},"id":{"format":"int32","type":"integer","x-samplevalue":4546},"invoiceId":{"format":"int32","type":"integer","x-samplevalue":4537},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:48:31.4774552Z"},"order":{"format":"int32","type":"integer","x-samplevalue":1},"qty":{"format":"int32","type":"integer","x-samplevalue":1},"salesType":{"format":"int32","type":"integer","x-samplevalue":0},"sku":{"$ref":"#/definitions/invoicesItemsSku"},"total":{"format":"int32","type":"integer","x-samplevalue":2000},"totalCost":{"format":"int32","type":"integer","x-samplevalue":0},"unitRate":{"format":"int32","type":"integer","x-samplevalue":2000}},"title":"items","type":"object"},"invoicesPaymentsType":{"properties":{"id":{"format":"int32","type":"integer","x-samplevalue":56},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2019-02-14T09:45:38.8763461Z"},"name":{"type":"string","x-samplevalue":"Visa"}},"title":"type","type":"object"},"swagger406":{"x-has-customfields":false,"type":"object","title":"406","properties":{"description":{"x-samplevalue":"Not acceptable - The response content type does not match the 'Accept' header value","type":"string"}}},"swaggerdefinition-property":{"x-has-customfields":false,"type":"object","title":"#/definitions/definition-property","properties":{"type":{"x-samplevalue":"string","type":"string"}}},"Object":{"description":"Fields for the object. There will be fields associated with an Object, which are not all described here.","properties":{"objectField":{"type":"string"}},"type":"object"},"swagger409":{"x-has-customfields":false,"type":"object","title":"409","properties":{"description":{"x-samplevalue":"Conflict - If a resource being created already exists","type":"string"}}},"servicesVideos":{"properties":{"url":{"type":"string","x-samplevalue":"https://www.youtube.com/watch?v=Qp6dao9LOxA"}},"title":"videos","type":"object"},"objectsMetadata":{"properties":{"fields":{"items":{"$ref":"#/definitions/objectsMetadataFields"},"type":"array"}},"type":"object"},"invoicesPurchaseOrders":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":600},"batchId":{"format":"int32","type":"integer","x-samplevalue":0},"date":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:49:53.7675719Z"},"id":{"format":"int32","type":"integer","x-samplevalue":8073},"invoiceId":{"format":"int32","type":"integer","x-samplevalue":3790},"items":{"items":{"$ref":"#/definitions/invoicesPurchaseOrdersItems"},"type":"array"},"jobId":{"format":"int32","type":"integer","x-samplevalue":3788},"jobNumber":{"type":"string","x-samplevalue":"3788"},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:49:57.1997055Z"},"purchaseOrderNumber":{"type":"string","x-samplevalue":"3788-001"},"receivedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-30T20:49:53.7675719Z"},"sentOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:49:57.1086766Z"},"tax":{"format":"int32","type":"integer","x-samplevalue":0},"technician":{"$ref":"#/definitions/invoicesPurchaseOrdersTechnician"},"type":{"type":"string","x-samplevalue":"NonJobRestock"},"typeId":{"format":"int32","type":"integer","x-samplevalue":8061},"vendor":{"$ref":"#/definitions/invoicesPurchaseOrdersVendor"}},"title":"purchaseOrders","type":"object"},"Pong":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"},"valid":{"type":"boolean"}},"type":"object"},"swaggerschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact-POST-Response","type":"string"}}},"invoicesPayments":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"amount":{"format":"int32","type":"integer","x-samplevalue":2000},"batchId":{"format":"int32","type":"integer","x-samplevalue":0},"batchNumber":{"format":"int32","type":"integer","x-samplevalue":0},"id":{"format":"int32","type":"integer","x-samplevalue":4547},"invoiceId":{"format":"int32","type":"integer","x-samplevalue":4537},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:48:31.4825011Z"},"paidOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2018-11-29T00:00:00Z"},"totalAmount":{"format":"int32","type":"integer","x-samplevalue":2000},"type":{"$ref":"#/definitions/invoicesPaymentsType"}},"title":"payments","type":"object"},"swagger415":{"x-has-customfields":false,"type":"object","title":"415","properties":{"description":{"x-samplevalue":"Unsupported media type - The server cannot handle the requested Content-Type","type":"string"}}},"invoicesPurchaseOrdersItems":{"properties":{"chargeable":{"type":"boolean","x-samplevalue":false},"cost":{"format":"int32","type":"integer","x-samplevalue":400},"id":{"format":"int32","type":"integer","x-samplevalue":8086},"name":{"type":"string","x-samplevalue":"M1003"},"quantity":{"format":"int32","type":"integer","x-samplevalue":1},"skuId":{"format":"int32","type":"integer","x-samplevalue":702},"total":{"format":"int32","type":"integer","x-samplevalue":0}},"title":"items","type":"object"},"invoicesObject":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"balance":{"format":"int32","type":"integer","x-samplevalue":0},"batchId":{"format":"int32","type":"integer","x-samplevalue":8464},"batchName":{"type":"string","x-samplevalue":"My Batch (3)"},"batchNumber":{"format":"int32","type":"integer","x-samplevalue":3},"customerId":{"format":"int32","type":"integer","x-samplevalue":553},"id":{"format":"int32","type":"integer","x-samplevalue":755},"invoicedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2017-11-27T00:00:00Z"},"items":{"items":{"$ref":"#/definitions/invoicesItems"},"type":"array"},"jobId":{"format":"int32","type":"integer","x-samplevalue":753},"jobNumber":{"type":"string","x-samplevalue":"753"},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2020-04-07T22:51:27.7832795Z"},"number":{"type":"string","x-samplevalue":"753"},"payments":{"items":{"$ref":"#/definitions/invoicesPayments"},"type":"array"},"purchaseOrders":{"items":{"$ref":"#/definitions/invoicesPurchaseOrders"},"type":"array"},"royaltyStatus":{"type":"string","x-samplevalue":"Pending"},"status":{"$ref":"#/definitions/invoicesStatus"},"subtotal":{"format":"double","type":"number","x-samplevalue":21427.14},"summary":{"type":"string","x-samplevalue":"yest another summary from ryan"},"tax":{"format":"int32","type":"integer","x-samplevalue":0},"total":{"format":"double","type":"number","x-samplevalue":21427.14}},"title":"invoices","type":"object"},"swaggerparametersschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact","type":"string"}}},"swaggerresponses":{"x-has-customfields":false,"type":"object","title":"responses","properties":{"200":{"$ref":"#/definitions/swagger200"},"400":{"$ref":"#/definitions/swagger400"},"401":{"$ref":"#/definitions/swagger401"},"403":{"$ref":"#/definitions/swagger403"},"404":{"$ref":"#/definitions/swagger404"},"405":{"$ref":"#/definitions/swagger405"},"406":{"$ref":"#/definitions/swagger406"},"409":{"$ref":"#/definitions/swagger409"},"415":{"$ref":"#/definitions/swagger415"},"500":{"$ref":"#/definitions/swagger500"},"502":{"$ref":"#/definitions/swagger502"}}},"swaggerproperties":{"x-has-customfields":false,"type":"object","title":"properties","properties":{"definition-property":{"$ref":"#/definitions/swaggerdefinition-property"}}},"customersContacts":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"id":{"format":"int32","type":"integer","x-samplevalue":554},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2019-11-14T10:10:36.8756204Z"},"type":{"type":"string","x-samplevalue":"Phone"},"value":{"type":"string","x-samplevalue":"8018035363"}},"title":"contacts","type":"object"},"customers":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"address":{"$ref":"#/definitions/customersAddress"},"balance":{"format":"int32","type":"integer","x-samplevalue":800},"contacts":{"items":{"$ref":"#/definitions/customersContacts"},"type":"array"},"createdBy":{"format":"int32","type":"integer","x-samplevalue":15},"createdOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:45:43.8870531Z"},"customFields":{"items":{"$ref":"#/definitions/customersCustomFields"},"type":"array"},"doNotMail":{"type":"boolean","x-samplevalue":false},"doNotService":{"type":"boolean","x-samplevalue":false},"email":{"type":"string","x-samplevalue":"noreply@servicetitan.com","x-sub-format":"email"},"hasActiveMembership":{"type":"boolean","x-samplevalue":false},"id":{"format":"int32","type":"integer","x-samplevalue":553},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2020-09-04T00:02:01.918665Z"},"name":{"type":"string","x-samplevalue":"Max Ambrose"},"phoneSettings":{"items":{"$ref":"#/definitions/customersPhoneSettings"},"type":"array"},"type":{"type":"string","x-samplevalue":"Residential"}},"title":"customers","type":"object"},"customersAddress":{"properties":{"city":{"type":"string","x-samplevalue":"Los Angeles"},"country":{"type":"string","x-samplevalue":"USA"},"latitude":{"format":"double","type":"number","x-samplevalue":34.068347},"longitude":{"format":"double","type":"number","x-samplevalue":-118.297552},"state":{"type":"string","x-samplevalue":"CA"},"street":{"type":"string","x-samplevalue":"320 S Alexandria Ave"},"streetAddress":{"type":"string","x-samplevalue":"320 S Alexandria Ave"},"zip":{"type":"string","x-samplevalue":"90020"}},"title":"address","type":"object"},"invoicesPurchaseOrdersTechnician":{"properties":{"id":{"format":"int32","type":"integer","x-samplevalue":414},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2020-04-28T09:31:19.1807808Z"},"name":{"type":"string","x-samplevalue":"Jorah Mormont"}},"title":"technician","type":"object"},"swaggerinfo":{"x-has-customfields":false,"type":"object","title":"info","properties":{"contact":{"$ref":"#/definitions/swaggercontact"},"title":{"x-samplevalue":"hubspotcrm","type":"string"},"version":{"x-samplevalue":"api-v2","type":"string"}}},"swagger500":{"x-has-customfields":false,"type":"object","title":"500","properties":{"description":{"x-samplevalue":"Server error - Something went wrong on the Cloud Elements server","type":"string"}}},"swaggerpaths":{"x-has-customfields":false,"type":"object","title":"paths","properties":{"/contacts":{"$ref":"#/definitions/swagger-contacts-path"}}},"swagger502":{"x-has-customfields":false,"type":"object","title":"502","properties":{"description":{"x-samplevalue":"Provider server error - Something went wrong on the Provider or Endpoint's server","type":"string"}}},"objectsMetadataFields":{"properties":{"mask":{"type":"string"},"type":{"type":"string"},"vendorDisplayName":{"type":"string"},"vendorPath":{"type":"string"},"vendorReadOnly":{"type":"boolean"},"vendorRequired":{"type":"boolean"}},"type":"object"},"services":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"addOnMemberPrice":{"format":"int32","type":"integer","x-samplevalue":1375},"addOnPrice":{"format":"int32","type":"integer","x-samplevalue":1400},"baseRate1":{"format":"int32","type":"integer","x-samplevalue":0},"baseRate2":{"format":"int32","type":"integer","x-samplevalue":0},"baseRate3":{"format":"int32","type":"integer","x-samplevalue":0},"bonus":{"format":"int32","type":"integer","x-samplevalue":0},"categories":{"items":{"$ref":"#/definitions/servicesCategories"},"type":"array"},"commissionBonus":{"format":"int32","type":"integer","x-samplevalue":0},"commissionHours":{"format":"int32","type":"integer","x-samplevalue":0},"description":{"type":"string","x-samplevalue":"Maximize style. Maximize Savings. Save the Environment. Caroma is at the forefront of product innovation. By choosing one of Caroma's toilet suites, you are making a smart choice. During the last 50 years, we have:\n\n* Proven water savings - up to 18,000 gallons (69,000 liters) per year\n* Proven reliability - created by the world leader in dual flush technology\n* Proven technology - industry-recognized, award-winning\n* Based on 1:4 solid/ liquid usage using a 3.5 gal/13 ltr toilet for an average family of four and and 5 flushes/person/day"},"displayInAmount":{"type":"boolean","x-samplevalue":false},"displayName":{"type":"string","x-samplevalue":"Carmona Profile Toilet"},"id":{"format":"int32","type":"integer","x-samplevalue":707},"images":{"items":{"$ref":"#/definitions/servicesImages"},"type":"array"},"isOtTask":{"type":"boolean","x-samplevalue":false},"memberPrice":{"format":"int32","type":"integer","x-samplevalue":1425},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:45:45.4876962Z"},"name":{"type":"string","x-samplevalue":"CRMPRFLTLT"},"noTax":{"type":"boolean","x-samplevalue":false},"payTechSpecificBonus":{"type":"boolean","x-samplevalue":false},"paysCommission":{"type":"boolean","x-samplevalue":false},"price":{"format":"int32","type":"integer","x-samplevalue":1450},"quickbooksAccount":{"type":"string","x-samplevalue":"Drain"},"taxable":{"type":"boolean","x-samplevalue":false},"upgrades":{"items":{"type":"integer"},"type":"array","x-samplevalue":[708]},"videos":{"items":{"$ref":"#/definitions/servicesVideos"},"type":"array"}},"title":"services","type":"object"},"customersObject":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"address":{"$ref":"#/definitions/customersAddress"},"balance":{"format":"int32","type":"integer","x-samplevalue":2000},"contacts":{"items":{"$ref":"#/definitions/customersContacts"},"type":"array"},"createdBy":{"format":"int32","type":"integer","x-samplevalue":15},"createdOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2018-11-29T20:45:43.3611732Z"},"customFields":{"items":{"$ref":"#/definitions/customersCustomFields"},"type":"array"},"doNotMail":{"type":"boolean","x-samplevalue":false},"doNotService":{"type":"boolean","x-samplevalue":false},"email":{"type":"string","x-samplevalue":"noreply@servicetitan.com","x-sub-format":"email"},"hasActiveMembership":{"type":"boolean","x-samplevalue":false},"id":{"format":"int32","type":"integer","x-samplevalue":442},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2019-09-12T04:52:48.312277Z"},"name":{"type":"string","x-samplevalue":"Jack Turner"},"phoneSettings":{"items":{"$ref":"#/definitions/customersPhoneSettings"},"type":"array"},"type":{"type":"string","x-samplevalue":"Commercial"}},"title":"customers","type":"object"},"customersPhoneSettings":{"properties":{"doNotText":{"type":"boolean","x-samplevalue":false},"phoneNumber":{"type":"string","x-samplevalue":"8018035363"}},"title":"phoneSettings","type":"object"},"invoicesPurchaseOrdersVendor":{"properties":{"active":{"type":"boolean","x-samplevalue":true},"id":{"format":"int32","type":"integer","x-samplevalue":395},"isTruckReplenishment":{"type":"boolean","x-samplevalue":false},"modifiedOn":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'","x-samplevalue":"2019-09-12T04:52:49.8651929Z"},"name":{"type":"string","x-samplevalue":"Vendor01"}},"title":"vendor","type":"object"},"swaggerpost":{"x-has-customfields":false,"type":"object","title":"post","properties":{"summary":{"x-samplevalue":"Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.","type":"string"},"operationId":{"x-samplevalue":"createContact","type":"string"},"responses":{"$ref":"#/definitions/swaggerresponses"},"parameters":{"type":"array","items":{"$ref":"#/definitions/swaggerparameters"}},"tags":{"x-samplevalue":["contacts"],"type":"array","items":{"type":"string"}}}},"swaggertags":{"x-has-customfields":false,"title":"tags","properties":{"name":{"x-samplevalue":"contacts","type":"string"}},"type":"object"}},"swagger":"2.0","info":{"x-element-name":"ServiceTitan","x-element-hub":"general","x-element-key":"servicetitan","contact":{"email":"support@cloud-elements.com"},"title":"servicetitan","x-element-id":28039,"version":"api-v2"},"tags":[{"name":"invoices"},{"name":"ping"},{"name":"objects"},{"name":"objectName"},{"name":"services"},{"name":"customers"},{"name":"vendors"}]}