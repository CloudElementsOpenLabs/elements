{"basePath":"/elements/api-v2","paths":{"/companies":{"post":{"summary":"Create a(n) /companies","operationId":"createCompany","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/companies"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["companies"]},"get":{"summary":"Search for /companies","operationId":"getCompanies","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["companies"]}},"/companies/schema":{"get":{"summary":"Retrieve the Company profile schema","operationId":"getCompaniesSchema","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["companies"]}},"/companies/{id}":{"patch":{"summary":"Update a(n) /companies","operationId":"updateCompanyById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/companies"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["companies"]},"get":{"summary":"Retrieve a(n) /companies","operationId":"getCompanyById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["companies"]}},"/jobs":{"post":{"summary":"Create a(n) /jobs","operationId":"createJob","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/jobs"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["jobs"]},"get":{"summary":"Search for /jobs","operationId":"getJobs","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/jobs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"staleness","description":"the staleness of the search cache","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["jobs"]}},"/jobs/schema":{"get":{"summary":"Retrieve the Jobs profile schema","operationId":"getJobsSchema","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["jobs"]}},"/jobs/{id}":{"patch":{"summary":"Update a(n) /jobs","operationId":"updateJobById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/jobs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/jobs"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["jobs"]},"get":{"summary":"Retrieve a(n) /jobs","operationId":"getJobById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/jobs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["jobs"]}},"/objects":{"get":{"operationId":"getObjects","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the available objects.","tags":["objects"]}},"/objects/{objectName}/docs":{"get":{"operationId":"getObjectsObjectNameDocs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Include discovery metadata in definitions","in":"query","name":"discovery","required":false,"type":"boolean"},{"description":"Optionally resolve swagger references for an inline object definition","in":"query","name":"resolveReferences","required":false,"type":"boolean"},{"description":"Include only OpenAPI / Swagger properties in definitions","in":"query","name":"basic","required":false,"type":"boolean"},{"description":"The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger","in":"query","name":"version","required":false,"default":"-1","type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/swaggerDocs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get swagger docs for an object.","tags":["objects"]}},"/objects/{objectName}/metadata":{"get":{"operationId":"getObjectsObjectNameMetadata","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/objectsMetadata"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the field for an object.","tags":["objects"]}},"/people":{"post":{"summary":"Create a(n) /people","operationId":"createPeople","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/people"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["people"]},"get":{"summary":"Search for /people","operationId":"getPeople","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"staleness","description":"the staleness of the search cache","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["people"]}},"/people/schema":{"get":{"summary":"Retrieve the People profile schema","operationId":"getPeopleSchema","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["people"]}},"/people/{id}":{"patch":{"summary":"Update a(n) /person","operationId":"updatePeopleById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/people"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/people"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["people"]},"get":{"summary":"Retrieve a(n) /people","operationId":"getPeopleById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/people"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["people"]}},"/ping":{"get":{"operationId":"getPing","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Pong"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.","tags":["ping"]}},"/talentpools":{"post":{"summary":"Create a(n) /talentpools","operationId":"createTalentpool","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/talentpools"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/talentpools"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["talentpools"]},"get":{"summary":"Search for /talentpools","operationId":"getTalentpools","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/talentpools"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["talentpools"]}},"/talentpools/schema":{"get":{"summary":"Retrieve the Talent Pools profile schema","operationId":"getTalentpoolsSchema","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["talentpools"]}},"/talentpools/{id}":{"patch":{"summary":"Update a(n) /talentpools","operationId":"updateTalentpoolById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/talentpools"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/talentpools"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["talentpools"]},"get":{"summary":"Retrieve a(n) /talentpools","operationId":"getTalentpoolById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/talentpools"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id ID","type":"string","required":true}],"tags":["talentpools"]}},"/{objectName}":{"get":{"operationId":"getByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {objectName}","tags":["objectName"]},"post":{"operationId":"createByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}":{"delete":{"operationId":"deleteObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {objectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"produces":["application/json","application/pdf"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {objectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}":{"get":{"operationId":"getObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {childObjectName}","tags":["objectName"]},"post":{"operationId":"createObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {childObjectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {childObjectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}/{childObjectId}":{"delete":{"operationId":"deleteObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {childObjectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {childObjectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]}}},"host":"localhost:8080","schemes":["http"],"definitions":{"jobsHiretype":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"New"},"id":{"type":"string","x-samplevalue":"D15001"},"value":{"type":"string","x-samplevalue":"New"}},"title":"hiretype","type":"object"},"education":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"talentpools":{"items":{"properties":{"talentpool":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"}},"type":"object"},"type":"array"},"hiringmanager":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swaggerdefinitions":{"x-has-customfields":false,"type":"object","title":"definitions","properties":{"definition-name":{"$ref":"#/definitions/swaggerdefinition-name"}}},"videointerviewpackage":{"items":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"jobsIncentive":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":45},"amountstring":{"type":"string","x-samplevalue":"45.00"},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"incentive","type":"object"},"startdate":{"format":"date","type":"string"},"swaggerdefinition-name":{"x-has-customfields":false,"type":"object","title":"definition-name","properties":{"properties":{"$ref":"#/definitions/swaggerproperties"}}},"qualifications":{"type":"string"},"incentive":{"properties":{"amount":{"type":"number"},"amountstring":{"type":"string"},"currency":{"type":"string"}},"type":"object"},"jobsFolder":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Pending Approval"},"id":{"type":"string","x-samplevalue":"D31002"},"value":{"type":"string","x-samplevalue":"Pending Approval"}},"title":"folder","type":"object"},"hiretype":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsMinimumsalary":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":60000},"amountstring":{"type":"string","x-samplevalue":"60000.00"},"currency":{"type":"string","x-samplevalue":"USD"},"timeframe":{"type":"string","x-samplevalue":"Annually"}},"title":"minimumsalary","type":"object"},"swagger-contacts-path":{"x-has-customfields":false,"type":"object","title":"/contacts","properties":{"post":{"$ref":"#/definitions/swaggerpost"}}},"jobsAdditionallocationsLocation":{"properties":{"address":{"type":"string","x-samplevalue":"https://api.icims.com/customers/10116/companies/5/fields/addresses/2"},"companyid":{"format":"int32","type":"integer","x-samplevalue":5},"id":{"format":"int32","type":"integer","x-samplevalue":2},"value":{"type":"string","x-samplevalue":"Your Company Name - 1234 Main Street Suite 2 New York, New York 10002 United States New York, "}},"title":"location","type":"object"},"jobsEducation":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Bachelor's Degree"},"id":{"type":"string","x-samplevalue":"D37002017004"},"value":{"type":"string","x-samplevalue":"Bachelor's Degree"}},"title":"education","type":"object"},"field25288":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swagger400":{"x-has-customfields":false,"type":"object","title":"400","properties":{"description":{"x-samplevalue":"Bad Request - Often due to a missing request parameter","type":"string"}}},"swagger401":{"x-has-customfields":false,"type":"object","title":"401","properties":{"description":{"x-samplevalue":"Unauthorized - An invalid element token, user secret and/or org secret provided","type":"string"}}},"field25293":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swagger403":{"x-has-customfields":false,"type":"object","title":"403","properties":{"description":{"x-samplevalue":"Forbidden - Access to the resource by the provider is forbidden","type":"string"}}},"swagger404":{"x-has-customfields":false,"type":"object","title":"404","properties":{"description":{"x-samplevalue":"Not found - The requested resource is not found","type":"string"}}},"swagger405":{"x-has-customfields":false,"type":"object","title":"405","properties":{"description":{"x-samplevalue":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected","type":"string"}}},"jobpostend":{"format":"date","type":"string"},"priority":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swaggerDocs":{"x-has-customfields":false,"title":"swaggerDocs","properties":{"basePath":{"x-samplevalue":"/elements/api-v2/hubs/crm","type":"string"},"paths":{"$ref":"#/definitions/swaggerpaths"},"host":{"x-samplevalue":"localhost:5050","type":"string"},"schemes":{"x-samplevalue":["http"],"type":"array","items":{"type":"string"}},"definitions":{"$ref":"#/definitions/swaggerdefinitions"},"swagger":{"x-samplevalue":"2.0","type":"string"},"info":{"$ref":"#/definitions/swaggerinfo"},"tags":{"type":"array","items":{"$ref":"#/definitions/swaggertags"}}},"type":"object"},"jobtype":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsPositioncategory":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Administrative/Clerical"},"id":{"type":"string","x-samplevalue":"C8718"},"soccode":{"type":"string","x-samplevalue":"0"},"value":{"type":"string","x-samplevalue":"Administrative/Clerical"}},"title":"positioncategory","type":"object"},"eeocategory":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsMaximumsalary":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":50000},"amountstring":{"type":"string","x-samplevalue":"50000.00"},"currency":{"type":"string","x-samplevalue":"USD"},"timeframe":{"type":"string","x-samplevalue":"Annually"}},"title":"maximumsalary","type":"object"},"swaggercontact":{"x-has-customfields":false,"type":"object","title":"contact","properties":{"email":{"x-samplevalue":"support@cloud-elements.com","type":"string"}}},"enddate":{"format":"date","type":"string"},"folder":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobnumber":{"type":"string"},"peoplePhones":{"properties":{"entry":{"format":"int32","type":"integer","x-samplevalue":49},"phonenumber":{"type":"string","x-samplevalue":"8882224444"},"phonetype":{"$ref":"#/definitions/peoplePhonesPhonetype"},"primary":{"type":"boolean","x-samplevalue":true}},"title":"phones","type":"object"},"peoplePhonesPhonetype":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Mobile"},"id":{"type":"string","x-samplevalue":"D83004"},"value":{"type":"string","x-samplevalue":"Mobile"}},"title":"phonetype","type":"object"},"jobsJobtype":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Exempt"},"id":{"type":"string","x-samplevalue":"C8711"},"value":{"type":"string","x-samplevalue":"Exempt"}},"title":"jobtype","type":"object"},"peopleTags":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Ambitious"},"id":{"type":"string","x-samplevalue":"D105001"},"value":{"type":"string","x-samplevalue":"Ambitious"}},"title":"tags","type":"object"},"swagger406":{"x-has-customfields":false,"type":"object","title":"406","properties":{"description":{"x-samplevalue":"Not acceptable - The response content type does not match the 'Accept' header value","type":"string"}}},"field25294":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swaggerdefinition-property":{"x-has-customfields":false,"type":"object","title":"#/definitions/definition-property","properties":{"type":{"x-samplevalue":"string","type":"string"}}},"Object":{"description":"Fields for the object. There will be fields associated with an Object, which are not all described here.","properties":{"objectField":{"type":"string"}},"type":"object"},"swagger409":{"x-has-customfields":false,"type":"object","title":"409","properties":{"description":{"x-samplevalue":"Conflict - If a resource being created already exists","type":"string"}}},"Pong":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"}},"type":"object"},"industry":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsJoblocation":{"properties":{"address":{"type":"string","x-samplevalue":"https://api.icims.com/customers/10116/companies/5/fields/addresses/2"},"companyid":{"format":"int32","type":"integer","x-samplevalue":5},"id":{"format":"int32","type":"integer","x-samplevalue":2},"value":{"type":"string","x-samplevalue":"Your Company Name - 1234 Main Street Suite 2 New York, New York 10002 United States New York, "}},"title":"joblocation","type":"object"},"experienceyears":{"type":"integer"},"assessmenttype":{"items":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"jobsPositionlevel":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Assistant Manager"},"id":{"type":"string","x-samplevalue":"C3874"},"value":{"type":"string","x-samplevalue":"Assistant Manager"}},"title":"positionlevel","type":"object"},"commission":{"type":"string"},"jobsBillrate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":233},"amountstring":{"type":"string","x-samplevalue":"233.00"},"currency":{"type":"string","x-samplevalue":"USD"},"timeframe":{"type":"string","x-samplevalue":"Annually"}},"title":"billrate","type":"object"},"costcenter":{"type":"string"},"percentofbase":{"type":"integer"},"drugscreenpackage":{"items":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"swagger500":{"x-has-customfields":false,"type":"object","title":"500","properties":{"description":{"x-samplevalue":"Server error - Something went wrong on the Cloud Elements server","type":"string"}}},"swaggerpaths":{"x-has-customfields":false,"type":"object","title":"paths","properties":{"/contacts":{"$ref":"#/definitions/swagger-contacts-path"}}},"jobtitle":{"type":"string"},"swagger502":{"x-has-customfields":false,"type":"object","title":"502","properties":{"description":{"x-samplevalue":"Provider server error - Something went wrong on the Provider or Endpoint's server","type":"string"}}},"jobs":{"properties":{"additionallocations":{"items":{"$ref":"#/definitions/jobsAdditionallocations"},"type":"array"},"billrate":{"$ref":"#/definitions/jobsBillrate"},"bonus":{"type":"string","x-samplevalue":"45"},"commission":{"type":"string","x-samplevalue":"34"},"costcenter":{"type":"string","x-samplevalue":"cost_centre"},"createdby":{"$ref":"#/definitions/jobsCreatedby"},"createddate":{"type":"string","x-samplevalue":"2019-01-15 04:34 AM"},"department":{"$ref":"#/definitions/jobsDepartment"},"duedate":{"format":"date","type":"string","x-mask":"yyyy-MM-dd","x-samplevalue":"2019-02-01"},"education":{"$ref":"#/definitions/jobsEducation"},"eeocategory":{"$ref":"#/definitions/jobsEeocategory"},"enddate":{"format":"date","type":"string","x-mask":"yyyy-MM-dd","x-samplevalue":"2019-05-31"},"experienceyears":{"format":"int32","type":"integer","x-samplevalue":2},"externalid":{"type":"string","x-samplevalue":"23333"},"folder":{"$ref":"#/definitions/jobsFolder"},"hiretype":{"$ref":"#/definitions/jobsHiretype"},"incentive":{"$ref":"#/definitions/jobsIncentive"},"joblocation":{"$ref":"#/definitions/jobsJoblocation"},"jobnumber":{"type":"string","x-samplevalue":"12345"},"jobpostend":{"format":"date","type":"string","x-mask":"yyyy-MM-dd","x-samplevalue":"2019-02-01"},"jobpoststart":{"format":"date","type":"string","x-mask":"yyyy-MM-dd","x-samplevalue":"2019-01-22"},"jobtitle":{"type":"string","x-samplevalue":"Assistant to the Regional Manager"},"jobtype":{"$ref":"#/definitions/jobsJobtype"},"links":{"items":{"$ref":"#/definitions/jobsLinks"},"type":"array"},"maximumsalary":{"$ref":"#/definitions/jobsMaximumsalary"},"minimumsalary":{"$ref":"#/definitions/jobsMinimumsalary"},"numberofpositions":{"format":"int32","type":"integer","x-samplevalue":1},"overview":{"type":"string","x-samplevalue":"<p style=\"margin: 0px;\">this is fake overview</p>"},"positioncategory":{"$ref":"#/definitions/jobsPositioncategory"},"positionlevel":{"$ref":"#/definitions/jobsPositionlevel"},"positiontype":{"$ref":"#/definitions/jobsPositiontype"},"priority":{"$ref":"#/definitions/jobsPriority"},"qualifications":{"type":"string","x-samplevalue":"<p style=\"margin: 0px;\">this is fake qualifications</p>"},"responsibilities":{"type":"string","x-samplevalue":"<p style=\"margin: 0px;\">this is fake responsibilities</p>"},"secondaryrecruiter":{"$ref":"#/definitions/jobsSecondaryrecruiter"},"startdate":{"format":"date","type":"string","x-mask":"yyyy-MM-dd","x-samplevalue":"2019-01-29"},"travel":{"$ref":"#/definitions/jobsTravel"},"updateddate":{"type":"string","x-samplevalue":"2019-01-15 05:58 AM"},"visa":{"$ref":"#/definitions/jobsVisa"}},"title":"jobs","type":"object"},"jobsCreatedby":{"properties":{"id":{"format":"int32","type":"integer","x-samplevalue":162},"profile":{"type":"string","x-samplevalue":"https://api.icims.com/customers/10116/people/162"},"value":{"type":"string","x-samplevalue":"Cloud Elements Test API User"}},"title":"createdby","type":"object"},"objectsMetadataFields":{"properties":{"mask":{"type":"string"},"type":{"type":"string"},"vendorDisplayName":{"type":"string"},"vendorPath":{"type":"string"},"vendorReadOnly":{"type":"boolean"},"vendorRequired":{"type":"boolean"}},"type":"object"},"people":{"properties":{"addresses":{"items":{"$ref":"#/definitions/peopleAddresses"},"type":"array"},"email":{"type":"string","x-samplevalue":"leslie_knoppe@parksandrecs.gov","x-sub-format":"email"},"firstname":{"type":"string","x-samplevalue":"leslie"},"folder":{"$ref":"#/definitions/peopleFolder"},"formerlastname":{"type":"string","x-samplevalue":"adddd"},"integrationpassword":{"type":"string","x-samplevalue":"1234password"},"integrationusername":{"type":"string","x-samplevalue":"lil_sebasian_123"},"lastname":{"type":"string","x-samplevalue":"knoppe"},"links":{"items":{"$ref":"#/definitions/peopleLinks"},"type":"array"},"middlename":{"type":"string","x-samplevalue":"middlena"},"phones":{"items":{"$ref":"#/definitions/peoplePhones"},"type":"array"},"socialaccounturl":{"type":"string","x-samplevalue":"www.social.com"},"tags":{"items":{"$ref":"#/definitions/peopleTags"},"type":"array"}},"title":"people","type":"object"},"billingcode":{"items":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"peopleAddressesAddresstype":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Home"},"id":{"type":"string","x-samplevalue":"D84002"},"value":{"type":"string","x-samplevalue":"Home"}},"title":"addresstype","type":"object"},"billrate":{"properties":{"amount":{"type":"number"},"amountstring":{"type":"string"},"currency":{"type":"string"},"timeframe":{"type":"string"}},"type":"object"},"jobsPositiontype":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Regular Full-Time"},"id":{"type":"string","x-samplevalue":"D12001"},"value":{"type":"string","x-samplevalue":"Regular Full-Time"}},"title":"positiontype","type":"object"},"visa":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"peopleLinks":{"properties":{"rel":{"type":"string","x-samplevalue":"self"},"title":{"type":"string","x-samplevalue":"The current profile being viewed."},"url":{"type":"string","x-samplevalue":"https://api.icims.com/customers/10116/people/167"}},"title":"links","type":"object"},"travel":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swaggertags":{"x-has-customfields":false,"title":"tags","properties":{"name":{"x-samplevalue":"contacts","type":"string"}},"type":"object"},"joblocation":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"numberofpositions":{"type":"integer"},"jobsVisa":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"No Restrictions"},"id":{"type":"string","x-samplevalue":"D3001"},"value":{"type":"string","x-samplevalue":"No Restrictions"}},"title":"visa","type":"object"},"secondaryrecruiter":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsSecondaryrecruiter":{"properties":{"id":{"format":"int32","type":"integer","x-samplevalue":166},"profile":{"type":"string","x-samplevalue":"https://api.icims.com/customers/10116/people/166"},"value":{"type":"string","x-samplevalue":"Maxwell Warner"}},"title":"secondaryrecruiter","type":"object"},"bonus":{"type":"string"},"externalid":{"type":"string"},"jobowner":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsDepartment":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Quality Assurance"},"id":{"type":"string","x-samplevalue":"D37002041010"},"value":{"type":"string","x-samplevalue":"Quality Assurance"}},"title":"department","type":"object"},"peopleFolder":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Contact"},"id":{"type":"string","x-samplevalue":"D32001"},"value":{"type":"string","x-samplevalue":"Contact"}},"title":"folder","type":"object"},"swaggerparameters":{"x-has-customfields":false,"title":"parameters","properties":{"schema":{"$ref":"#/definitions/swaggerparametersschema"},"in":{"x-samplevalue":"header","type":"string"},"name":{"x-samplevalue":"Authorization","type":"string"},"description":{"x-samplevalue":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string"},"type":{"x-samplevalue":"string","type":"string"},"required":{"x-samplevalue":true,"type":"boolean"}},"type":"object"},"field14981":{"type":"string"},"bgcpackagetype":{"items":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"jobsTravel":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"10%"},"id":{"type":"string","x-samplevalue":"D37002016002"},"value":{"type":"string","x-samplevalue":"10%"}},"title":"travel","type":"object"},"jobid":{"type":"string"},"responsibilities":{"type":"string"},"additionallocations":{"items":{"properties":{"location":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"}},"type":"object"},"type":"array"},"swagger200":{"x-has-customfields":false,"type":"object","title":"200","properties":{"schema":{"$ref":"#/definitions/swaggerschema"},"description":{"x-samplevalue":"OK - Everything worked as expected","type":"string"}}},"peopleAddressesAddressstate":{"properties":{"abbrev":{"type":"string","x-samplevalue":"CO"},"id":{"type":"string","x-samplevalue":"D41001009"},"value":{"type":"string","x-samplevalue":"Colorado"}},"title":"addressstate","type":"object"},"replacing":{"type":"string"},"maximumsalary":{"properties":{"amount":{"type":"number"},"amountstring":{"type":"string"},"currency":{"type":"string"},"timeframe":{"type":"string"}},"type":"object"},"accountmanager":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsLinks":{"properties":{"rel":{"type":"string","x-samplevalue":"self"},"title":{"type":"string","x-samplevalue":"The current profile being viewed."},"url":{"type":"string","x-samplevalue":"https://api.icims.com/customers/10116/jobs/1017"}},"title":"links","type":"object"},"objectsMetadata":{"properties":{"fields":{"items":{"$ref":"#/definitions/objectsMetadataFields"},"type":"array"}},"type":"object"},"minimumsalary":{"properties":{"amount":{"type":"number"},"amountstring":{"type":"string"},"currency":{"type":"string"},"timeframe":{"type":"string"}},"type":"object"},"jobtemplate":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swaggerschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact-POST-Response","type":"string"}}},"positioncategory":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"positionlevel":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"telecommute":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swagger415":{"x-has-customfields":false,"type":"object","title":"415","properties":{"description":{"x-samplevalue":"Unsupported media type - The server cannot handle the requested Content-Type","type":"string"}}},"newhirecategory":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"swaggerparametersschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact","type":"string"}}},"jobsEeocategory":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Administrative Support Workers"},"id":{"type":"string","x-samplevalue":"D19005"},"value":{"type":"string","x-samplevalue":"Administrative Support Workers"}},"title":"eeocategory","type":"object"},"swaggerresponses":{"x-has-customfields":false,"type":"object","title":"responses","properties":{"200":{"$ref":"#/definitions/swagger200"},"400":{"$ref":"#/definitions/swagger400"},"401":{"$ref":"#/definitions/swagger401"},"403":{"$ref":"#/definitions/swagger403"},"404":{"$ref":"#/definitions/swagger404"},"405":{"$ref":"#/definitions/swagger405"},"406":{"$ref":"#/definitions/swagger406"},"409":{"$ref":"#/definitions/swagger409"},"415":{"$ref":"#/definitions/swagger415"},"500":{"$ref":"#/definitions/swagger500"},"502":{"$ref":"#/definitions/swagger502"}}},"swaggerproperties":{"x-has-customfields":false,"type":"object","title":"properties","properties":{"definition-property":{"$ref":"#/definitions/swaggerdefinition-property"}}},"department":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"peopleAddresses":{"properties":{"addresscity":{"type":"string","x-samplevalue":"denver"},"addresscountry":{"$ref":"#/definitions/peopleAddressesAddresscountry"},"addresscounty":{"type":"string","x-samplevalue":"denver"},"addressstate":{"$ref":"#/definitions/peopleAddressesAddressstate"},"addressstreet1":{"type":"string","x-samplevalue":"3845 walnut st"},"addresstype":{"$ref":"#/definitions/peopleAddressesAddresstype"},"addresszip":{"type":"string","x-samplevalue":"80205"},"entry":{"format":"int32","type":"integer","x-samplevalue":36},"primary":{"type":"boolean","x-samplevalue":true}},"title":"addresses","type":"object"},"overview":{"type":"string"},"swaggerinfo":{"x-has-customfields":false,"type":"object","title":"info","properties":{"contact":{"$ref":"#/definitions/swaggercontact"},"title":{"x-samplevalue":"hubspotcrm","type":"string"},"version":{"x-samplevalue":"api-v2","type":"string"}}},"jobsAdditionallocations":{"properties":{"entry":{"format":"int32","type":"integer","x-samplevalue":2},"location":{"$ref":"#/definitions/jobsAdditionallocationsLocation"}},"title":"additionallocations","type":"object"},"recruiter":{"properties":{"id":{"type":"integer"},"profile":{"type":"string"},"value":{"type":"string"}},"type":"object"},"jobsPriority":{"properties":{"formattedvalue":{"type":"string","x-samplevalue":"Normal"},"id":{"type":"string","x-samplevalue":"D85002"},"value":{"type":"string","x-samplevalue":"Normal"}},"title":"priority","type":"object"},"jobpoststart":{"format":"date","type":"string"},"positiontype":{"properties":{"formattedvalue":{"type":"string"},"id":{"type":"string"},"value":{"type":"string"}},"type":"object"},"duedate":{"format":"date","type":"string"},"swaggerpost":{"x-has-customfields":false,"type":"object","title":"post","properties":{"summary":{"x-samplevalue":"Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.","type":"string"},"operationId":{"x-samplevalue":"createContact","type":"string"},"responses":{"$ref":"#/definitions/swaggerresponses"},"parameters":{"type":"array","items":{"$ref":"#/definitions/swaggerparameters"}},"tags":{"x-samplevalue":["contacts"],"type":"array","items":{"type":"string"}}}},"peopleAddressesAddresscountry":{"properties":{"abbrev":{"type":"string","x-samplevalue":"US"},"id":{"type":"string","x-samplevalue":"D41001"},"value":{"type":"string","x-samplevalue":"United States"}},"title":"addresscountry","type":"object"}},"swagger":"2.0","info":{"contact":{"email":"support@cloud-elements.com"},"title":"icims","version":"api-v2"},"tags":[{"name":"companies"},{"name":"talentpools"},{"name":"ping"},{"name":"objects"},{"name":"jobs"},{"name":"objectName"},{"name":"people"}]}