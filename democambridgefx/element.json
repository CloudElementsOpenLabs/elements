{"configuration":[{"internal":false,"hideFromConsole":false,"companyConfig":false,"displayOrder":1,"name":"Client Key","active":true,"description":"Client Key","type":"PASSWORD","groupControl":false,"resellerConfig":false,"key":"client.key","required":true},{"internal":false,"hideFromConsole":false,"companyConfig":false,"displayOrder":1,"name":"Partner Key","active":true,"description":"Partner Key","type":"PASSWORD","groupControl":false,"resellerConfig":false,"key":"partner.key","required":true},{"internal":false,"hideFromConsole":false,"companyConfig":false,"displayOrder":1,"name":"Partner Id","active":true,"description":"Partner Id","type":"TEXTFIELD_128","groupControl":false,"resellerConfig":false,"key":"partner.id","required":true},{"internal":false,"companyConfig":false,"defaultValue":"https://beta.cambridgelink.com/api","displayOrder":1,"active":true,"description":"CambridgeFX Base Url","type":"TEXTFIELD_1000","resellerConfig":false,"required":true,"hideFromConsole":true,"name":"Base Url","groupControl":false,"key":"base.url"},{"internal":false,"companyConfig":false,"defaultValue":"100","displayOrder":1,"active":true,"description":"CambridgeFX Max Page Size (or limit)","type":"TEXTFIELD_32","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"Max Page Size (or limit)","groupControl":false,"key":"pagination.max"},{"internal":false,"companyConfig":false,"defaultValue":"1200","displayOrder":1,"active":true,"description":"expires_in","type":"TEXTFIELD_32","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"expires_in","groupControl":false,"key":"expires_in"},{"internal":false,"companyConfig":false,"defaultValue":"jwt","displayOrder":1,"active":true,"description":"jwt token","type":"TEXTFIELD_128","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"jwt","groupControl":false,"key":"jwt"},{"internal":false,"companyConfig":false,"defaultValue":"client_test","displayOrder":1,"active":true,"description":"clientAccessCode","type":"TEXTFIELD_128","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"clientAccessCode","groupControl":false,"key":"clientAccessCode"},{"internal":false,"companyConfig":false,"defaultValue":"test","displayOrder":1,"active":true,"description":"access code","type":"TEXTFIELD_128","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"accessCode","groupControl":false,"key":"accessCode"},{"internal":false,"companyConfig":false,"defaultValue":"page","displayOrder":1,"active":true,"description":"CambridgeFX Pagination Type","type":"TEXTFIELD_32","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"Pagination Type","groupControl":false,"key":"pagination.type"},{"internal":false,"companyConfig":false,"defaultValue":"client_jwt","displayOrder":1,"active":true,"description":"client jwt token","type":"TEXTFIELD_128","resellerConfig":false,"required":false,"hideFromConsole":true,"name":"clientJwt","groupControl":false,"key":"clientJwt"},{"internal":false,"hideFromConsole":true,"companyConfig":false,"displayOrder":11,"name":"Event Notification Signature Key","active":true,"description":"CambridgeFX Event Notification Signature Key","type":"TEXTFIELD_128","groupControl":false,"resellerConfig":false,"key":"event.notification.signature.key","required":false},{"internal":false,"hideFromConsole":false,"companyConfig":false,"displayOrder":12,"name":"Event Notification Basic User Name","active":true,"description":"CambridgeFX-CE Event Notification Basic User Name","type":"TEXTFIELD_128","groupControl":false,"resellerConfig":false,"key":"event.notification.basic.username","required":false},{"internal":false,"hideFromConsole":false,"companyConfig":false,"displayOrder":13,"name":"Event Notification Basic Password","active":true,"description":"CambridgeFX-CE Event Notification Basic Password","type":"PASSWORD","groupControl":false,"resellerConfig":false,"key":"event.notification.basic.password","required":false},{"internal":false,"hideFromConsole":false,"companyConfig":false,"displayOrder":98,"name":"Default select fields","active":true,"description":"Generic map used to specify default fields for bulk download and GET /all requests. Each key should be the canonical objectName and values may be specified as a comma-delimited string or a list of strings","type":"TEXTAREA","groupControl":false,"resellerConfig":false,"key":"default.select.fields.map","required":false},{"internal":false,"companyConfig":false,"defaultValue":"true","displayOrder":99,"active":true,"description":"Used to enable/disable filtering of null values from the responses","type":"BOOLEAN","resellerConfig":false,"required":false,"hideFromConsole":false,"name":"Filter null values from the response","groupControl":false,"key":"filter.response.nulls"},{"internal":true,"hideFromConsole":true,"companyConfig":false,"displayOrder":100,"name":"Time of Getting Token or Performing Authentication","active":true,"description":"CambridgeFX Time of Getting Token or Performing Authentication","type":"TEXTFIELD_32","groupControl":false,"resellerConfig":false,"key":"authentication.time","required":false}],"objects":[],"description":"The CambridgeFX element","cloneable":true,"extended":false,"bulkDownloadEnabled":false,"useModelsForMetadata":true,"trialAccount":false,"logo":"cambridgefx","hooks":[],"beta":false,"key":"democambridgefx","authentication":{"type":"custom"},"bulkUploadEnabled":false,"image":"elements/custom-element-default-logo.png","models":[],"active":true,"resources":[{"path":"/hubs/general/bookMultiplePayments","vendorMethod":"POST","method":"POST","kind":"eb","response":{"contentType":"application/json"},"description":"Create a(n) /bookMultiplePayments","type":"api","hooks":[],"modelMigrated":false,"parameters":[{"vendorType":"query","dataType":"string","name":"loginSessionId","description":"Login session ID","vendorDataType":"string","source":"request","type":"query","vendorName":"loginSessionId","required":true},{"vendorType":"query","dataType":"string","name":"quoteKey","description":"Quote key","vendorDataType":"string","source":"request","type":"query","vendorName":"quoteKey","required":true},{"vendorType":"body","dataType":"bookMultiplePayments","name":"body","description":"The object body","vendorDataType":"bookMultiplePayments","source":"request","type":"body","vendorName":"body","required":true},{"vendorType":"header","dataType":"string","name":"clientAccessCode","description":"CMG access token","vendorDataType":"string","source":"request","type":"configuration","vendorName":"CMG-AccessToken","required":true}],"vendorPath":"/252947/0/payments/bookPayment"},{"path":"/hubs/general/clientAuth","vendorMethod":"POST","method":"POST","kind":"eb","response":{"contentType":"application/json"},"description":"Create a(n) /clientAuth","type":"onProvision","hooks":[{"isLegacy":false,"mimeType":"application/javascript","body":"const _ = require('lodash');\nconst issued = _.floor(_.now() / 1000);\nconst expired = issued + 1200;\n\nconst header = {\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n};\n\nconst payload = {\n  \"iss\": configuration['partner.id'],\n  \"iat\": issued,\n  \"exp\": expired,\n  \"aud\": \"cambridgefx\",\n  \"sub\": \"\"\n};\n\nlet first = CE.b64(JSON.stringify(header));\nfirst = first.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nlet second = CE.b64(JSON.stringify(payload));\nsecond = second.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nconst secret = first + \".\" + second;\nconst key = configuration['client.id'];\n\nlet third = CE.hmacSha256Base64(key, secret);\nthird = third.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nconst sig = secret + '.' + third;\n\nconst body = {\n\t\"assertion\": sig,\n  \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n\nconst callHeader = {\n\t\"CMG-AccessToken\": configuration['accessCode'],\n  \"Content-Type\": \"application/json\"\n};\n\ndone({\n  \"request_vendor_body\": JSON.stringify(body),\n  \"request_vendor_headers\": callHeader,\n  \"continue\": true\n});","type":"preRequest"},{"isLegacy":false,"mimeType":"application/javascript","body":"if(response_iserror) done();\n\nlet config = {};\nconfig.clientAccessCode = response_body['access_code'];\nconfig.clientJwt = JSON.parse(request_vendor_body).assertion;\ndone({\n  configuration:config\n});","type":"postRequest"}],"modelMigrated":false,"vendorPath":"/partner/oauth2/userToken"},{"path":"/hubs/general/clientAuth_copy","vendorMethod":"POST","method":"POST","kind":"eb","response":{"contentType":"application/json"},"description":"Create a(n) /clientAuth","type":"onRefresh","hooks":[{"isLegacy":false,"mimeType":"application/javascript","body":"const _ = require('lodash');\nconst issued = _.floor(_.now() / 1000);\nconst expired = issued + 1200;\n\nconst header = {\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n};\n\nconst payload = {\n  \"iss\": configuration['partner.id'],\n  \"iat\": issued,\n  \"exp\": expired,\n  \"aud\": \"cambridgefx\",\n  \"sub\": \"\"\n};\n\nlet first = CE.b64(JSON.stringify(header));\nfirst = first.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nlet second = CE.b64(JSON.stringify(payload));\nsecond = second.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nconst secret = first + \".\" + second;\nconst key = configuration['client.id'];\n\nlet third = CE.hmacSha256Base64(key, secret);\nthird = third.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nconst sig = secret + '.' + third;\n\nconst body = {\n\t\"assertion\": sig,\n  \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n\nconst callHeader = {\n\t\"CMG-AccessToken\": configuration['accessCode'],\n  \"Content-Type\": \"application/json\"\n};\n\ndone({\n  \"request_vendor_body\": JSON.stringify(body),\n  \"request_vendor_headers\": callHeader,\n  \"continue\": true\n});","type":"preRequest"},{"isLegacy":false,"mimeType":"application/javascript","body":"if(response_iserror) done();\n\nlet config = {};\nconfig.clientAccessCode = response_body['access_code'];\nconfig.clientJwt = JSON.parse(request_vendor_body).assertion;\ndone({\n  configuration:config\n});","type":"postRequest"}],"modelMigrated":false,"vendorPath":"/partner/oauth2/userToken"},{"path":"/hubs/general/multiplePayments","vendorMethod":"POST","method":"POST","kind":"eb","response":{"contentType":"application/json"},"description":"Create a(n) /multiplePayments","type":"api","hooks":[],"modelMigrated":false,"parameters":[{"vendorType":"header","dataType":"string","name":"clientAccessCode","description":"CMG access token","vendorDataType":"string","source":"request","type":"configuration","vendorName":"CMG-AccessToken","required":true},{"vendorType":"body","dataType":"multiplePayments","name":"body","description":"The object body","vendorDataType":"multiplePayments","source":"request","type":"body","vendorName":"body","required":true}],"vendorPath":"/252497/0/payment-quotes"},{"path":"/hubs/general/partnerAuth","vendorMethod":"POST","method":"POST","nextResource":"POST:/hubs/general/clientAuth","kind":"eb","response":{"contentType":"application/json"},"description":"Create a(n) /second","type":"provisionAuthValidation","hooks":[{"isLegacy":false,"mimeType":"application/javascript","body":"if(response_iserror) done();\n\nlet config = {};\nconfig.accessCode = response_body['access_code'];\nconfig.jwt = JSON.parse(request_vendor_body).assertion;\nconfig['authentication.time'] = Date.now();\ndone({\n  configuration:config\n});","type":"postRequest"},{"isLegacy":false,"mimeType":"application/javascript","body":"const _ = require('lodash');\nconst issued = _.floor(_.now() / 1000);\nconst expired = issued + 1200;\n\nconst header = {\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n};\n\nconst payload = {\n  \"iss\": \"erictest\",\n  \"iat\": issued,\n  \"exp\": expired,\n  \"aud\": \"cambridgefx\",\n  \"sub\": \"\"\n};\n\nlet first = CE.b64(JSON.stringify(header));\nfirst = first.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nlet second = CE.b64(JSON.stringify(payload));\nsecond = second.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nconst secret = first + \".\" + second;\nconst key = configuration['partner.id'];\n\nlet third = CE.hmacSha256Base64(key, secret);\nthird = third.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\nconst sig = secret + '.' + third;\n\nconst newBody = {\n\t\"assertion\": sig,\n  \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n\ndone({\n  \"request_vendor_body\": JSON.stringify(newBody),\n  \"continue\": true\n});","type":"preRequest"}],"modelMigrated":false,"parameters":[{"vendorType":"header","dataType":"string","name":"toBeDiscontinued","description":"CMG access token","vendorDataType":"string","source":"request","type":"value","vendorName":"CMG-AccessToken","required":true}],"vendorPath":"/partner/oauth2/token"},{"path":"/hubs/general/viewBene/{id}","vendorMethod":"GET","method":"GET","kind":"eb","response":{"contentType":"application/json"},"description":"Retrieve a(n) /viewBene","type":"api","hooks":[],"modelMigrated":false,"parameters":[{"vendorType":"path","dataType":"string","name":"id","description":"The benes ID","vendorDataType":"string","source":"request","type":"path","vendorName":"id","required":true},{"vendorType":"header","dataType":"string","name":"clientAccessCode","description":"Client access token","vendorDataType":"string","source":"request","type":"configuration","vendorName":"CMG-AccessToken","required":true}],"vendorPath":"/252497/0/benes/{id}"}],"modelType":"basic","protocolType":"http","transformationsEnabled":true,"deleted":false,"hub":"general","typeOauth":false,"name":"CambridgeFX (Demo)","extendable":false,"parameters":[{"vendorType":"header","name":"application/json","source":"request","type":"value","vendorName":"Accept","required":false},{"vendorType":"header","name":"application/json","source":"request","type":"value","vendorName":"Content-Type","required":false}]}