{"basePath":"/elements/api-v2","paths":{"/bulk/jobs":{"get":{"operationId":"getBulkJobs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'","in":"query","name":"where","required":false,"type":"string"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The page size for pagination, which defaults to 200 if not supplied","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkJobList"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Fetch all the bulk jobs for an instance","tags":["bulk"]}},"/bulk/query":{"post":{"operationId":"createBulkQuery","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The Url to send the notification to when the Job is completed","in":"header","name":"Elements-Async-Callback-Url","required":false,"type":"string"},{"description":"The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.","in":"query","name":"q","required":false,"type":"string"},{"description":"The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"lastRunDate","required":false,"type":"string"},{"description":"The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"from","required":false,"type":"string"},{"description":"The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"to","required":false,"type":"string"},{"description":"Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ","in":"formData","name":"metaData","required":false,"type":"string"}],"consumes":["multipart/form-data"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkQuery"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an asynchronous bulk query job.","tags":["bulk"]}},"/bulk/{id}/cancel":{"put":{"operationId":"replaceBulkCancel","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to cancel.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkStatus"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Cancel an asynchronous bulk query job.","tags":["bulk"]}},"/bulk/{id}/errors":{"get":{"operationId":"getBulkErrors","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to retrieve its errors.","in":"path","name":"id","required":true,"type":"string"},{"description":"The page size for pagination, which defaults to 200 if not supplied","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the errors of a bulk job.","tags":["bulk"]}},"/bulk/{id}/status":{"get":{"operationId":"getBulkStatus","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to retrieve its status.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkStatus"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the status of a bulk job.","tags":["bulk"]}},"/bulk/{id}/{objectName}":{"get":{"operationId":"getBulkByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job","in":"path","name":"id","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"file"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the results of an asynchronous bulk query.","tags":["bulk"],"produces":["text/csv","application/json"]}},"/contacts":{"get":{"summary":"List all the contacts of a Zoom user. Authenticated Instance must be logged in with user managed access scopes: chat_contact:read. Only available with user-managed apps.","operationId":"getContacts","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/contactsObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"type","description":"The type, either external or company. Default is company.","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a single request. Default is 30, max is 300.","type":"integer","required":false},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false}],"tags":["contacts"]}},"/contacts/company":{"get":{"summary":"A user under an organization’s Zoom account has internal users listed under Company Contacts in the Zoom Client. Use this request to search users that are in the company contacts of a Zoom account. Admin scope required.","operationId":"getContactsCompany","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/contactsCompanyObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"searchKey","description":"Provide either first name, last name or the email address of the user that you would like to search for.","type":"string","required":true},{"in":"query","name":"where","description":"The CEQL search expression","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"presenceStatus","description":"Set the query presence status to true in order to include the presence status of a contact in the response.","type":"boolean","required":false}],"tags":["contacts"]}},"/contacts/{id}":{"get":{"summary":"Describe your resource here","operationId":"getContactById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/contacts"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The contact id.","type":"string","required":true},{"in":"query","name":"presenceStatus","description":"Include this parameter with a value of true to get the presence status of the contact in the response.","type":"boolean","required":false}],"tags":["contacts"]}},"/meetings/{id}":{"patch":{"summary":"Update the details of a meeting. Admin scope required.","operationId":"updateMeetingById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/meetings"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The meeting id. Do not use the uuid.","type":"integer","required":true},{"schema":{"$ref":"#/definitions/meetingsPatchReq"},"in":"body","name":"body","description":"The object body. More information in the Zoom docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingupdate","required":true},{"in":"query","name":"occurenceId","description":"Meeting occurrence id.","type":"string","required":false}],"tags":["meetings"]},"get":{"summary":"Retrieve the details of a meeting. Requires admin scope.","operationId":"getMeetingById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/meetings"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The meeting id. Do not use the uuid.","type":"integer","required":true},{"in":"query","name":"occurenceId","description":"Meeting occurrence id.","type":"string","required":false},{"in":"query","name":"previousOccurrences","description":"Set to true if you want to see the values of previous occurrences of the meeting.","type":"boolean","required":false}],"tags":["meetings"]},"delete":{"summary":"Delete a meeting. Admin scope required.","operationId":"deleteMeetingById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Zoom meeting id. Do not use the uuid.","type":"integer","required":true},{"in":"query","name":"occurenceId","description":"Meeting occurrence id.","type":"string","required":false},{"in":"query","name":"sendNotification","description":"Set to true if you want to notify the host and alternative host of the cancellation by email.","type":"boolean","required":false}],"tags":["meetings"]}},"/meetings/{id}/registrants":{"post":{"summary":"Register a participant for a meeting. Host user type must be “Licensed”. Requires admin scope. Host user type must be “Licensed”.","operationId":"createMeetingRegistrant","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/meetingsRegistrants"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Zoom meeting id. Do not use the uuid.","type":"string","required":true},{"schema":{"$ref":"#/definitions/meetingsRegistrantsPostReq"},"in":"body","name":"body","description":"The body. See Request Model example and find more information from the vendor's docs here: https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrantcreate .","required":true},{"in":"query","name":"occurenceIds","description":"The meeting occurrence ids. Multiple values separated by a comma.","type":"string","required":false}],"tags":["meetings"]},"get":{"summary":"A host or a user with admin permission can require registration for a Zoom meeting. Use this request to list users that have registered for a meeting.","operationId":"getMeetingsRegistrants","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/meetingsRegistrants"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The meeting id. Do not use the uuid.","type":"integer","required":true},{"in":"query","name":"occurenceId","description":"The meeting occurrence id.","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a single request. Default is 30, max is 300.","type":"integer","required":false},{"in":"query","name":"status","description":"The registrant's status: pending, approved, denied. Default is approved.","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["meetings"]}},"/objects":{"get":{"operationId":"getObjects","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the available objects.","tags":["objects"]}},"/objects/{objectName}/docs":{"get":{"operationId":"getObjectsObjectNameDocs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Include discovery metadata in definitions","in":"query","name":"discovery","required":false,"type":"boolean"},{"description":"Optionally resolve swagger references for an inline object definition","in":"query","name":"resolveReferences","required":false,"type":"boolean"},{"description":"Include only OpenAPI / Swagger properties in definitions","in":"query","name":"basic","required":false,"type":"boolean"},{"description":"The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger","in":"query","name":"version","required":false,"default":"-1","type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/swaggerDocs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get swagger docs for an object.","tags":["objects"]}},"/objects/{objectName}/metadata":{"get":{"operationId":"getObjectsObjectNameMetadata","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/objectsMetadata"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the field for an object.","tags":["objects"]}},"/ping":{"get":{"operationId":"getPing","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Pong"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.","tags":["ping"]}},"/users":{"post":{"summary":"A Zoom account can have one or more users. Use this request to add a new user to your account. Requires Pro plan or higher and admin scope.","operationId":"createUser","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/users"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/usersPostReq"},"in":"body","name":"body","description":"The body. See Request Model example and find more information from the vendor’s docs here: https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate ","required":true}],"tags":["users"]},"get":{"summary":"A Zoom account can have one or more users. Use this request to list users on your account. Only returns confirmed users. Requires admin scope.","operationId":"getUsers","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/usersObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"integer","required":false},{"in":"query","name":"status","description":"The status of the user. Allowed values: active, inactive, pending. Default is active.","type":"string","required":false},{"in":"query","name":"roleId","description":"Provide if you want to filter results by a specific role. ","type":"string","required":false},{"in":"query","name":"includeFields","description":"Provide a value for this field if you would like to see the following attribute in the response: custom_attributes (returns custom attributes that are associated with the user).","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression.","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["users"]}},"/users/{id}":{"patch":{"summary":"Update information on a user’s Zoom profile. Admin level scope required.","operationId":"updateUserById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/users"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id of the Zoom user to update.","type":"string","required":true},{"schema":{"$ref":"#/definitions/usersPatchReq"},"in":"body","name":"body","description":"The object body for the user you want to update. See Zoom docs for more information: https://marketplace.zoom.us/docs/api-reference/zoom-api/users/userupdate .","required":true}],"tags":["users"]},"get":{"summary":"A Zoom account can have one or more users. Use this request to view information of a specific user on a Zoom account. If user-managed/level, pass in \"me\" into the userId field. Otherwise, requires Admin level scope.","operationId":"getUserById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/users"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The user id or email address of the of the user. For user-level apps, pass me as the userId.","type":"string","required":true},{"in":"query","name":"loginType","description":"Allowed values: 0,1,99,100,101. Key: 0 -Facebook, 1 -Google, 99 -API, 100 -Zoom, 101 -SSO.","type":"string","required":false}],"tags":["users"]},"delete":{"summary":"Deleting a user permanently removes them and their data from Zoom. Deleting a user permanently removes them and their data from Zoom. They will be able to create a new Zoom account with the same email address if they have access to it. By default, this request disassociates (unlinks) a user from the associated account. The disassociation will give them their own basic, free Zoom account. It will not be associated with your account, and they will be able to purchase their own licenses. Requires admin scope.","operationId":"deleteUserById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The id of the Zoom user.","type":"string","required":true},{"in":"query","name":"whereTransferEmail","description":"The email to transfer current user's data (meetings, webinars and cloud recordings) to. Setting an email sets this value to true automatically. Leave blank to not transfer.","type":"string","required":false},{"in":"query","name":"transferWebinar","description":"true will transfer webinars. ","type":"boolean","required":false},{"in":"query","name":"transferRecording","description":"true will transfer recordings.","type":"boolean","required":false},{"in":"query","name":"transferMeeting","description":"true will transfer meetings. ","type":"boolean","required":false},{"in":"query","name":"action","description":"The action to take, either disassociate a user or delete a user permanently. Allowed values: disassociate, delete.","type":"string","required":false}],"tags":["users"]}},"/users/{id}/meetings":{"post":{"summary":"Create a meeting for a user. This request has a daily rate limit of 100 requests per day. Therefore, only 100 Create a Meeting requests are permitted within a 24 hour window for a single user. Requires admin scope.","operationId":"createUserMeeting","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/usersMeetings"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Zoom user id.","type":"string","required":true},{"schema":{"$ref":"#/definitions/usersMeetingsPostReq"},"in":"body","name":"body","description":"The body. See Request Model for an example. See https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate for more information/required values.","required":true}],"tags":["users"]},"get":{"summary":"List all the meetings that were scheduled for a user (meeting host). This request only supports scheduled meetings and thus, details on instant meetings are not returned via this request. Admin scope required.","operationId":"getUsersMeetings","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/meetingsUsersObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Zoom user id to list meetings for.","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a single request. Default is 30, max is 300.","type":"integer","required":false},{"in":"query","name":"type","description":"Specify the meeting type. Allowed values: past (meetings that occurred in the specified time range), pastOne (past meetings that were attended by only one user), live (live meetings). Default is live.","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["users"]}},"/{objectName}":{"get":{"operationId":"getByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {objectName}","tags":["objectName"]},"post":{"operationId":"createByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}":{"delete":{"operationId":"deleteObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {objectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"produces":["application/json","application/pdf"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {objectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}":{"get":{"operationId":"getObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {childObjectName}","tags":["objectName"]},"post":{"operationId":"createObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {childObjectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}/{childObjectId}":{"delete":{"operationId":"deleteObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {childObjectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {childObjectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]}}},"schemes":["https"],"definitions":{"usersPostReqUser_info":{"properties":{"email":{"type":"string","x-samplevalue":"dhjdfkghdskjf@fgkjfdlgjfkd.gh","x-sub-format":"email"},"first_name":{"type":"string","x-samplevalue":"Terry"},"last_name":{"type":"string","x-samplevalue":"Jones"},"type":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"user_info","type":"object"},"swaggerdefinitions":{"x-has-customfields":false,"type":"object","title":"definitions","properties":{"definition-name":{"$ref":"#/definitions/swaggerdefinition-name"}}},"meetingsRegistrants":{"properties":{"agenda":{"type":"string","x-samplevalue":"Let's test Zoom Element!"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-09-04T11:00:28Z"},"duration":{"format":"int32","type":"integer","x-samplevalue":60},"encrypted_password":{"type":"string","x-samplevalue":"em1rZlFzNldiK0lBL2UzUkdZSGlvdz09"},"h323_password":{"type":"string","x-samplevalue":"4097629785"},"host_email":{"type":"string","x-samplevalue":"kia.martinez+coffee@cloud-elements.com"},"host_id":{"type":"string","x-samplevalue":"MQ-nBAB4T8CaybLDd3V_kQ"},"id":{"format":"int64","type":"integer","x-samplevalue":92621254161},"join_url":{"type":"string","x-samplevalue":"https://zoom.us/j/92621254161?pwd=em1rZlFzNldiK0lBL2UzUkdZSGlvdz09"},"password":{"type":"string","x-samplevalue":"E$R%T^E$R%"},"pstn_password":{"type":"string","x-samplevalue":"4097629785"},"settings":{"$ref":"#/definitions/meetingsRegistrantsSettings"},"start_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-09-04T11:00:28Z"},"start_url":{"type":"string","x-samplevalue":"https://zoom.us/s/92621254161?zak=eyJ6bV9za20iOiJ6bV9vMm0iLCJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjbGllbnQiLCJ1aWQiOiJNUS1uQkFCNFQ4Q2F5YkxEZDNWX2tRIiwiaXNzIjoid2ViIiwic3R5IjoxMDAsIndjZCI6ImF3MSIsImNsdCI6MCwic3RrIjoiNFNTQWdUT2pRZW5ydF8zaDNSbXRkQTdHS0xINXhLQU96TFZoc1ExZnNQcy5CZ1U0TDBoaGFHeDNTMWxPT0hkb1ZuUmxUbkU0WmxOMFFVaFBSMDlpVHpWSWRtNW1lbEJ3U0RSeFRWUlBVRU50UnpSd2VuUk9lRWRuUFQwQUFBd3pRMEpCZFc5cFdWTXpjejBBQTJGM01RIiwiZXhwIjoxNTk5MjI0NDI4LCJpYXQiOjE1OTkyMTcyMjgsImFpZCI6IjlBenJXNmliVEt1aEVMS1I1ZkdjQ3ciLCJjaWQiOiIifQ.Eq4xiap3kVWj-feHVF_u76e5slUAYvWhtKwdG5OPdM0"},"status":{"type":"string","x-samplevalue":"waiting"},"timezone":{"type":"string","x-samplevalue":"America/Chicago"},"topic":{"type":"string","x-samplevalue":"TestingZoom"},"type":{"format":"int32","type":"integer","x-samplevalue":2},"uuid":{"type":"string","x-samplevalue":"d5/CPd5vT4W/LlplKE67aw=="}},"title":"meetingsRegistrants","type":"object"},"swaggerdefinition-name":{"x-has-customfields":false,"type":"object","title":"definition-name","properties":{"properties":{"$ref":"#/definitions/swaggerproperties"}}},"meetingsRegistrantsSettings":{"properties":{"alternative_hosts":{"type":"string"},"approval_type":{"format":"int32","type":"integer","x-samplevalue":2},"audio":{"type":"string","x-samplevalue":"voip"},"auto_recording":{"type":"string","x-samplevalue":"none"},"close_registration":{"type":"boolean","x-samplevalue":false},"cn_meeting":{"type":"boolean","x-samplevalue":false},"enforce_login":{"type":"boolean","x-samplevalue":false},"enforce_login_domains":{"type":"string"},"host_video":{"type":"boolean","x-samplevalue":false},"in_meeting":{"type":"boolean","x-samplevalue":false},"join_before_host":{"type":"boolean","x-samplevalue":false},"meeting_authentication":{"type":"boolean","x-samplevalue":false},"mute_upon_entry":{"type":"boolean","x-samplevalue":false},"participant_video":{"type":"boolean","x-samplevalue":false},"registrants_confirmation_email":{"type":"boolean","x-samplevalue":true},"registrants_email_notification":{"type":"boolean","x-samplevalue":true},"request_permission_to_unmute_participants":{"type":"boolean","x-samplevalue":false},"use_pmi":{"type":"boolean","x-samplevalue":false},"waiting_room":{"type":"boolean","x-samplevalue":true},"watermark":{"type":"boolean","x-samplevalue":false}},"title":"settings","type":"object"},"swaggerparameters":{"x-has-customfields":false,"title":"parameters","properties":{"schema":{"$ref":"#/definitions/swaggerparametersschema"},"in":{"x-samplevalue":"header","type":"string"},"name":{"x-samplevalue":"Authorization","type":"string"},"description":{"x-samplevalue":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string"},"type":{"x-samplevalue":"string","type":"string"},"required":{"x-samplevalue":true,"type":"boolean"}},"type":"object"},"meetingsSettings":{"properties":{"alternative_hosts":{"type":"string"},"approval_type":{"format":"int32","type":"integer","x-samplevalue":2},"audio":{"type":"string","x-samplevalue":"voip"},"auto_recording":{"type":"string","x-samplevalue":"none"},"close_registration":{"type":"boolean","x-samplevalue":false},"cn_meeting":{"type":"boolean","x-samplevalue":false},"enforce_login":{"type":"boolean","x-samplevalue":false},"enforce_login_domains":{"type":"string"},"host_video":{"type":"boolean","x-samplevalue":false},"in_meeting":{"type":"boolean","x-samplevalue":false},"join_before_host":{"type":"boolean","x-samplevalue":false},"meeting_authentication":{"type":"boolean","x-samplevalue":false},"mute_upon_entry":{"type":"boolean","x-samplevalue":false},"participant_video":{"type":"boolean","x-samplevalue":false},"registrants_confirmation_email":{"type":"boolean","x-samplevalue":true},"registrants_email_notification":{"type":"boolean","x-samplevalue":true},"request_permission_to_unmute_participants":{"type":"boolean","x-samplevalue":false},"use_pmi":{"type":"boolean","x-samplevalue":false},"waiting_room":{"type":"boolean","x-samplevalue":true},"watermark":{"type":"boolean","x-samplevalue":false}},"title":"settings","type":"object"},"meetingsRegistrantsRegistrantsCustom_questions":{"properties":{"title":{"type":"string","x-samplevalue":"Did you enjoy the registration process?"},"value":{"type":"string","x-samplevalue":"Yes, alot."}},"title":"custom_questions","type":"object"},"usersMeetings":{"properties":{"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-09-05T16:54:14Z"},"duration":{"format":"int32","type":"integer","x-samplevalue":60},"host_id":{"type":"string","x-samplevalue":"AbcDefGHi"},"id":{"format":"int32","type":"integer","x-samplevalue":1100000},"join_url":{"type":"string","x-samplevalue":"https://zoom.us/j/1100000"},"settings":{"$ref":"#/definitions/usersMeetingsSettings"},"start_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-08-30T22:00:00Z"},"start_url":{"type":"string","x-samplevalue":"https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw"},"status":{"type":"string","x-samplevalue":"waiting"},"timezone":{"type":"string","x-samplevalue":"America/New_York"},"topic":{"type":"string","x-samplevalue":"API Test"},"type":{"format":"int32","type":"integer","x-samplevalue":2},"uuid":{"type":"string","x-samplevalue":"ng1MzyWNQaObxcf3+Gfm6A=="}},"title":"usersMeetings","type":"object"},"swagger-contacts-path":{"x-has-customfields":false,"type":"object","title":"/contacts","properties":{"post":{"$ref":"#/definitions/swaggerpost"}}},"swagger200":{"x-has-customfields":false,"type":"object","title":"200","properties":{"schema":{"$ref":"#/definitions/swaggerschema"},"description":{"x-samplevalue":"OK - Everything worked as expected","type":"string"}}},"swagger400":{"x-has-customfields":false,"type":"object","title":"400","properties":{"description":{"x-samplevalue":"Bad Request - Often due to a missing request parameter","type":"string"}}},"meetingsUsersObject":{"properties":{"agenda":{"type":"string","x-samplevalue":"let's test the Zoom element!"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-09-04T01:32:23Z"},"duration":{"format":"int32","type":"integer","x-samplevalue":60},"host_id":{"type":"string","x-samplevalue":"MQ-nBAB4T8CaybLDd3V_kQ"},"id":{"format":"int64","type":"integer","x-samplevalue":92790199636},"join_url":{"type":"string","x-samplevalue":"https://zoom.us/j/92790199636?pwd=eHZoNk5KUjZlUXlEc3MvREZWaFZPZz09"},"start_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-09-04T01:32:24Z"},"timezone":{"type":"string","x-samplevalue":"America/Chicago"},"topic":{"type":"string","x-samplevalue":"ZoomTest1"},"type":{"format":"int32","type":"integer","x-samplevalue":2},"uuid":{"type":"string","x-samplevalue":"OUKouEPXQiCL+6StriStWg=="}},"title":"meetingsUsers","type":"object"},"usersMeetingsPostReq":{"properties":{"agenda":{"type":"string","x-samplevalue":"We want to make an element."},"duration":{"format":"int32","type":"integer","x-samplevalue":60},"password":{"type":"string","x-samplevalue":"HelloHelloHello"},"recurrence":{"$ref":"#/definitions/usersMeetingsPostReqRecurrence"},"schedule_for":{"type":"string","x-samplevalue":"Hello"},"settings":{"$ref":"#/definitions/usersMeetingsPostReqSettings"},"start_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-10-16T12:05:00Z"},"timezone":{"type":"string","x-samplevalue":"America/Los_Angeles"},"topic":{"type":"string","x-samplevalue":"Whoohoo"},"type":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"usersMeetingsPostReq","type":"object"},"swagger401":{"x-has-customfields":false,"type":"object","title":"401","properties":{"description":{"x-samplevalue":"Unauthorized - An invalid element token, user secret and/or org secret provided","type":"string"}}},"meetingsRegistrantsRegistrants":{"properties":{"address":{"type":"string","x-samplevalue":"11111 Awesome St"},"city":{"type":"string","x-samplevalue":"Paris"},"comments":{"type":"string","x-samplevalue":"Love using Zoom APIs"},"country":{"type":"string","x-samplevalue":"France"},"create_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2012-04-14T16:55:30.231Z"},"custom_questions":{"items":{"$ref":"#/definitions/meetingsRegistrantsRegistrantsCustom_questions"},"type":"array"},"email":{"type":"string","x-samplevalue":"somemeail@emailprovider.com","x-sub-format":"email"},"first_name":{"type":"string","x-samplevalue":"Tim"},"id":{"type":"string","x-samplevalue":"zjkfsdfjdfhg"},"industry":{"type":"string","x-samplevalue":"Tech"},"job_title":{"type":"string","x-samplevalue":"Developer"},"join_url":{"type":"string","x-samplevalue":"https://success.zoom.us/j/0000000000000"},"last_name":{"type":"string","x-samplevalue":"S."},"no_of_employees":{"type":"string","x-samplevalue":"1-20"},"org":{"type":"string","x-samplevalue":"Growth"},"phone":{"type":"string","x-samplevalue":"00000"},"purchasing_time_frame":{"type":"string","x-samplevalue":"Within a month"},"role_in_purchase_process":{"type":"string","x-samplevalue":"Not involved"},"state":{"type":"string","x-samplevalue":"Ile-de-France"},"status":{"type":"string","x-samplevalue":"approved"},"zip":{"type":"string","x-samplevalue":"11000"}},"title":"registrants","type":"object"},"swagger403":{"x-has-customfields":false,"type":"object","title":"403","properties":{"description":{"x-samplevalue":"Forbidden - Access to the resource by the provider is forbidden","type":"string"}}},"swagger404":{"x-has-customfields":false,"type":"object","title":"404","properties":{"description":{"x-samplevalue":"Not found - The requested resource is not found","type":"string"}}},"swagger405":{"x-has-customfields":false,"type":"object","title":"405","properties":{"description":{"x-samplevalue":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected","type":"string"}}},"usersMeetingsPostReqRecurrence":{"properties":{"end_date_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-10-16T12:05:00Z"},"end_times":{"format":"int32","type":"integer","x-samplevalue":60},"monthly_day":{"format":"int32","type":"integer","x-samplevalue":15},"monthly_week":{"format":"int32","type":"integer","x-samplevalue":3},"monthly_week_day":{"format":"int32","type":"integer","x-samplevalue":3},"repeat_interval":{"format":"int32","type":"integer","x-samplevalue":3},"type":{"format":"int32","type":"integer","x-samplevalue":2},"weekly_days":{"type":"string","x-samplevalue":"Monday"}},"title":"recurrence","type":"object"},"swaggerDocs":{"x-has-customfields":false,"title":"swaggerDocs","properties":{"basePath":{"x-samplevalue":"/elements/api-v2/hubs/crm","type":"string"},"paths":{"$ref":"#/definitions/swaggerpaths"},"host":{"x-samplevalue":"localhost:5050","type":"string"},"schemes":{"x-samplevalue":["http"],"type":"array","items":{"type":"string"}},"definitions":{"$ref":"#/definitions/swaggerdefinitions"},"swagger":{"x-samplevalue":"2.0","type":"string"},"info":{"$ref":"#/definitions/swaggerinfo"},"tags":{"type":"array","items":{"$ref":"#/definitions/swaggertags"}}},"type":"object"},"users":{"properties":{"statusCode":{"format":"int32","type":"integer","x-samplevalue":204}},"title":"users","type":"object"},"swaggercontact":{"x-has-customfields":false,"type":"object","title":"contact","properties":{"email":{"x-samplevalue":"support@cloud-elements.com","type":"string"}}},"usersMeetingsSettings":{"properties":{"alternative_hosts":{"type":"string"},"approval_type":{"format":"int32","type":"integer","x-samplevalue":2},"audio":{"type":"string","x-samplevalue":"both"},"auto_recording":{"type":"string","x-samplevalue":"local"},"close_registration":{"type":"boolean","x-samplevalue":false},"cn_meeting":{"type":"boolean","x-samplevalue":false},"enforce_login":{"type":"boolean","x-samplevalue":false},"enforce_login_domains":{"type":"string"},"global_dial_in_countries":{"items":{"type":"string"},"type":"array","x-samplevalue":["US"]},"global_dial_in_numbers":{"items":{"$ref":"#/definitions/usersMeetingsSettingsGlobal_dial_in_numbers"},"type":"array"},"host_video":{"type":"boolean","x-samplevalue":false},"in_meeting":{"type":"boolean","x-samplevalue":false},"join_before_host":{"type":"boolean","x-samplevalue":true},"mute_upon_entry":{"type":"boolean","x-samplevalue":false},"participant_video":{"type":"boolean","x-samplevalue":false},"registrants_confirmation_email":{"type":"boolean","x-samplevalue":true},"registrants_email_notification":{"type":"boolean","x-samplevalue":true},"use_pmi":{"type":"boolean","x-samplevalue":false},"waiting_room":{"type":"boolean","x-samplevalue":false},"watermark":{"type":"boolean","x-samplevalue":false}},"title":"settings","type":"object"},"meetingsPatchReqSettingsGlobal_dial_in_countries":{"properties":{"city":{"type":"string","x-samplevalue":"San Jose"},"country":{"type":"string","x-samplevalue":"US"},"country_name":{"type":"string","x-samplevalue":"US"},"number":{"type":"string","x-samplevalue":"+1 1212121212121212"},"type":{"type":"string","x-samplevalue":"toll"}},"title":"global_dial_in_countries","type":"object"},"usersMeetingsSettingsGlobal_dial_in_numbers":{"properties":{"city":{"type":"string","x-samplevalue":"New York"},"country":{"type":"string","x-samplevalue":"US"},"country_name":{"type":"string","x-samplevalue":"US"},"number":{"type":"string","x-samplevalue":"+1 1000200200"},"type":{"type":"string","x-samplevalue":"toll"}},"title":"global_dial_in_numbers","type":"object"},"swagger406":{"x-has-customfields":false,"type":"object","title":"406","properties":{"description":{"x-samplevalue":"Not acceptable - The response content type does not match the 'Accept' header value","type":"string"}}},"contactsCompanyObject":{"properties":{"direct_numbers":{"items":{"type":"integer"},"type":"array","x-samplevalue":[111111,222222]},"email":{"type":"string","x-samplevalue":"qui@djfsd.sdfjhdf","x-sub-format":"email"},"extension_number":{"type":"string","x-samplevalue":"010"},"first_name":{"type":"string","x-samplevalue":"John"},"id":{"type":"string","x-samplevalue":"isds324bdfsf"},"im_group_id":{"type":"string","x-samplevalue":"fhksdhfew34hjds"},"im_group_name":{"type":"string","x-samplevalue":"Engineering"},"last_name":{"type":"string","x-samplevalue":"Doe"},"phone_number":{"type":"string","x-samplevalue":"00000000"},"presence_status":{"type":"string","x-samplevalue":"Offline"},"sip_phone_number":{"format":"date","type":"string","x-mask":"yyyyMMdd","x-samplevalue":"11111111"}},"title":"contactsCompany","type":"object"},"meetings":{"properties":{"HTTP Status Code":{"format":"int32","type":"integer","x-samplevalue":204},"message":{"type":"string","x-samplevalue":"Meeting updated."}},"title":"meetings","type":"object"},"swaggerdefinition-property":{"x-has-customfields":false,"type":"object","title":"#/definitions/definition-property","properties":{"type":{"x-samplevalue":"string","type":"string"}}},"Object":{"description":"Fields for the object. There will be fields associated with an Object, which are not all described here.","properties":{"objectField":{"type":"string"}},"type":"object"},"swagger409":{"x-has-customfields":false,"type":"object","title":"409","properties":{"description":{"x-samplevalue":"Conflict - If a resource being created already exists","type":"string"}}},"objectsMetadata":{"properties":{"fields":{"items":{"$ref":"#/definitions/objectsMetadataFields"},"type":"array"}},"type":"object"},"Pong":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"},"valid":{"type":"boolean"}},"type":"object"},"swaggerschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact-POST-Response","type":"string"}}},"contactsObject":{"properties":{"email":{"type":"string","x-displayName":"Email","x-samplevalue":"kevin.choi@cloud-elements.com"},"first_name":{"type":"string","x-displayName":"First Name","x-samplevalue":"Kevin "},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"-CeoGa66Rl6WsizPuRIYJQ"},"last_name":{"type":"string","x-displayName":"Last Name","x-samplevalue":"Choi"}},"title":"contacts","type":"object"},"meetingsPatchReq":{"properties":{"agenda":{"type":"string","x-samplevalue":"My Meeting"},"duration":{"format":"int32","type":"integer","x-samplevalue":60},"password":{"type":"string","x-samplevalue":"abcd"},"settings":{"$ref":"#/definitions/meetingsPatchReqSettings"},"start_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss","x-samplevalue":"2019-08-30T18:00:00"},"timezone":{"type":"string","x-samplevalue":"America/New_York"},"topic":{"type":"string","x-samplevalue":"Michael API Test"},"type":{"format":"int32","type":"integer","x-samplevalue":2}},"title":"meetingsPatchReq","type":"object"},"swagger415":{"x-has-customfields":false,"type":"object","title":"415","properties":{"description":{"x-samplevalue":"Unsupported media type - The server cannot handle the requested Content-Type","type":"string"}}},"BulkQuery":{"description":"BulkLoad response of bulk download.","properties":{"id":{"description":"Id of the bulk job","type":"number"},"status":{"description":"Status of the bulk job","type":"string"}},"type":"object"},"swaggerparametersschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact","type":"string"}}},"swaggerresponses":{"x-has-customfields":false,"type":"object","title":"responses","properties":{"200":{"$ref":"#/definitions/swagger200"},"400":{"$ref":"#/definitions/swagger400"},"401":{"$ref":"#/definitions/swagger401"},"403":{"$ref":"#/definitions/swagger403"},"404":{"$ref":"#/definitions/swagger404"},"405":{"$ref":"#/definitions/swagger405"},"406":{"$ref":"#/definitions/swagger406"},"409":{"$ref":"#/definitions/swagger409"},"415":{"$ref":"#/definitions/swagger415"},"500":{"$ref":"#/definitions/swagger500"},"502":{"$ref":"#/definitions/swagger502"}}},"usersPatchReq":{"properties":{"cms_user_id":{"type":"string","x-samplevalue":"kaltura_user_id"},"company":{"type":"string","x-samplevalue":"Kelly's Best Coffee Company"},"dept":{"type":"string","x-samplevalue":"department"},"first_name":{"type":"string","x-samplevalue":"Kelly"},"host_key":{"type":"string","x-samplevalue":"1234567890"},"job_title":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"Gold"},"location":{"type":"string","x-samplevalue":"Somewhere in time"},"phone_country":{"type":"string","x-samplevalue":"US"},"phone_number":{"type":"string","x-samplevalue":"2101234567"},"pmi":{"format":"int32","type":"integer","x-samplevalue":1234567890},"timezone":{"type":"string","x-samplevalue":"America/Chicago"},"type":{"format":"int32","type":"integer","x-samplevalue":1},"vanity_name":{"type":"string","x-samplevalue":"iLikeCoffee"}},"title":"usersPatchReq","type":"object"},"swaggerproperties":{"x-has-customfields":false,"type":"object","title":"properties","properties":{"definition-property":{"$ref":"#/definitions/swaggerdefinition-property"}}},"usersMeetingsPostReqSettings":{"properties":{"alternative_hosts":{"type":"string","x-samplevalue":"string"},"approval_type":{"format":"int32","type":"integer","x-samplevalue":2},"audio":{"type":"string","x-samplevalue":"string"},"auto_recording":{"type":"string","x-samplevalue":"string"},"cn_meeting":{"type":"boolean","x-samplevalue":false},"enforce_login":{"type":"boolean","x-samplevalue":false},"enforce_login_domains":{"type":"string","x-samplevalue":"string"},"global_dial_in_countries":{"items":{"type":"string"},"type":"array","x-samplevalue":["string"]},"host_video":{"type":"boolean","x-samplevalue":false},"in_meeting":{"type":"boolean","x-samplevalue":false},"join_before_host":{"type":"boolean","x-samplevalue":false},"mute_upon_entry":{"type":"boolean","x-samplevalue":false},"participant_video":{"type":"boolean","x-samplevalue":false},"registrants_email_notification":{"type":"boolean","x-samplevalue":false},"registration_type":{"format":"int32","type":"integer","x-samplevalue":2},"use_pmi":{"type":"boolean","x-samplevalue":false},"watermark":{"type":"boolean","x-samplevalue":false}},"title":"settings","type":"object"},"usersPostReq":{"properties":{"action":{"type":"string","x-samplevalue":"create"},"user_info":{"$ref":"#/definitions/usersPostReqUser_info"}},"title":"usersPostReq","type":"object"},"swaggerinfo":{"x-has-customfields":false,"type":"object","title":"info","properties":{"contact":{"$ref":"#/definitions/swaggercontact"},"title":{"x-samplevalue":"hubspotcrm","type":"string"},"version":{"x-samplevalue":"api-v2","type":"string"}}},"swagger500":{"x-has-customfields":false,"type":"object","title":"500","properties":{"description":{"x-samplevalue":"Server error - Something went wrong on the Cloud Elements server","type":"string"}}},"swaggerpaths":{"x-has-customfields":false,"type":"object","title":"paths","properties":{"/contacts":{"$ref":"#/definitions/swagger-contacts-path"}}},"swagger502":{"x-has-customfields":false,"type":"object","title":"502","properties":{"description":{"x-samplevalue":"Provider server error - Something went wrong on the Provider or Endpoint's server","type":"string"}}},"BulkStatus":{"description":"Status of the bulk upload.","type":"object","properties":{"batchId":{"description":"Contact/Leads loaded","type":"number"},"message":{"type":"string"},"numOfLeadsProcessed":{"description":"Contact/Leads loaded","type":"number"},"numOfRowsFailed":{"description":"Failed count","type":"number"},"numOfRowsWithWarning":{"description":"Contact/Leads that had warnings","type":"number"},"status":{"description":"Status of the bulk job","type":"string","enum":["CREATED","STARTED","RUNNING","ABORTED","ERROR","WARNING","SUCCESS","COMPLETED","CANCELLED","CANCELLATION_PENDING","INITIATED","SCHEDULED"]}}},"BulkJobList":{"title":"BulkJobList","properties":{"record_count":{"x-samplevalue":41,"format":"int32","type":"integer"},"job_query":{"x-samplevalue":"SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'","type":"string"},"job_reset_attempt":{"x-samplevalue":0,"format":"int32","type":"integer"},"completion_time":{"x-samplevalue":1542829827804,"format":"int64","type":"integer"},"job_status":{"x-samplevalue":"COMPLETED","type":"string"},"notification_url":{"type":"string"},"job_direction":{"x-samplevalue":"DOWNLOAD","type":"string"},"error_count":{"x-samplevalue":0,"format":"int32","type":"integer"},"job_state":{"type":"string"},"createdDate":{"x-samplevalue":1542829826619,"format":"int64","type":"integer"},"job_id":{"x-samplevalue":1722,"format":"int32","type":"integer"},"object_name":{"x-samplevalue":"systemuser","type":"string"},"fileFormat":{"x-samplevalue":"csv","type":"string"}},"type":"object"},"objectsMetadataFields":{"properties":{"mask":{"type":"string"},"type":{"type":"string"},"vendorDisplayName":{"type":"string"},"vendorPath":{"type":"string"},"vendorReadOnly":{"type":"boolean"},"vendorRequired":{"type":"boolean"}},"type":"object"},"meetingsPatchReqSettings":{"properties":{"alternative_hosts":{"type":"string","x-samplevalue":"mycohost@someemail.com","x-sub-format":"email"},"approval_type":{"format":"int32","type":"integer","x-samplevalue":0},"global_dial_in_countries":{"items":{"$ref":"#/definitions/meetingsPatchReqSettingsGlobal_dial_in_countries"},"type":"array"},"host_video":{"type":"boolean","x-samplevalue":false},"in_meeting":{"type":"boolean","x-samplevalue":false},"join_before_host":{"type":"boolean","x-samplevalue":true},"mute_upon_entry":{"type":"boolean","x-samplevalue":false},"participant_video":{"type":"boolean","x-samplevalue":false},"registrants_confirmation_email":{"type":"boolean","x-samplevalue":true},"use_pmi":{"type":"boolean","x-samplevalue":false},"waiting_room":{"type":"boolean","x-samplevalue":false},"watermark":{"type":"boolean","x-samplevalue":false}},"title":"settings","type":"object"},"meetingsRegistrantsPostReq":{"properties":{"address":{"type":"string","x-samplevalue":"123 Main ST"},"city":{"type":"string","x-samplevalue":"San Jose"},"comments":{"type":"string","x-samplevalue":"Excited to host you."},"country":{"type":"string","x-samplevalue":"US"},"custom_questions":{"items":{"$ref":"#/definitions/meetingsRegistrantsPostReqCustom_questions"},"type":"array"},"email":{"type":"string","x-samplevalue":"myemail@mycompany.com","x-sub-format":"email"},"first_name":{"type":"string","x-samplevalue":"Mike"},"industry":{"type":"string","x-samplevalue":"Tech"},"job_title":{"type":"string","x-samplevalue":"DA"},"last_name":{"type":"string","x-samplevalue":"Brown"},"no_of_employees":{"type":"string","x-samplevalue":"1-20"},"org":{"type":"string","x-samplevalue":"IT"},"phone":{"type":"string","x-samplevalue":"111-444-4444"},"purchasing_time_frame":{"type":"string","x-samplevalue":"More Than 6 Months"},"role_in_purchase_process":{"type":"string","x-samplevalue":"Influencer"},"state":{"type":"string","x-samplevalue":"CA"},"zip":{"type":"string","x-samplevalue":"95550"}},"title":"meetingsRegistrantsPostReq","type":"object"},"swaggerpost":{"x-has-customfields":false,"type":"object","title":"post","properties":{"summary":{"x-samplevalue":"Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.","type":"string"},"operationId":{"x-samplevalue":"createContact","type":"string"},"responses":{"$ref":"#/definitions/swaggerresponses"},"parameters":{"type":"array","items":{"$ref":"#/definitions/swaggerparameters"}},"tags":{"x-samplevalue":["contacts"],"type":"array","items":{"type":"string"}}}},"usersObject":{"properties":{"created_at":{"format":"date-time","type":"string","x-displayName":"Created At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-09-09T19:58:16Z"},"dept":{"type":"string","x-displayName":" Department","x-samplevalue":"Test"},"email":{"type":"string","x-displayName":"Email","x-samplevalue":"kia.martinez+whatishappening@cloud-elements.com"},"first_name":{"type":"string","x-displayName":"First Name","x-samplevalue":"KiaIs"},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"-JUZZRyZSkGSuBj9IMDYqA"},"language":{"type":"string","x-displayName":"Language"},"last_login_time":{"format":"date-time","type":"string","x-displayName":"Last Log In Time","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-10-05T20:04:22Z"},"last_name":{"type":"string","x-displayName":"Last Name","x-samplevalue":"MadeOfCoffee"},"phone_number":{"type":"string","x-displayName":"Phone Number","x-samplevalue":"+1 30370467321"},"pmi":{"format":"int32","type":"integer","x-displayName":"Pmi","x-samplevalue":0},"status":{"type":"string","x-displayName":"Status","x-samplevalue":"active"},"timezone":{"type":"string","x-displayName":"Time Zone"},"type":{"format":"int32","type":"integer","x-displayName":"Type","x-samplevalue":1},"verified":{"format":"int32","type":"integer","x-displayName":"Verified","x-samplevalue":0}},"title":"users","type":"object"},"swaggertags":{"x-has-customfields":false,"title":"tags","properties":{"name":{"x-samplevalue":"contacts","type":"string"}},"type":"object"},"contacts":{"properties":{"email":{"type":"string","x-displayName":"Email","x-samplevalue":"kevin.choi@cloud-elements.com"},"first_name":{"type":"string","x-displayName":"First Name","x-samplevalue":"Kevin "},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"-CeoGa66Rl6WsizPuRIYJQ"},"last_name":{"type":"string","x-displayName":"Last Name","x-samplevalue":"Choi"}},"title":"contacts","type":"object"},"meetingsRegistrantsPostReqCustom_questions":{"properties":{"title":{"type":"string","x-samplevalue":"Favorite thing about Zoom"},"value":{"type":"string","x-samplevalue":"Meet Happy"}},"title":"custom_questions","type":"object"}},"swagger":"2.0","info":{"x-element-name":"Zoom","x-element-hub":"collaboration","x-element-key":"zoom","contact":{"email":"support@cloud-elements.com"},"title":"zoom","x-element-id":26955,"version":"api-v2"},"tags":[{"name":"ping"},{"name":"objects"},{"name":"objectName"},{"name":"meetings"},{"name":"bulk"},{"name":"users"},{"name":"contacts"}]}