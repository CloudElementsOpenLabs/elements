{
  "configuration": [{
    "internal": false,
    "companyConfig": false,
    "defaultValue": "true",
    "displayOrder": 1,
    "active": true,
    "description": "Confluence OAuth basic header",
    "type": "BOOLEAN",
    "resellerConfig": false,
    "required": false,
    "hideFromConsole": false,
    "name": "OAuth basic header",
    "groupControl": false,
    "key": "oauth.basic.header"
  }, {
    "internal": false,
    "companyConfig": false,
    "defaultValue": "https://yourjirasubdomain.rest/api/3",
    "displayOrder": 1,
    "active": true,
    "description": "Confluence Base Url",
    "type": "TEXTFIELD_1000",
    "resellerConfig": false,
    "required": true,
    "hideFromConsole": true,
    "name": "Base Url",
    "groupControl": false,
    "key": "base.url"
  }, {
    "internal": false,
    "companyConfig": false,
    "defaultValue": "50",
    "displayOrder": 1,
    "active": true,
    "description": "Confluence Max Page Size (or limit)",
    "type": "TEXTFIELD_32",
    "resellerConfig": false,
    "required": false,
    "hideFromConsole": true,
    "name": "Max Page Size (or limit)",
    "groupControl": false,
    "key": "pagination.max"
  }, {
    "internal": false,
    "companyConfig": false,
    "defaultValue": "offset",
    "displayOrder": 1,
    "active": true,
    "description": "Confluence Pagination Type",
    "type": "TEXTFIELD_32",
    "resellerConfig": false,
    "required": false,
    "hideFromConsole": true,
    "name": "Pagination Type",
    "groupControl": false,
    "key": "pagination.type"
  }, {
    "internal": false,
    "hideFromConsole": false,
    "companyConfig": false,
    "displayOrder": 2,
    "name": "Email Address",
    "active": true,
    "description": "Confluence Email Address",
    "type": "TEXTFIELD_32",
    "groupControl": false,
    "resellerConfig": false,
    "key": "username",
    "required": true
  }, {
    "internal": false,
    "hideFromConsole": false,
    "companyConfig": false,
    "displayOrder": 3,
    "name": "API Token",
    "active": true,
    "description": "Confluence API Token",
    "type": "PASSWORD",
    "groupControl": false,
    "resellerConfig": false,
    "key": "password",
    "required": true
  }, {
    "internal": false,
    "hideFromConsole": true,
    "companyConfig": false,
    "displayOrder": 11,
    "name": "Event Notification Signature Key",
    "active": true,
    "description": "Confluence Event Notification Signature Key",
    "type": "TEXTFIELD_128",
    "groupControl": false,
    "resellerConfig": false,
    "key": "event.notification.signature.key",
    "required": false
  }, {
    "internal": false,
    "hideFromConsole": false,
    "companyConfig": false,
    "displayOrder": 12,
    "name": "Event Notification Basic User Name",
    "active": true,
    "description": "Confluence Event Notification Basic User Name",
    "type": "TEXTFIELD_128",
    "groupControl": false,
    "resellerConfig": false,
    "key": "event.notification.basic.username",
    "required": false
  }, {
    "internal": false,
    "hideFromConsole": false,
    "companyConfig": false,
    "displayOrder": 13,
    "name": "Event Notification Basic Password",
    "active": true,
    "description": "Confluence Event Notification Basic Password",
    "type": "PASSWORD",
    "groupControl": false,
    "resellerConfig": false,
    "key": "event.notification.basic.password",
    "required": false
  }, {
    "internal": false,
    "hideFromConsole": false,
    "companyConfig": false,
    "displayOrder": 98,
    "name": "Default select fields",
    "active": true,
    "description": "Generic map used to specify default fields for bulk download and GET /all requests. Each key should be the canonical objectName and values may be specified as a comma-delimited string or a list of strings",
    "type": "TEXTAREA",
    "groupControl": false,
    "resellerConfig": false,
    "key": "default.select.fields.map",
    "required": false
  }, {
    "internal": false,
    "companyConfig": false,
    "defaultValue": "true",
    "displayOrder": 99,
    "active": true,
    "description": "Used to enable/disable filtering of null values from the responses",
    "type": "BOOLEAN",
    "resellerConfig": false,
    "required": false,
    "hideFromConsole": false,
    "name": "Filter null values from the response",
    "groupControl": false,
    "key": "filter.response.nulls"
  }],
  "objects": [],
  "description": "An element for the Atlassian Confluence Wiki.",
  "cloneable": false,
  "extended": false,
  "bulkDownloadEnabled": false,
  "useModelsForMetadata": true,
  "trialAccount": false,
  "logo": "confluence",
  "hooks": [{
    "isLegacy": false,
    "contextParams": "request_method,request_expression,request_vendor_parameters,request_vendor_path",
    "mimeType": "application/javascript",
    "body": "let vendorPath = request_vendor_path;\n\nif (request_method === 'GET' && request_expression) {\n  vendorPath += '/search';\n}\n\nlet vendorParams = request_vendor_parameters;\n\nif (request_expression) {\n  vendorParams.cql = '';\n  request_expression.forEach((expression, index) => {\n    if (index > 0) {\n      vendorParams.cql += ' and ';\n    }\n    \n    let operator = '=';\n    \n    if (expression.operator === 'GREATERTHANEQUALS') {\n      operator = '>=';\n    }\n    \n    vendorParams.cql += (expression.attribute + operator + expression.value);\n  });\n}\n\ndone({\n  continue: true,\n  request_vendor_path: vendorPath,\n  request_vendor_parameters: vendorParams\n});",
    "type": "preRequest"
  }],
  "beta": false,
  "key": "jiraTwo",
  "authentication": {
    "type": "basic"
  },
  "bulkUploadEnabled": false,
  "image": "https://images.cloudelements.io/confluence-logo-D9B07137C2-seeklogo.com201812021333.png",
  "models": [],
  "active": true,
  "resources": [{
    "path": "/hubs/cms/issues",
    "vendorMethod": "POST",
    "method": "POST",
    "kind": "eb",
    "response": {
      "contentType": "application/json"
    },
    "description": "Create a(n) projects",
    "type": "api",
    "hooks": [],
    "modelMigrated": false,
    "parameters": [{
      "vendorType": "body",
      "dataType": "projectsPostReq",
      "name": "body",
      "description": "The object body",
      "vendorDataType": "projects",
      "source": "request",
      "type": "body",
      "vendorName": "body",
      "required": true
    }],
    "vendorPath": "/issue"
  }, {
    "path": "/hubs/cms/projects ",
    "vendorMethod": "GET",
    "method": "GET",
    "kind": "eb",
    "response": {
      "contentType": "application/json"
    },
    "description": "Search for projects",
    "type": "api",
    "hooks": [],
    "modelMigrated": false,
    "parameters": [{
      "vendorType": "query",
      "converter": "toQueryParameters",
      "dataType": "string",
      "name": "where",
      "description": "The CEQL search expression",
      "vendorDataType": "string",
      "source": "request",
      "type": "query",
      "vendorName": "converter:toQueryParameters",
      "required": false
    }, {
      "vendorType": "query",
      "dataType": "string",
      "name": "page",
      "description": "The page number of resources to retrieve",
      "vendorDataType": "string",
      "source": "request",
      "type": "query",
      "vendorName": "page",
      "required": false
    }, {
      "vendorType": "query",
      "dataType": "string",
      "name": "pageSize",
      "description": "The number of resources to return in a given page",
      "vendorDataType": "string",
      "source": "request",
      "type": "query",
      "vendorName": "pageSize",
      "required": false
    }],
    "vendorPath": "/project"
  }],
  "modelType": "basic",
  "protocolType": "http",
  "transformationsEnabled": true,
  "deleted": false,
  "hub": "cms",
  "typeOauth": false,
  "name": "Jira & Confluence rest",
  "extendable": true,
  "parameters": [{
    "vendorType": "header",
    "name": "application/json",
    "source": "request",
    "type": "value",
    "vendorName": "Accept",
    "required": false
  }, {
    "vendorType": "header",
    "name": "application/json",
    "source": "request",
    "type": "value",
    "vendorName": "Content-Type",
    "required": false
  }]
}
