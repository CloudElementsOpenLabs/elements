{"basePath":"/elements/api-v2","paths":{"/bulk/jobs":{"get":{"operationId":"getBulkJobs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'","in":"query","name":"where","required":false,"type":"string"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The page size for pagination, which defaults to 200 if not supplied","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkJobList"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Fetch all the bulk jobs for an instance","tags":["bulk"]}},"/bulk/query":{"post":{"operationId":"createBulkQuery","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The Url to send the notification to when the Job is completed","in":"header","name":"Elements-Async-Callback-Url","required":false,"type":"string"},{"description":"The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.","in":"query","name":"q","required":false,"type":"string"},{"description":"The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"lastRunDate","required":false,"type":"string"},{"description":"The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"from","required":false,"type":"string"},{"description":"The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"to","required":false,"type":"string"},{"description":"Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ","in":"formData","name":"metaData","required":false,"type":"string"}],"consumes":["multipart/form-data"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkQuery"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an asynchronous bulk query job.","tags":["bulk"]}},"/bulk/{id}/cancel":{"put":{"operationId":"replaceBulkCancel","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to cancel.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkStatus"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Cancel an asynchronous bulk query job.","tags":["bulk"]}},"/bulk/{id}/errors":{"get":{"operationId":"getBulkErrors","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to retrieve its errors.","in":"path","name":"id","required":true,"type":"string"},{"description":"The page size for pagination, which defaults to 200 if not supplied","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the errors of a bulk job.","tags":["bulk"]}},"/bulk/{id}/status":{"get":{"operationId":"getBulkStatus","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to retrieve its status.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkStatus"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the status of a bulk job.","tags":["bulk"]}},"/bulk/{id}/{objectName}":{"get":{"operationId":"getBulkByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job","in":"path","name":"id","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"file"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the results of an asynchronous bulk query.","tags":["bulk"],"produces":["text/csv","application/json"]}},"/bulk/{objectName}":{"post":{"operationId":"createBulkByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The Url to send the notification to when the Job is completed","in":"header","name":"Elements-Async-Callback-Url","required":false,"type":"string"},{"description":"The name of the object for which data needs to be uploaded.","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Optional JSON MetaData that contains callback-payload, path or format, ex: {\"path\" : <path for the sub resource>, \"format\": <json/csv>, \"callback-payload\":<json>}. path - is passed to the endpoint for bulk loading the data into a nested object. Optional JSON Metadata that contains identifierFieldName, action, listId or campaignId. The identifierField name is used for upserts and the optional fields like listId or campaignId. Example: {\"listId\":\"1014\",\"action\":\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\":\"json\"}. callback-payload - is passed back in bulk job notification ","in":"formData","name":"metaData","required":false,"type":"string"},{"description":"The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line","in":"formData","name":"file","type":"file"}],"consumes":["multipart/form-data"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkUploadResponse"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Upload a file of objects to be bulk uploaded to the provider.","tags":["bulk"]}},"/business":{"get":{"summary":"Search for the business","operationId":"getBusiness","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/business"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["business"]}},"/customers":{"post":{"summary":"Create a Customer","operationId":"createCustomer","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customerPost"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/customerCreate"},"in":"body","name":"body","description":"Creates a new customer for a business.  ( Note : You must provide at least one of the given_name, family_name, company_name, email_address, phone_number values in your request to this endpoint: ) ","required":true}],"tags":["customers"]},"get":{"summary":"Lists all Customers","operationId":"getCustomers","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/customersListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false}],"tags":["customers"]}},"/customers/{id}":{"patch":{"summary":"Update a Customer.","operationId":"updateCustomerById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customerPUT"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Customer ID.","type":"string","required":true},{"schema":{"$ref":"#/definitions/customerUpdate"},"in":"body","name":"body","description":"Updates customer Information for a business.","required":true}],"tags":["customers"]},"get":{"summary":"Retrive a Customer.","operationId":"getCustomerById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customer"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Customer ID.","type":"string","required":true}],"tags":["customers"]},"delete":{"summary":"Delete a Customer.","operationId":"deleteCustomerById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Customer ID.","type":"string","required":true}],"tags":["customers"]}},"/generals":{"post":{"summary":"Create an employee.","operationId":"createGeneral","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/employeePOST"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/employeeCreate"},"in":"body","name":"body","description":"Employee JSON object","required":true}],"tags":["generals"]},"get":{"summary":"Search for employees.","operationId":"getGenerals","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/employeesGetallListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"where","description":"The CEQL search expression, or where clause without the WHERE keyword, in a typical SQL query. The queryable fields are location_id, status. For example, to request fields that have been updated since Oct. 5th, the query would be: <i> status='ACTIVE' </i>","type":"string","required":false},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false}],"tags":["generals"]}},"/generals/{id}":{"patch":{"summary":"Update an employee.","operationId":"updateGeneralById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/employeePUT"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Employee Id","type":"string","required":true},{"schema":{"$ref":"#/definitions/employeeUpdate"},"in":"body","name":"body","description":"Employee JSON object","required":true}],"tags":["generals"]},"get":{"summary":"Retrieve an employee","operationId":"getGeneralById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/employeeById"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Employee Id","type":"string","required":true}],"tags":["generals"]}},"/labor-break-types":{"post":{"summary":"Create a labor break type","operationId":"createLaborBreakType","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/LaboutBreakTypesPostResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/laborBreakTypesCreate"},"in":"body","name":"body","description":"Creates a new break type for a labor.","required":true}],"tags":["labor-break-types"]},"get":{"summary":"Lists all labor break types","operationId":"getLaborBreakTypes","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/LabourBreakTypesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. location_id='xyensdoe'","type":"string","required":false},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false}],"tags":["labor-break-types"]}},"/labor-break-types/{id}":{"patch":{"summary":"Update a labor break type","operationId":"updateLaborBreakTypeById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/LaborBreakTypeUpdateResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The break type ID.","type":"string","required":true},{"schema":{"$ref":"#/definitions/LaborBreakTypeUpdate"},"in":"body","name":"body","description":"Updates break type Information for a labor.","required":true}],"tags":["labor-break-types"]},"get":{"summary":"Retrive a labor break type","operationId":"getLaborBreakTypeById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/LaboutBreakTypesGetByIdResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The break type ID.","type":"string","required":true}],"tags":["labor-break-types"]},"delete":{"summary":"Delete a labor break type","operationId":"deleteLaborBreakTypeById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The break type ID.","type":"string","required":true}],"tags":["labor-break-types"]}},"/labor-shifts":{"post":{"summary":"Create a labor shifts","operationId":"createLaborShift","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/LaborhiftPostResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/laborShiftsCreate"},"in":"body","name":"body","description":"Creates a new shifts​ for a labor.","required":true}],"tags":["labor-shifts"]},"get":{"summary":"Lists all labor shifts","operationId":"getLaborShifts","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/LaborShiftsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. EX: workday.date_range.start_date = \"2019-01-20\", AND workday.date_range.end_date = \"2019-02-03\" AND match_shifts_by = \"START_AT\", AND default_timezone = \"America/Los_Angeles\" AND employee_id IN (123,234)","type":"string","required":false}],"tags":["labor-shifts"]}},"/labor-shifts/{id}":{"patch":{"summary":"Update a labor shift","operationId":"updateLaborShiftById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/LaborShiftsUpdateResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"ID of the shift being updated.","type":"string","required":true},{"schema":{"$ref":"#/definitions/LaborShiftsUpdate"},"in":"body","name":"body","description":"Updates shift Information for a labor.","required":true}],"tags":["labor-shifts"]},"get":{"summary":"Retrive a labor shift","operationId":"getLaborShiftById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/LaboutShiftsGetByIdResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"ID for the Shift being retrieved.","type":"string","required":true}],"tags":["labor-shifts"]},"delete":{"summary":"Delete a labor shift","operationId":"deleteLaborShiftById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"ID for the Shift being deleted.","type":"string","required":true}],"tags":["labor-shifts"]}},"/locations":{"get":{"summary":"List all locations.","operationId":"getLocations","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/locationsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true}],"tags":["locations"]}},"/locations/{id}":{"patch":{"summary":"Update an location.","operationId":"updateLocationById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/locationsUpdateResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location Id","type":"string","required":true},{"schema":{"$ref":"#/definitions/locationsUpdate"},"in":"body","name":"body","description":"locations JSON object","required":true}],"tags":["locations"]},"get":{"summary":"Retrieve an location","operationId":"getLocationById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/locationsById"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location Id","type":"string","required":true}],"tags":["locations"]}},"/locations/{id}/payments":{"get":{"summary":"Search for payments for a  specific location. This provides summary information for all payments taken by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.This is the V1 version of payments endpoint.Please refer to /payments resource for V2 version.","operationId":"getLocationsPayments","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/paymentsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location ID.","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression, or where clause without the WHERE keyword, in a typical SQL query. The queryable fields are begin_time and end_time. For example, to request fields that have been updated since Oct. 5th, the query would be: <i> begin_time='2017-10-05T00:00:00Z' </i>","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["locations"]}},"/locations/{id}/payments/{paymentId}":{"get":{"summary":"Retrieve a payment for a location.This is the V1 version of payments endpoint.Please refer to /payments resource for V2 version.","operationId":"getLocationsPaymentByPaymentId","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/locationsPayments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location ID","type":"string","required":true},{"in":"path","name":"paymentId","description":"The payment ID","type":"string","required":true}],"tags":["locations"]}},"/locations/{id}/transactions":{"get":{"summary":"List all transactions for a location","operationId":"getLocationsTransactions","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/locationsTransactionsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location id.","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":" The CEQL search expression, or where clause without the WHERE keyword, in a typical SQL query.  The queryable fields are begin_time, end_time and sort_order.  For example, to request fields that have been updated since Nov. 12th,  the query would be: <i> begin_time='2017-11-12T00:00:00Z' </i>. For example, to request fields that have been updated Between Nov. 12th and Nov. 13th,  the query would be: <i> begin_time='2017-11-12T00:00:00Z' AND end_time='2017-11-12T00:00:00Z'</i>.","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["locations"]}},"/locations/{id}/transactions/{transactionId}":{"get":{"summary":"Search for  locations/{id}/transactions/{transactionId}","operationId":"getLocationsTransactionByTransactionId","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/transaction"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location ID","type":"string","required":true},{"in":"path","name":"transactionId","description":"The transaction id.","type":"string","required":true}],"tags":["locations"]},"delete":{"summary":"Delete the transaction for a location, this will void the transaction","operationId":"deleteLocationsTransactionByTransactionId","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location id.","type":"string","required":true},{"in":"path","name":"transactionId","description":"The transaction id.","type":"string","required":true}],"tags":["locations"]}},"/locations/{id}/transactions/{transactionId}/capture":{"post":{"summary":"Capture the transaction for a location  ","operationId":"createLocationTransactionCapture","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/locationsTransactionsCapture"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The location id.","type":"string","required":true},{"in":"path","name":"transactionId","description":"The transaction id.","type":"string","required":true}],"tags":["locations"]}},"/objects":{"get":{"operationId":"getObjects","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the available objects.","tags":["objects"]}},"/objects/{objectName}/docs":{"get":{"operationId":"getObjectsObjectNameDocs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Include discovery metadata in definitions","in":"query","name":"discovery","required":false,"type":"boolean"},{"description":"Optionally resolve swagger references for an inline object definition","in":"query","name":"resolveReferences","required":false,"type":"boolean"},{"description":"Include only OpenAPI / Swagger properties in definitions","in":"query","name":"basic","required":false,"type":"boolean"},{"description":"The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger","in":"query","name":"version","required":false,"default":"-1","type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/swaggerDocs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get swagger docs for an object.","tags":["objects"]}},"/objects/{objectName}/metadata":{"get":{"operationId":"getObjectsObjectNameMetadata","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/objectsMetadata"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the field for an object.","tags":["objects"]}},"/payments":{"post":{"summary":"Create a payment","operationId":"createPayment","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/paymentsCreateResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/paymentsCreate"},"in":"body","name":"body","description":"Create payment body","required":true}],"tags":["payments"]},"get":{"summary":"Search for payments","operationId":"getPayments","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/paymentsGetAllObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. supported fields begin_time, end_time, location_id, last_4, total, card_brand. Ex: card_brand='VISA'","type":"string","required":false},{"in":"query","name":"orderby","description":"The order in which results are listed.\\nASC - oldest to newest\\nDESC - newest to oldest (default).","type":"string","required":false}],"tags":["payments"]}},"/payments/{id}":{"get":{"summary":"Retrive a payment.","operationId":"getPaymentById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/paymentsById"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The payment ID.","type":"string","required":true}],"tags":["payments"]}},"/payments/{id}/cancel":{"patch":{"summary":"Cancels a payment.","operationId":"updatePaymentsCancel","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/paymentsCancelResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The payment ID.","type":"string","required":true}],"tags":["payments"]}},"/payments/{id}/complete":{"patch":{"summary":"Completes a payment.","operationId":"updatePaymentsComplete","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/paymentsCompleteResp"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The payment ID.","type":"string","required":true}],"tags":["payments"]}},"/ping":{"get":{"operationId":"getPing","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Pong"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.","tags":["ping"]}},"/roles":{"post":{"summary":"Create a role.","operationId":"createRole","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/rolePOST"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/roleCreate"},"in":"body","name":"body","description":"JSON object to create a role","required":true}],"tags":["roles"]},"get":{"summary":"List all roles.","operationId":"getRoles","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/rolesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["roles"]}},"/roles/{id}":{"patch":{"summary":"Update a role.","operationId":"updateRoleById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/rolePATCH"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Role Id","type":"string","required":true},{"schema":{"$ref":"#/definitions/roleUpdate"},"in":"body","name":"body","description":"The Role JSON object","required":true}],"tags":["roles"]},"get":{"summary":"Retrive a role.","operationId":"getRoleById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/role"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"ID of the role.","type":"string","required":true}],"tags":["roles"]}},"/search-customers":{"get":{"summary":"Search for Customers","operationId":"getSearchCustomers","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customersSearchGetAll"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"nextPage","description":"The next page cursor, taken from the response header: `elements-next-page-token`","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. Supported fields   creation_source.value, rule, sort.field, sort.order. Ex: creation_source.values IN (MARKETING), created_at.start_at='2018-01-11T19:34:20.468Z'  AND created_at.end_at='2018-01-12T20:34:20.468Z'","type":"string","required":false},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"integer","required":false}],"tags":["search-customers"]}},"/timesheets":{"post":{"summary":"Create a timesheet","operationId":"createTimesheet","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/timesheetsPOST"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/timesheetsCreate"},"in":"body","name":"body","description":"The Timesheet JSON object","required":true}],"tags":["timesheets"]},"get":{"summary":"Search for timesheets.","operationId":"getTimesheets","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/timesheetsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression, or where clause without the WHERE keyword, in a typical SQL query. The queryable fields employee_id, begin_clockin_time, end_clockin_time, begin_clockout_time, end_clockout_time, begin_updated_at, deleted.  For example, to request fields that have been updated since Oct. 5th, the query would be: <i> begin_updated_at='2017-10-05T00:00:00Z' </i>","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"tags":["timesheets"]}},"/timesheets/{id}":{"patch":{"summary":"Update a timesheet.","operationId":"updateTimesheetById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/timesheetsPATCH"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The Timesheet Id","type":"string","required":true},{"schema":{"$ref":"#/definitions/timesheetsUpdate"},"in":"body","name":"body","description":"The Timesheet JSON object","required":true}],"tags":["timesheets"]},"get":{"summary":"Retrieve a timesheet","operationId":"getTimesheetById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/timesheet"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The timesheet ID","type":"string","required":true}],"tags":["timesheets"]},"delete":{"summary":"Delete a timesheet.","operationId":"deleteTimesheetById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The timesheet ID","type":"string","required":true}],"tags":["timesheets"]}},"/{objectName}":{"get":{"operationId":"getByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {objectName}","tags":["objectName"]},"post":{"operationId":"createByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}":{"delete":{"operationId":"deleteObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {objectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"produces":["application/json","application/pdf"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {objectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}":{"get":{"operationId":"getObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {childObjectName}","tags":["objectName"]},"post":{"operationId":"createObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {childObjectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}/{childObjectId}":{"delete":{"operationId":"deleteObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {childObjectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {childObjectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]}}},"schemes":["https"],"definitions":{"timesheetsPATCH":{"properties":{"clockin_location_id":{"type":"string","x-readOnly":true},"clockin_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"clockout_location_id":{"type":"string","x-readOnly":true},"clockout_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"deleted":{"type":"boolean"},"doubletime_seconds_worked":{"format":"int32","type":"integer"},"employee_id":{"type":"string","x-readOnly":true},"id":{"type":"string","x-readOnly":true},"overtime_seconds_worked":{"format":"int32","type":"integer"},"regular_seconds_worked":{"format":"int32","type":"integer"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"timecards","type":"object"},"paymentsCreateAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"rolePOST":{"properties":{"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"id":{"type":"string","x-readOnly":true},"is_owner":{"type":"boolean"},"name":{"type":"string"},"permissions":{"items":{"type":"string"},"type":"array"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"roles","type":"object"},"paymentsCreateRespCard_detailsCard":{"properties":{"card_brand":{"type":"string","x-samplevalue":"VISA"},"exp_month":{"format":"int32","type":"integer","x-samplevalue":7},"exp_year":{"format":"int32","type":"integer","x-samplevalue":2026},"fingerprint":{"type":"string","x-samplevalue":"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw"},"last_4":{"type":"string","x-samplevalue":"2796"}},"title":"card","type":"object"},"locationsUpdateCoordinates":{"properties":{"latitude":{"format":"int32","type":"integer","x-samplevalue":0},"longitude":{"format":"int32","type":"integer","x-samplevalue":0}},"title":"coordinates","type":"object"},"refundsAdditional_recipients":{"properties":{"amount_money":{"$ref":"#/definitions/refundsAdditional_recipientsAmount_money"},"description":{"type":"string"},"location_id":{"type":"string","x-readOnly":true}},"type":"object"},"paymentsCancelRespApp_fee_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"app_fee_money","type":"object"},"swagger400":{"x-has-customfields":false,"type":"object","title":"400","properties":{"description":{"x-samplevalue":"Bad Request - Often due to a missing request parameter","type":"string"}}},"swagger401":{"x-has-customfields":false,"type":"object","title":"401","properties":{"description":{"x-samplevalue":"Unauthorized - An invalid element token, user secret and/or org secret provided","type":"string"}}},"LaborhiftPostResp":{"properties":{"breaks":{"items":{"$ref":"#/definitions/LaborhiftPostRespBreaks"},"type":"array"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"employee_id":{"type":"string","x-samplevalue":"ormj0jJJZ5OZIzxrZYJI"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T13:11:00-05:00"},"id":{"type":"string","x-samplevalue":"K0YH4CV5462JB"},"location_id":{"type":"string","x-samplevalue":"PAA1RJZZKXBFG"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T03:11:00-05:00"},"status":{"type":"string","x-samplevalue":"CLOSED"},"timezone":{"type":"string","x-samplevalue":"America/New_York"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1},"wage":{"$ref":"#/definitions/LaborhiftPostRespWage"}},"title":"LaborhiftPostResp","x-primary-key":["id"],"x-vendor-objectname":"shifts","type":"object"},"swagger403":{"x-has-customfields":false,"type":"object","title":"403","properties":{"description":{"x-samplevalue":"Forbidden - Access to the resource by the provider is forbidden","type":"string"}}},"swagger404":{"x-has-customfields":false,"type":"object","title":"404","properties":{"description":{"x-samplevalue":"Not found - The requested resource is not found","type":"string"}}},"swagger405":{"x-has-customfields":false,"type":"object","title":"405","properties":{"description":{"x-samplevalue":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected","type":"string"}}},"amount_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency":{"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD"],"type":"string"}},"type":"object"},"paymentsCompleteRespCard_detailsCard":{"properties":{"card_brand":{"type":"string","x-samplevalue":"VISA"},"exp_month":{"format":"int32","type":"integer","x-samplevalue":7},"exp_year":{"format":"int32","type":"integer","x-samplevalue":2026},"fingerprint":{"type":"string","x-samplevalue":"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw"},"last_4":{"type":"string","x-samplevalue":"2796"}},"title":"card","type":"object"},"paymentsByIdTotal_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":20000},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"total_money","type":"object"},"swaggercontact":{"x-has-customfields":false,"type":"object","title":"contact","properties":{"email":{"x-samplevalue":"support@cloud-elements.com","type":"string"}}},"customerPUT":{"properties":{"address":{"$ref":"#/definitions/address"},"company_name":{"type":"string","x-samplevalue":"Cloud Elements"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSZ","x-readOnly":true,"x-samplevalue":"2018-01-05T22:32:53.136Z"},"email_address":{"type":"string","x-samplevalue":"naga.ede@cloudelements.com"},"family_name":{"type":"string","x-samplevalue":"Ede"},"given_name":{"type":"string","x-samplevalue":"Naga Seshu Babu"},"groups":{"items":{"$ref":"#/definitions/groups"},"type":"array"},"id":{"type":"string","x-readOnly":true,"x-samplevalue":"3WNVTV44TD5CYVAJCFJABDB6ZG"},"nickname":{"type":"string","x-samplevalue":"Bangaro"},"note":{"type":"string","x-samplevalue":"A Customer"},"phone_number":{"type":"string","x-samplevalue":"1-111-111-1111"},"preferences":{"$ref":"#/definitions/preferences"},"reference_id":{"type":"string","x-readOnly":true,"x-samplevalue":"NAGA_CLOUD_ELEMENTS"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-readOnly":true,"x-samplevalue":"2018-01-05T22:32:53Z"}},"title":"customerPUT","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"customers","type":"object"},"item_detail":{"properties":{"category_name":{"type":"string"},"item_id":{"type":"string"},"item_variation_id":{"type":"string"},"sku":{"type":"string"}},"type":"object"},"paymentsCreateTip_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"tip_money","type":"object"},"customerPost":{"properties":{"address":{"$ref":"#/definitions/address"},"company_name":{"type":"string","x-samplevalue":"Cloud Elements"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSZ","x-readOnly":true,"x-samplevalue":"2018-01-05T22:32:53.136Z"},"email_address":{"type":"string","x-samplevalue":"naga.ede@cloudelements.com"},"family_name":{"type":"string","x-samplevalue":"Ede"},"given_name":{"type":"string","x-samplevalue":"Naga Seshu Babu"},"groups":{"items":{"$ref":"#/definitions/groups"},"type":"array"},"id":{"type":"string","x-readOnly":true,"x-samplevalue":"3WNVTV44TD5CYVAJCFJABDB6ZG"},"nickname":{"type":"string","x-samplevalue":"Bangaro"},"note":{"type":"string","x-samplevalue":"A Customer"},"phone_number":{"type":"string","x-samplevalue":"1-111-111-1111"},"preferences":{"$ref":"#/definitions/preferences"},"reference_id":{"type":"string","x-readOnly":true,"x-samplevalue":"NAGA_CLOUD_ELEMENTS"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-readOnly":true,"x-samplevalue":"2018-01-05T22:32:53Z"}},"title":"customerPost","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"customers","type":"object"},"swagger406":{"x-has-customfields":false,"type":"object","title":"406","properties":{"description":{"x-samplevalue":"Not acceptable - The response content type does not match the 'Accept' header value","type":"string"}}},"swaggerdefinition-property":{"x-has-customfields":false,"type":"object","title":"#/definitions/definition-property","properties":{"type":{"x-samplevalue":"string","type":"string"}}},"total_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"swagger409":{"x-has-customfields":false,"type":"object","title":"409","properties":{"description":{"x-samplevalue":"Conflict - If a resource being created already exists","type":"string"}}},"device":{"properties":{"id":{"type":"string"}},"type":"object"},"net_sales_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"locationsTransactionsListTendersProcessing_fee_money":{"properties":{"amount":{"format":"int32","type":"integer","x-displayName":"Amount","x-samplevalue":45},"currency":{"type":"string","x-displayName":"Currency","x-samplevalue":"USD"}},"title":"processing_fee_money","type":"object"},"Pong":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"},"valid":{"type":"boolean"}},"type":"object"},"role":{"properties":{"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"id":{"type":"string"},"is_owner":{"type":"boolean"},"name":{"type":"string"},"permissions":{"items":{"type":"string"},"type":"array"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"roles","type":"object"},"paymentsCancelRespAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"laborShiftsCreate":{"properties":{"breaks":{"items":{"$ref":"#/definitions/laborShiftsCreateBreaks"},"type":"array"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"employee_id":{"type":"string","x-samplevalue":"string"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"id":{"type":"string","x-samplevalue":"string"},"location_id":{"type":"string","x-samplevalue":"string"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"status":{"type":"string","x-samplevalue":"string"},"timezone":{"type":"string","x-samplevalue":"string"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"version":{"format":"int32","type":"integer","x-samplevalue":0},"wage":{"$ref":"#/definitions/laborShiftsCreateWage"}},"required":["employee_id","start_at","location_id","end_at"],"title":"laborShiftsCreate","type":"object"},"paymentsCompleteRespApp_fee_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"app_fee_money","type":"object"},"LaborBreakTypeUpdateResp":{"properties":{"break_name":{"type":"string","x-samplevalue":"Lunch Break"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"expected_duration":{"type":"string","x-samplevalue":"PT30M"},"id":{"type":"string","x-samplevalue":"49SSVDJG76WF3"},"is_paid":{"type":"boolean","x-samplevalue":true},"location_id":{"type":"string","x-samplevalue":"CGJN03P1D08GF"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"LaborBreakTypeUpdateResp","x-primary-key":["id"],"x-vendor-objectname":"break-types","type":"object"},"LaboutShiftsGetByIdRespWage":{"properties":{"hourly_rate":{"$ref":"#/definitions/LaboutShiftsGetByIdRespWageHourly_rate"},"title":{"type":"string","x-samplevalue":"Barista"}},"title":"wage","type":"object"},"paymentsCreateBilling_address":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"title":"billing_address","type":"object"},"paymentsByIdAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":20000},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"locationsTransactionsListTendersCard_detailsCard":{"properties":{"card_brand":{"type":"string","x-displayName":"Card Brand","x-samplevalue":"VISA"},"fingerprint":{"type":"string","x-displayName":"Fingerprint","x-samplevalue":"sq-1-30C2DMcFs6zbmtWzhHKi8cMoXmUhkQ5gTiff-iWKIOIY1ivEM47MjoNMdFVFq-2scA"},"last_4":{"type":"string","x-displayName":"Last 4","x-samplevalue":"5858"}},"title":"card","type":"object"},"locationsListObject":{"properties":{"address":{"$ref":"#/definitions/locationsListAddress"},"business_name":{"type":"string","x-displayName":"Business Name","x-samplevalue":"Default Test Account"},"capabilities":{"items":{"type":"string"},"type":"array","x-samplevalue":["CREDIT_CARD_PROCESSING"]},"country":{"type":"string","x-displayName":"Country","x-samplevalue":"US"},"created_at":{"format":"date-time","type":"string","x-displayName":"Created At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-10-08T05:39:09Z"},"currency":{"type":"string","x-displayName":"Currency","x-samplevalue":"USD"},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"8VS980RTKKPK2"},"language_code":{"type":"string","x-displayName":"Language Code","x-samplevalue":"en-US"},"mcc":{"type":"string","x-displayName":"Mcc","x-samplevalue":"7299"},"merchant_id":{"type":"string","x-displayName":"Merchant Id","x-samplevalue":"6XG4E1SMM2620"},"name":{"type":"string","x-displayName":"Name","x-samplevalue":"Default Test Account"},"status":{"type":"string","x-displayName":"Status","x-samplevalue":"ACTIVE"},"timezone":{"type":"string","x-displayName":"Time Zone","x-samplevalue":"Etc/UTC"},"type":{"type":"string","x-displayName":"Type","x-samplevalue":"PHYSICAL"}},"title":"locationsList","type":"object"},"discount_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"preferences":{"properties":{"email_unsubscribed":{"type":"boolean","x-samplevalue":false}},"title":"preferences","type":"object","x-has-customfields":false},"single_quantity_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"customersListObject":{"properties":{"company_name":{"type":"string","x-displayName":"Company Name","x-samplevalue":"Cayla Shortley's Compnay"},"created_at":{"format":"date-time","type":"string","x-displayName":"Created At","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2020-03-06T17:35:28.864Z"},"creation_source":{"type":"string","x-displayName":"Creation Source","x-samplevalue":"THIRD_PARTY"},"email_address":{"type":"string","x-displayName":"Email Address","x-samplevalue":"cayla@cloud-elements.com"},"family_name":{"type":"string","x-displayName":"Family Name","x-samplevalue":"Shortley"},"given_name":{"type":"string","x-displayName":"Given Name","x-samplevalue":"Cayla"},"groups":{"items":{"$ref":"#/definitions/customersListGroups"},"type":"array"},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"VCFJHME09WYS590AK51YHH1MP0"},"phone_number":{"type":"string","x-displayName":"Phone Number","x-samplevalue":"+13032451234"},"preferences":{"$ref":"#/definitions/customersListPreferences"},"segment_ids":{"items":{"type":"string"},"type":"array","x-samplevalue":["6XG4E1SMM2620.REACHABLE"]},"updated_at":{"format":"date-time","type":"string","x-displayName":"Updated At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-03-06T17:39:07Z"}},"title":"customersList","type":"object"},"address":{"properties":{"address_line_1":{"description":"Fields that start with address_line provide the address's most specific details, like street number, street name, and building name. They do not provide less specific details like city, state/province, or country (these details are provided in other fields).","type":"string","x-samplevalue":"15950 Bent Tree"},"address_line_2":{"description":"The second line of the address, if any.","type":"string","x-samplevalue":"Forest Circle"},"address_line_3":{"description":"The third line of the address, if any.","type":"string","x-samplevalue":"Apt #2020"},"administrative_district_level_1":{"description":"A civil entity within the address's country. In the US, this is the state.","type":"string","x-samplevalue":"TX"},"administrative_district_level_2":{"description":"A civil entity within the address's administrative_district_level_1. In the US, this is the county.","type":"string","x-samplevalue":"TX"},"administrative_district_level_3":{"description":"A civil entity within the address's administrative_district_level_2, if any.","type":"string","x-samplevalue":"TX"},"country":{"description":"The address's country, in ISO 3166-1-alpha-2 format.","type":"string","x-samplevalue":"US"},"first_name":{"type":"string","x-samplevalue":"Naga Seshu Babu"},"last_name":{"type":"string","x-samplevalue":"Ede"},"locality":{"description":"The city or town of the address.","type":"string","x-samplevalue":"Dallas"},"organization":{"description":"Optional organization name when it's representing recipient.","type":"string","x-samplevalue":"Cloud Elements"},"postal_code":{"type":"string","x-samplevalue":"10003"},"sublocality":{"description":"A civil region within the address's locality, if any.","type":"string","x-samplevalue":"Dallas"},"sublocality_2":{"description":"A civil region within the address's sublocality, if any.","type":"string","x-samplevalue":"Dallas"},"sublocality_3":{"description":"A civil region within the address's sublocality_2, if any.","type":"string","x-samplevalue":"Dallas"}},"title":"address","type":"object","x-has-customfields":false},"swagger500":{"x-has-customfields":false,"type":"object","title":"500","properties":{"description":{"x-samplevalue":"Server error - Something went wrong on the Cloud Elements server","type":"string"}}},"swaggerpaths":{"x-has-customfields":false,"type":"object","title":"paths","properties":{"/contacts":{"$ref":"#/definitions/swagger-contacts-path"}}},"business":{"properties":{"account_capabilities":{"items":{"type":"string"},"type":"array"},"account_type":{"type":"string"},"business_type":{"type":"string"},"country_code":{"type":"string"},"currency_code":{"type":"string"},"email":{"type":"string"},"id":{"type":"string","x-readOnly":true},"language_code":{"type":"string"},"name":{"type":"string"},"shipping_address":{"$ref":"#/definitions/shipping_address"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"business","type":"object"},"paymentsByIdCard_detailsCard":{"properties":{"bin":{"type":"string","x-samplevalue":"411111"},"card_brand":{"type":"string","x-samplevalue":"VISA"},"exp_month":{"format":"int32","type":"integer","x-samplevalue":12},"exp_year":{"format":"int32","type":"integer","x-samplevalue":2021},"fingerprint":{"type":"string","x-samplevalue":"sq-1-YGsipMInd8_3iLPYIkh0WfBWsIu5b3_5HO4HB52--J4-jVYfggx4aeAB2S21_PzQJw"},"last_4":{"type":"string","x-samplevalue":"1111"}},"title":"card","type":"object"},"swagger502":{"x-has-customfields":false,"type":"object","title":"502","properties":{"description":{"x-samplevalue":"Provider server error - Something went wrong on the Provider or Endpoint's server","type":"string"}}},"BulkStatus":{"description":"Status of the bulk upload.","type":"object","properties":{"batchId":{"description":"Contact/Leads loaded","type":"number"},"message":{"type":"string"},"numOfLeadsProcessed":{"description":"Contact/Leads loaded","type":"number"},"numOfRowsFailed":{"description":"Failed count","type":"number"},"numOfRowsWithWarning":{"description":"Contact/Leads that had warnings","type":"number"},"status":{"description":"Status of the bulk job","type":"string","enum":["CREATED","STARTED","RUNNING","ABORTED","ERROR","WARNING","SUCCESS","COMPLETED","CANCELLED","CANCELLATION_PENDING","INITIATED","SCHEDULED"]}}},"itemizations":{"properties":{"discount_money":{"$ref":"#/definitions/itemizationsDiscount_money"},"gross_sales_money":{"$ref":"#/definitions/gross_sales_money"},"item_detail":{"$ref":"#/definitions/item_detail"},"item_variation_name":{"type":"string"},"itemization_type":{"type":"string"},"name":{"type":"string"},"net_sales_money":{"$ref":"#/definitions/net_sales_money"},"notes":{"type":"string"},"quantity":{"type":"string"},"single_quantity_money":{"$ref":"#/definitions/single_quantity_money"},"total_money":{"$ref":"#/definitions/itemizationsTotal_money"}},"type":"object"},"BulkJobList":{"title":"BulkJobList","properties":{"record_count":{"x-samplevalue":41,"format":"int32","type":"integer"},"job_query":{"x-samplevalue":"SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'","type":"string"},"job_reset_attempt":{"x-samplevalue":0,"format":"int32","type":"integer"},"completion_time":{"x-samplevalue":1542829827804,"format":"int64","type":"integer"},"job_status":{"x-samplevalue":"COMPLETED","type":"string"},"notification_url":{"type":"string"},"job_direction":{"x-samplevalue":"DOWNLOAD","type":"string"},"error_count":{"x-samplevalue":0,"format":"int32","type":"integer"},"job_state":{"type":"string"},"createdDate":{"x-samplevalue":1542829826619,"format":"int64","type":"integer"},"job_id":{"x-samplevalue":1722,"format":"int32","type":"integer"},"object_name":{"x-samplevalue":"systemuser","type":"string"},"fileFormat":{"x-samplevalue":"csv","type":"string"}},"type":"object"},"LabourBreakTypesListObject":{"properties":{"break_name":{"type":"string","x-samplevalue":"Lunch Break"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"expected_duration":{"type":"string","x-samplevalue":"PT30M"},"id":{"type":"string","x-samplevalue":"49SSVDJG76WF3"},"is_paid":{"type":"boolean","x-samplevalue":true},"location_id":{"type":"string","x-samplevalue":"CGJN03P1D08GF","x-searchable":true,"x-searchable-operators":["="]},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"LabourBreakTypesList","type":"object","x-primary-key":["id"],"x-searchable-joins":["and"],"x-vendor-objectname":"break-types"},"LaborShiftsListWage":{"properties":{"hourly_rate":{"$ref":"#/definitions/LaborShiftsListWageHourly_rate"},"title":{"type":"string","x-samplevalue":"Barista"}},"title":"wage","type":"object"},"locationsPaymentsNet_sales_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"rolePATCH":{"properties":{"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"id":{"type":"string","x-readOnly":true},"is_owner":{"type":"boolean"},"name":{"type":"string"},"permissions":{"items":{"type":"string"},"type":"array"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"roles","type":"object"},"LaborShiftsUpdateRespWage":{"properties":{"hourly_rate":{"$ref":"#/definitions/LaborShiftsUpdateRespWageHourly_rate"},"title":{"type":"string","x-samplevalue":"Barista"}},"title":"wage","type":"object"},"locationsUpdate":{"properties":{"address":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"$ref":"#/definitions/locationsUpdateAddress"},"business_email":{"type":"string","x-samplevalue":"string"},"business_hours":{"type":"string","x-samplevalue":"string"},"business_name":{"type":"string","x-samplevalue":"string"},"capabilities":{"items":{"type":"string"},"type":"array","x-samplevalue":["string"]},"coordinates":{"properties":{"latitude":{"format":"int32","type":"integer","x-samplevalue":0},"longitude":{"format":"int32","type":"integer","x-samplevalue":0}},"$ref":"#/definitions/locationsUpdateCoordinates"},"country":{"type":"string","x-samplevalue":"string"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-07T05:11:41.894Z"},"currency":{"type":"string","x-samplevalue":"string"},"description":{"type":"string","x-samplevalue":"String"},"facebook_url":{"type":"string","x-samplevalue":"string"},"id":{"type":"string","x-samplevalue":"string"},"instagram_username":{"type":"string","x-samplevalue":"string"},"language_code":{"type":"string","x-samplevalue":"string"},"logo_url":{"type":"string","x-samplevalue":"String"},"mcc":{"type":"string","x-samplevalue":"string"},"merchant_id":{"type":"string","x-samplevalue":"string"},"name":{"type":"string","x-samplevalue":"string"},"phone_number":{"type":"string","x-samplevalue":"String"},"pos_background_url":{"type":"string","x-samplevalue":"String"},"status":{"type":"string","x-samplevalue":"string"},"timezone":{"type":"string","x-samplevalue":"string"},"twitter_username":{"type":"string","x-samplevalue":"String"},"type":{"type":"string","x-samplevalue":"string"},"website_url":{"type":"string","x-samplevalue":"String"}},"title":"locationsUpdate","x-primary-key":["id"],"x-vendor-objectname":"locations","type":"object"},"locationsPaymentsRefunded_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"customersSearchGetAll":{"properties":{"address":{"$ref":"#/definitions/customersSearchGetAllAddress"},"company_name":{"type":"string","x-samplevalue":"string"},"email_address":{"type":"string","x-samplevalue":"string"},"family_name":{"type":"string","x-samplevalue":"string"},"given_name":{"type":"string","x-samplevalue":"string"},"nickname":{"type":"string","x-samplevalue":"string"},"note":{"type":"string","x-samplevalue":"string"},"phone_number":{"type":"string","x-samplevalue":"string"},"reference_id":{"type":"string","x-samplevalue":"string"}},"title":"customersSearchGetAll","x-primary-key":["id"],"x-vendor-objectname":"customers","x-where":["start_at","end_at"],"type":"object"},"locationsTransactionsListObject":{"properties":{"created_at":{"format":"date-time","type":"string","x-displayName":"Created At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-10-28T16:54:02Z"},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"I6QAFpcxL52PSa8mErVp5jcFrACZY"},"location_id":{"type":"string","x-displayName":"Location Id","x-samplevalue":"8VS980RTKKPK2"},"order_id":{"type":"string","x-displayName":"Order Id","x-samplevalue":"I6QAFpcxL52PSa8mErVp5jcFrACZY"},"product":{"type":"string","x-displayName":"Product","x-samplevalue":"EXTERNAL_API"},"tenders":{"items":{"$ref":"#/definitions/locationsTransactionsListTenders"},"type":"array"}},"title":"locationsTransactionsList","type":"object"},"timesheetsCreate":{"properties":{"clockin_location_id":{"type":"string","x-readOnly":true},"clockin_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"clockout_location_id":{"type":"string","x-readOnly":true},"clockout_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"employee_id":{"type":"string","x-readOnly":true}},"required":["employee_id"],"x-has-customfields":false,"x-vendor-objectname":"timecards","type":"object"},"paymentsGetAllCard_detailsErrors":{"properties":{"category":{"type":"string","x-samplevalue":"PAYMENT_METHOD_ERROR"},"code":{"type":"string","x-samplevalue":"PAN_FAILURE"},"detail":{"type":"string","x-samplevalue":"Authorization error: 'PAN_FAILURE'"}},"title":"errors","type":"object"},"BulkUploadResponse":{"description":"BulkLoad response of bulk download.","properties":{"id":{"description":"Id of the bulk job","type":"string"},"instanceId":{"description":"Instance Id of the bulk job","format":"int64","type":"integer"},"status":{"description":"Status of the bulk job","type":"string"}},"type":"object"},"paymentsCreateApp_fee_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"app_fee_money","type":"object"},"swaggerparameters":{"x-has-customfields":false,"title":"parameters","properties":{"schema":{"$ref":"#/definitions/swaggerparametersschema"},"in":{"x-samplevalue":"header","type":"string"},"name":{"x-samplevalue":"Authorization","type":"string"},"description":{"x-samplevalue":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string"},"type":{"x-samplevalue":"string","type":"string"},"required":{"x-samplevalue":true,"type":"boolean"}},"type":"object"},"gross_sales_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"tendered_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsListNet_sales_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"LaboutShiftsGetByIdRespWageHourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":1100},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"hourly_rate","type":"object"},"customersSearchGetAllAddress":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"title":"address","type":"object"},"paymentsGetAllCard_details":{"properties":{"avs_status":{"type":"string","x-samplevalue":"AVS_NOT_CHECKED"},"card":{"$ref":"#/definitions/paymentsGetAllCard_detailsCard"},"cvv_status":{"type":"string","x-samplevalue":"CVV_NOT_CHECKED"},"entry_method":{"type":"string","x-samplevalue":"KEYED"},"errors":{"items":{"$ref":"#/definitions/paymentsGetAllCard_detailsErrors"},"type":"array"},"statement_description":{"type":"string","x-samplevalue":"SQ *CLOUD ELEMENTS"},"status":{"type":"string","x-samplevalue":"FAILED"}},"title":"card_details","type":"object"},"swagger200":{"x-has-customfields":false,"type":"object","title":"200","properties":{"schema":{"$ref":"#/definitions/swaggerschema"},"description":{"x-samplevalue":"OK - Everything worked as expected","type":"string"}}},"paymentsCompleteRespAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"LaborShiftsUpdateResp":{"properties":{"breaks":{"items":{"$ref":"#/definitions/LaborShiftsUpdateRespBreaks"},"type":"array"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"employee_id":{"type":"string","x-samplevalue":"ormj0jJJZ5OZIzxrZYJI"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T13:11:00-05:00"},"id":{"type":"string","x-samplevalue":"K0YH4CV5462JB"},"location_id":{"type":"string","x-samplevalue":"PAA1RJZZKXBFG"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T03:11:00-05:00"},"status":{"type":"string","x-samplevalue":"CLOSED"},"timezone":{"type":"string","x-samplevalue":"America/New_York"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1},"wage":{"$ref":"#/definitions/LaborShiftsUpdateRespWage"}},"title":"LaborShiftsUpdateResp","x-primary-key":["id"],"x-vendor-objectname":"shifts","type":"object"},"cardBillibg_address":{"properties":{"address_line_1":{"type":"string"},"address_line_2":{"type":"string"},"address_line_3":{"type":"string"},"administrative_district_level_1":{"type":"string"},"administrative_district_level_2":{"type":"string"},"administrative_district_level_3":{"type":"string"},"country":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"locality":{"type":"string"},"organization":{"type":"string"},"postal_code":{"type":"string"},"sublocality":{"type":"string"},"sublocality_2":{"type":"string"},"sublocality_3":{"type":"string"}},"type":"object"},"rolesListObject":{"properties":{"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"id":{"type":"string"},"is_owner":{"type":"boolean"},"name":{"type":"string"},"permissions":{"items":{"type":"string"},"type":"array"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-searchable-joins":["and"],"x-vendor-objectname":"roles","type":"object"},"LaboutBreakTypesGetByIdResp":{"properties":{"break_name":{"type":"string","x-samplevalue":"Lunch Break"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"expected_duration":{"type":"string","x-samplevalue":"PT30M"},"id":{"type":"string","x-samplevalue":"49SSVDJG76WF3"},"is_paid":{"type":"boolean","x-samplevalue":true},"location_id":{"type":"string","x-samplevalue":"CGJN03P1D08GF"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"LaboutBreakTypesGetByIdResp","x-primary-key":["id"],"x-vendor-objectname":"break-types","type":"object"},"itemizationsDiscount_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsCreateShipping_address":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"title":"shipping_address","type":"object"},"employeePOST":{"properties":{"authorized_location_ids":{"items":{"type":"string","x-readOnly":true},"type":"array"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"email":{"type":"string"},"first_name":{"type":"string"},"id":{"type":"string","x-readOnly":true},"last_name":{"type":"string"},"role_ids":{"items":{"type":"string","x-readOnly":true},"type":"array"},"status":{"type":"string"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"employees","type":"object"},"locationsByIdAddress":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"title":"address","type":"object"},"refunded_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"additive_tax_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"tax_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsCreateRespApp_fee_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"app_fee_money","type":"object"},"locationsTransactionsListTendersCard_details":{"properties":{"card":{"$ref":"#/definitions/locationsTransactionsListTendersCard_detailsCard"},"entry_method":{"type":"string","x-displayName":"Entry Method","x-samplevalue":"KEYED"},"status":{"type":"string","x-displayName":"Status","x-samplevalue":"CAPTURED"}},"title":"card_details","type":"object"},"refundsAdditional_recipientsAmount_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency":{"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD"],"type":"string"}},"type":"object"},"tendershipping_address":{"properties":{"address_line_1":{"type":"string"},"address_line_2":{"type":"string"},"address_line_3":{"type":"string"},"administrative_district_level_1":{"type":"string"},"administrative_district_level_2":{"type":"string"},"administrative_district_level_3":{"type":"string"},"country":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"locality":{"type":"string"},"organization":{"type":"string"},"postal_code":{"type":"string"},"sublocality":{"type":"string"},"sublocality_2":{"type":"string"},"sublocality_3":{"type":"string"}},"type":"object"},"swagger415":{"x-has-customfields":false,"type":"object","title":"415","properties":{"description":{"x-samplevalue":"Unsupported media type - The server cannot handle the requested Content-Type","type":"string"}}},"paymentsCreateRespAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"LaborShiftsListBreaks":{"properties":{"break_type_id":{"type":"string","x-samplevalue":"REGS1EQR1TPZ5"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:16:00-05:00"},"expected_duration":{"type":"string","x-samplevalue":"PT5M"},"id":{"type":"string","x-samplevalue":"X7GAQYVVRRG6P"},"is_paid":{"type":"boolean","x-samplevalue":true},"name":{"type":"string","x-samplevalue":"Tea Break"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:11:00-05:00"}},"title":"breaks","type":"object"},"locationsTransactionsListTenders":{"properties":{"amount_money":{"$ref":"#/definitions/locationsTransactionsListTendersAmount_money"},"card_details":{"$ref":"#/definitions/locationsTransactionsListTendersCard_details"},"created_at":{"format":"date-time","type":"string","x-displayName":"Created At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2020-10-28T16:41:35Z"},"customer_id":{"type":"string","x-displayName":"Customer Id","x-samplevalue":"2GHRCDGYSS5275AWTWQQ49RH9R"},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"p69PJigukEcQlFmISz0FTFT8bvKZY"},"location_id":{"type":"string","x-displayName":"Location Id","x-samplevalue":"8VS980RTKKPK2"},"processing_fee_money":{"$ref":"#/definitions/locationsTransactionsListTendersProcessing_fee_money"},"transaction_id":{"type":"string","x-displayName":"Transaction Id","x-samplevalue":"gSqCvWphkZkkcNZFLUdmwa1GcMCZY"},"type":{"type":"string","x-displayName":"Type","x-samplevalue":"CARD"}},"title":"tenders","type":"object"},"paymentsGetAllObject":{"properties":{"amount_money":{"$ref":"#/definitions/paymentsGetAllAmount_money"},"card_details":{"$ref":"#/definitions/paymentsGetAllCard_details"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-10-08T05:35:15.381Z","x-searchable":true,"x-searchable-operators":["="]},"employee_id":{"type":"string","x-samplevalue":"APP5JTYW917TW"},"id":{"type":"string","x-samplevalue":"gNHLHZrKUE4cVPBvK7PuEtMF"},"location_id":{"type":"string","x-samplevalue":"APP5JTYW917TW","x-searchable":true,"x-searchable-operators":["="]},"order_id":{"type":"string","x-samplevalue":"0pLZi0woLiVmEss2zO8CazMF"},"source_type":{"type":"string","x-samplevalue":"CARD"},"status":{"type":"string","x-samplevalue":"FAILED"},"total_money":{"$ref":"#/definitions/paymentsGetAllTotal_money"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-10-08T05:35:15.442Z"}},"title":"paymentsGetAll","type":"object","x-primary-key":["id"],"x-searchable-joins":["and"],"x-vendor-objectname":"payments"},"locationsTransactionsCapture":{"properties":{"message":{"type":"string","x-samplevalue":"The request was successful."}},"title":"locationsTransactionsCapture","type":"object"},"timesheetsPOST":{"properties":{"clockin_location_id":{"type":"string","x-readOnly":true},"clockin_time":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"deleted":{"type":"boolean"},"doubletime_seconds_worked":{"format":"int32","type":"integer"},"employee_id":{"type":"string","x-readOnly":true},"id":{"type":"string","x-readOnly":true},"overtime_seconds_worked":{"format":"int32","type":"integer"},"regular_seconds_worked":{"format":"int32","type":"integer"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"timecards","type":"object"},"swaggerinfo":{"x-has-customfields":false,"type":"object","title":"info","properties":{"contact":{"$ref":"#/definitions/swaggercontact"},"title":{"x-samplevalue":"hubspotcrm","type":"string"},"version":{"x-samplevalue":"api-v2","type":"string"}}},"tendercash_details":{"properties":{"buyer_tendered_money":{"$ref":"#/definitions/amount_money"},"change_back_money":{"$ref":"#/definitions/amount_money"}},"type":"object"},"itemizationsGross_sales_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"timesheetsUpdate":{"properties":{"clockin_location_id":{"type":"string","x-readOnly":true},"clockin_time":{"description":"either clockin_time or clockout_time required","format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"clockout_location_id":{"type":"string","x-readOnly":true},"clockout_time":{"description":"either clockin_time or clockout_time required","format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-conditional-required":["clockin_time","clockout_time"],"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"timecards","type":"object"},"change_back_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"locationsUpdateAddress":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"title":"address","type":"object"},"tenders":{"properties":{"additional_recipients":{"items":{"$ref":"#/definitions/additional_recipients"},"type":"array"},"amount_money":{"$ref":"#/definitions/amount_money"},"card_details":{"$ref":"#/definitions/card_details"},"cash_details":{"$ref":"#/definitions/tendercash_details"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"customer_id":{"type":"string"},"id":{"type":"string","x-readOnly":true},"location_id":{"type":"string"},"note":{"type":"string"},"processing_fee_money":{"$ref":"#/definitions/processing_fee_money"},"tip_money":{"$ref":"#/definitions/amount_money"},"transaction_id":{"type":"string","x-readOnly":true},"type":{"type":"string"}},"type":"object"},"swaggerpost":{"x-has-customfields":false,"type":"object","title":"post","properties":{"summary":{"x-samplevalue":"Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.","type":"string"},"operationId":{"x-samplevalue":"createContact","type":"string"},"responses":{"$ref":"#/definitions/swaggerresponses"},"parameters":{"type":"array","items":{"$ref":"#/definitions/swaggerparameters"}},"tags":{"x-samplevalue":["contacts"],"type":"array","items":{"type":"string"}}}},"itemizationsTotal_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsCreateResp":{"properties":{"amount_money":{"$ref":"#/definitions/paymentsCreateRespAmount_money"},"app_fee_money":{"$ref":"#/definitions/paymentsCreateRespApp_fee_money"},"card_details":{"$ref":"#/definitions/paymentsCreateRespCard_details"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-07-10T13:23:49.154Z"},"customer_id":{"type":"string","x-samplevalue":"VDKXEEKPJN48QDG3BGGFAK05P8"},"id":{"type":"string","x-samplevalue":"iqrBxAil6rmDtr7cak9g9WO8uaB"},"location_id":{"type":"string","x-samplevalue":"XK3DBG77NJBFX"},"note":{"type":"string","x-samplevalue":"Brief description"},"order_id":{"type":"string","x-samplevalue":"qHkNOb03hMgEgoP3gyzFBDY3cg4F"},"reference_id":{"type":"string","x-samplevalue":"123456"},"source_type":{"type":"string","x-samplevalue":"CARD"},"status":{"type":"string","x-samplevalue":"COMPLETED"},"total_money":{"$ref":"#/definitions/paymentsCreateRespTotal_money"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-07-10T13:23:49.446Z"}},"title":"paymentsCreateResp","x-primary-key":["id"],"x-vendor-objectname":"payments","type":"object"},"LaborBreakTypeUpdate":{"properties":{"break_name":{"type":"string","x-samplevalue":"Lunch Break"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"expected_duration":{"type":"string","x-samplevalue":"PT30M"},"id":{"type":"string","x-samplevalue":"49SSVDJG76WF3"},"is_paid":{"type":"boolean","x-samplevalue":true},"location_id":{"type":"string","x-samplevalue":"CGJN03P1D08GF"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1}},"required":["break_name","expected_duration","is_paid","location_id"],"title":"LaborBreakTypeUpdate","x-primary-key":["id"],"x-vendor-objectname":"break-types","type":"object"},"LaboutShiftsGetByIdResp":{"properties":{"breaks":{"items":{"$ref":"#/definitions/LaboutShiftsGetByIdRespBreaks"},"type":"array"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"employee_id":{"type":"string","x-samplevalue":"ormj0jJJZ5OZIzxrZYJI"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T13:11:00-05:00"},"id":{"type":"string","x-samplevalue":"K0YH4CV5462JB"},"location_id":{"type":"string","x-samplevalue":"PAA1RJZZKXBFG"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T03:11:00-05:00"},"status":{"type":"string","x-samplevalue":"CLOSED"},"timezone":{"type":"string","x-samplevalue":"America/New_York"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1},"wage":{"$ref":"#/definitions/LaboutShiftsGetByIdRespWage"}},"title":"LaboutShiftsGetByIdResp","x-primary-key":["id"],"x-vendor-objectname":"shifts","type":"object"},"LaborhiftPostRespBreaks":{"properties":{"break_type_id":{"type":"string","x-samplevalue":"REGS1EQR1TPZ5"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:16:00-05:00"},"expected_duration":{"type":"string","x-samplevalue":"PT5M"},"id":{"type":"string","x-samplevalue":"X7GAQYVVRRG6P"},"is_paid":{"type":"boolean","x-samplevalue":true},"name":{"type":"string","x-samplevalue":"Tea Break"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:11:00-05:00"}},"title":"breaks","type":"object"},"paymentsGetAllCard_detailsCard":{"properties":{"bin":{"type":"string","x-samplevalue":"411111"},"card_brand":{"type":"string","x-samplevalue":"VISA"},"exp_month":{"format":"int32","type":"integer","x-samplevalue":12},"exp_year":{"format":"int32","type":"integer","x-samplevalue":2021},"fingerprint":{"type":"string","x-samplevalue":"sq-1-YGsipMInd8_3iLPYIkh0WfBWsIu5b3_5HO4HB52--J4-jVYfggx4aeAB2S21_PzQJw"},"last_4":{"type":"string","x-samplevalue":"1111"}},"title":"card","type":"object"},"swaggerdefinitions":{"x-has-customfields":false,"type":"object","title":"definitions","properties":{"definition-name":{"$ref":"#/definitions/swaggerdefinition-name"}}},"LaborhiftPostRespWageHourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":1100},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"hourly_rate","type":"object"},"paymentsListRefunded_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"swaggerdefinition-name":{"x-has-customfields":false,"type":"object","title":"definition-name","properties":{"properties":{"$ref":"#/definitions/swaggerproperties"}}},"LaborShiftsUpdateWage":{"properties":{"hourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":0},"currency":{"type":"string","x-samplevalue":"string"}},"$ref":"#/definitions/LaborShiftsUpdateWageHourly_rate"},"title":{"type":"string","x-samplevalue":"string"}},"title":"wage","type":"object"},"LaborhiftPostRespWage":{"properties":{"hourly_rate":{"$ref":"#/definitions/LaborhiftPostRespWageHourly_rate"},"title":{"type":"string","x-samplevalue":"Barista"}},"title":"wage","type":"object"},"swagger-contacts-path":{"x-has-customfields":false,"type":"object","title":"/contacts","properties":{"post":{"$ref":"#/definitions/swaggerpost"}}},"additional_recipients":{"properties":{"amount_money":{"$ref":"#/definitions/additional_recipientsAmount_money"},"description":{"type":"string"},"location_id":{"type":"string"},"receivable_id":{"type":"string"}},"type":"object"},"employeesGetallListObject":{"properties":{"created_at":{"format":"date-time","type":"string","x-displayName":"Created At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-10-08T05:39:10Z"},"email":{"type":"string","x-displayName":"Email","x-samplevalue":"sandbox-merchant+cppubzev25zzcy3rd9hcfqegwu61amwt@squareup.com"},"first_name":{"type":"string","x-displayName":"First Name","x-samplevalue":"Kailyn"},"id":{"type":"string","x-displayName":"Id","x-samplevalue":"IzUQx3y_Bl1ixNumrkPe"},"is_owner":{"type":"boolean","x-displayName":"Is Owner","x-samplevalue":true},"last_name":{"type":"string","x-displayName":"Last Name","x-samplevalue":"Cormier"},"location_ids":{"items":{"type":"string"},"type":"array","x-samplevalue":["8VS980RTKKPK2"]},"status":{"type":"string","x-displayName":"Status","x-samplevalue":"ACTIVE"},"updated_at":{"format":"date-time","type":"string","x-displayName":"Updated At","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-10-08T05:39:10Z"}},"title":"employeesGetallList","type":"object"},"card_details":{"properties":{"card":{"$ref":"#/definitions/card"},"entry_method":{"type":"string"},"status":{"type":"string"}},"type":"object"},"paymentsCreateRespTotal_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"total_money","type":"object"},"paymentsCreate":{"properties":{"accept_partial_authorization":{"type":"boolean","x-samplevalue":false},"amount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"$ref":"#/definitions/paymentsCreateAmount_money"},"app_fee_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"$ref":"#/definitions/paymentsCreateApp_fee_money"},"autocomplete":{"type":"boolean","x-samplevalue":true},"billing_address":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"$ref":"#/definitions/paymentsCreateBilling_address"},"buyer_email_address":{"type":"string","x-samplevalue":"satish@gmail.com","x-sub-format":"email"},"customer_id":{"type":"string","x-samplevalue":"VDKXEEKPJN48QDG3BGGFAK05P8"},"idempotency_key":{"type":"string","x-samplevalue":"4935a656-a929-4792-b97c-8848be85c27c"},"location_id":{"type":"string","x-samplevalue":"XK3DBG77NJBFX"},"note":{"type":"string","x-samplevalue":"Brief description"},"order_id":{"type":"string","x-samplevalue":"1wq23455"},"reference_id":{"type":"string","x-samplevalue":"123456"},"shipping_address":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"$ref":"#/definitions/paymentsCreateShipping_address"},"source_id":{"type":"string","x-samplevalue":"ccof:uIbfJXhXETSP197M3GB"},"tip_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":10},"currency":{"type":"string","x-samplevalue":"USD"}},"$ref":"#/definitions/paymentsCreateTip_money"},"verification_token":{"type":"string","x-samplevalue":"ytjhjhkjhjyu876876"}},"required":["amount_money","idempotency_key","source_id"],"title":"paymentsCreate","type":"object"},"swaggerDocs":{"x-has-customfields":false,"title":"swaggerDocs","properties":{"basePath":{"x-samplevalue":"/elements/api-v2/hubs/crm","type":"string"},"paths":{"$ref":"#/definitions/swaggerpaths"},"host":{"x-samplevalue":"localhost:5050","type":"string"},"schemes":{"x-samplevalue":["http"],"type":"array","items":{"type":"string"}},"definitions":{"$ref":"#/definitions/swaggerdefinitions"},"swagger":{"x-samplevalue":"2.0","type":"string"},"info":{"$ref":"#/definitions/swaggerinfo"},"tags":{"type":"array","items":{"$ref":"#/definitions/swaggertags"}}},"type":"object"},"net_total_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"timesheets":{"properties":{},"type":"object"},"paymentsCancelRespCard_detailsCard":{"properties":{"card_brand":{"type":"string","x-samplevalue":"VISA"},"exp_month":{"format":"int32","type":"integer","x-samplevalue":2},"exp_year":{"format":"int32","type":"integer","x-samplevalue":2024},"fingerprint":{"type":"string","x-samplevalue":"sq-1-9PP0tWfcM6vIsYmfsesdjfhduHSDFNdJFNDfDNFjdfjpseirDErsaP"},"last_4":{"type":"string","x-samplevalue":"1234"}},"title":"card","type":"object"},"Object":{"description":"Fields for the object. There will be fields associated with an Object, which are not all described here.","properties":{"objectField":{"type":"string"}},"type":"object"},"laborShiftsCreateWageHourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":0},"currency":{"type":"string","x-samplevalue":"string"}},"title":"hourly_rate","type":"object"},"card":{"properties":{"billing_address":{"$ref":"#/definitions/cardBillibg_address"},"card_brand":{"type":"string"},"cardholder_name":{"type":"string"},"exp_month":{"enum":[1,2,3,4,5,6,7,8,9,10,11,12],"type":"integer"},"exp_year":{"type":"integer"},"fingerprint":{"type":"string"},"id":{"type":"string"},"last_4":{"type":"string"}},"type":"object"},"refundsAmount_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency":{"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD"],"type":"string"}},"type":"object"},"customerCreate":{"properties":{"address":{"properties":{"address_line_1":{"description":"Fields that start with address_line provide the address's most specific details, like street number, street name, and building name. They do not provide less specific details like city, state/province, or country (these details are provided in other fields).","type":"string","x-samplevalue":"15950 Bent Tree"},"address_line_2":{"description":"The second line of the address, if any.","type":"string","x-samplevalue":"Forest Circle"},"address_line_3":{"description":"The third line of the address, if any.","type":"string","x-samplevalue":"Apt #2020"},"administrative_district_level_1":{"description":"A civil entity within the address's country. In the US, this is the state.","type":"string","x-samplevalue":"TX"},"administrative_district_level_2":{"description":"A civil entity within the address's administrative_district_level_1. In the US, this is the county.","type":"string","x-samplevalue":"TX"},"administrative_district_level_3":{"description":"A civil entity within the address's administrative_district_level_2, if any.","type":"string","x-samplevalue":"TX"},"country":{"description":"The address's country, in ISO 3166-1-alpha-2 format.","type":"string","x-samplevalue":"US"},"first_name":{"type":"string","x-samplevalue":"Naga Seshu Babu"},"last_name":{"type":"string","x-samplevalue":"Ede"},"locality":{"description":"The city or town of the address.","type":"string","x-samplevalue":"Dallas"},"organization":{"description":"Optional organization name when it's representing recipient.","type":"string","x-samplevalue":"Cloud Elements"},"postal_code":{"type":"string","x-samplevalue":"10003"},"sublocality":{"description":"A civil region within the address's locality, if any.","type":"string","x-samplevalue":"Dallas"},"sublocality_2":{"description":"A civil region within the address's sublocality, if any.","type":"string","x-samplevalue":"Dallas"},"sublocality_3":{"description":"A civil region within the address's sublocality_2, if any.","type":"string","x-samplevalue":"Dallas"}},"$ref":"#/definitions/address"},"company_name":{"description":"The customer's phone number.","type":"string","x-samplevalue":"Cloud Elements"},"email_address":{"description":"The customer's email address.","type":"string","x-samplevalue":"naga.ede@cloudelements.com"},"family_name":{"description":"The customer's family (i.e., last) name.","type":"string","x-samplevalue":"Ede"},"given_name":{"description":"The customer's given (i.e., first) name.","type":"string","x-samplevalue":"Naga Seshu Babu"},"nickname":{"type":"string","x-samplevalue":"Bangaro"},"note":{"type":"string","x-samplevalue":"A Customer"},"phone_number":{"description":"The customer's phone number.","type":"string","x-samplevalue":"1-111-111-1111"},"reference_id":{"description":"An optional second ID you can set to associate the customer with an entity in another system.","type":"string","x-samplevalue":"NAGA_CLOUD_ELEMENTS"}},"required":["given_name","family_name","company_name","email_address","phone_number"],"title":"customerCreate","x-conditional-required":["You must provide at least one of the following values in your request to this endpoint: given_name, family_name, company_name, email_address, phone_number"],"x-has-customfields":false,"x-vendor-objectname":"customers","type":"object"},"LaboutBreakTypesPostResp":{"properties":{"break_name":{"type":"string","x-samplevalue":"Lunch Break"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"expected_duration":{"type":"string","x-samplevalue":"PT30M"},"id":{"type":"string","x-samplevalue":"49SSVDJG76WF3"},"is_paid":{"type":"boolean","x-samplevalue":true},"location_id":{"type":"string","x-samplevalue":"CGJN03P1D08GF"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1}},"title":"LaboutBreakTypesPostResp","x-primary-key":["id"],"x-vendor-objectname":"break-types","type":"object"},"locationsUpdateRespAddress":{"properties":{"address_line_1":{"type":"string","x-samplevalue":"string"},"address_line_2":{"type":"string","x-samplevalue":"string"},"address_line_3":{"type":"string","x-samplevalue":"string"},"administrative_district_level_1":{"type":"string","x-samplevalue":"string"},"administrative_district_level_2":{"type":"string","x-samplevalue":"string"},"administrative_district_level_3":{"type":"string","x-samplevalue":"string"},"country":{"type":"string","x-samplevalue":"string"},"first_name":{"type":"string","x-samplevalue":"string"},"last_name":{"type":"string","x-samplevalue":"string"},"locality":{"type":"string","x-samplevalue":"string"},"organization":{"type":"string","x-samplevalue":"string"},"postal_code":{"type":"string","x-samplevalue":"string"},"sublocality":{"type":"string","x-samplevalue":"string"},"sublocality_2":{"type":"string","x-samplevalue":"string"},"sublocality_3":{"type":"string","x-samplevalue":"string"}},"title":"address","type":"object"},"roleUpdate":{"description":"Make a note we can not update the permissions for owner","properties":{"is_owner":{"type":"boolean"},"name":{"type":"string"},"permissions":{"items":{"type":"string"},"type":"array"}},"x-has-customfields":false,"x-vendor-objectname":"roles","type":"object"},"BulkQuery":{"description":"BulkLoad response of bulk download.","properties":{"id":{"description":"Id of the bulk job","type":"number"},"status":{"description":"Status of the bulk job","type":"string"}},"type":"object"},"customersListGroups":{"properties":{"id":{"type":"string","x-displayName":"Id","x-samplevalue":"6XG4E1SMM2620.REACHABLE"},"name":{"type":"string","x-displayName":"Name","x-samplevalue":"Reachable"}},"title":"groups","type":"object"},"refunds":{"properties":{"additional_recipients":{"items":{"$ref":"#/definitions/refundsAdditional_recipients"},"type":"array"},"amount_money":{"$ref":"#/definitions/refundsAmount_money"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"id":{"type":"string","x-readOnly":true},"location_id":{"type":"string","x-readOnly":true},"processing_fee_money":{"$ref":"#/definitions/refundsProcessing_fee_money"},"reason":{"type":"string"},"status":{"type":"string"},"tender_id":{"type":"string","x-readOnly":true},"transaction_id":{"type":"string"}},"type":"object"},"paymentsByIdCard_details":{"properties":{"avs_status":{"type":"string","x-samplevalue":"AVS_NOT_CHECKED"},"card":{"$ref":"#/definitions/paymentsByIdCard_detailsCard"},"cvv_status":{"type":"string","x-samplevalue":"CVV_NOT_CHECKED"},"entry_method":{"type":"string","x-samplevalue":"KEYED"},"errors":{"items":{"$ref":"#/definitions/paymentsByIdCard_detailsErrors"},"type":"array"},"statement_description":{"type":"string","x-samplevalue":"SQ *CLOUD ELEMENTS"},"status":{"type":"string","x-samplevalue":"FAILED"}},"title":"card_details","type":"object"},"employeeById":{"properties":{"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2017-09-15T19:58:11Z"},"email":{"type":"string","x-samplevalue":"developer@cloud-elements.com"},"first_name":{"type":"string","x-samplevalue":"Kelly"},"id":{"type":"string","x-samplevalue":"APP5JTYW917TW"},"last_name":{"type":"string","x-samplevalue":"Gold"},"location_ids":{"items":{"type":"string"},"type":"array","x-samplevalue":["413B1QHPRKQA3","69G11785FBBSK","PJJHZGAFAY4VN","0K4Q7TKSJ01SA","APP5JTYW917TW"]},"status":{"type":"string","x-samplevalue":"ACTIVE"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2017-09-19T19:11:18Z"}},"title":"employeeById","x-primary-key":["id"],"x-vendor-objectname":"employees","type":"object"},"paymentsByIdCard_detailsErrors":{"properties":{"category":{"type":"string","x-samplevalue":"PAYMENT_METHOD_ERROR"},"code":{"type":"string","x-samplevalue":"PAN_FAILURE"},"detail":{"type":"string","x-samplevalue":"Authorization error: 'PAN_FAILURE'"}},"title":"errors","type":"object"},"paymentsCompleteResp":{"properties":{"amount_money":{"$ref":"#/definitions/paymentsCompleteRespAmount_money"},"app_fee_money":{"$ref":"#/definitions/paymentsCompleteRespApp_fee_money"},"card_details":{"$ref":"#/definitions/paymentsCompleteRespCard_details"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-07-10T13:39:55.317Z"},"customer_id":{"type":"string","x-samplevalue":"VDKXEEKPJN48QDG3BGGFAK05P8"},"id":{"type":"string","x-samplevalue":"EdMl5lwmBxd3ZvsvinkAT5LtvaB"},"location_id":{"type":"string","x-samplevalue":"XK3DBG77NJBFX"},"note":{"type":"string","x-samplevalue":"Brief description"},"order_id":{"type":"string","x-samplevalue":"iJbzEHMhcwydeLbN3Apg5ZAjGi4F"},"reference_id":{"type":"string","x-samplevalue":"123456"},"source_type":{"type":"string","x-samplevalue":"CARD"},"status":{"type":"string","x-samplevalue":"COMPLETED"},"total_money":{"$ref":"#/definitions/paymentsCompleteRespTotal_money"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-07-10T13:40:05.982Z"}},"title":"paymentsCompleteResp","x-primary-key":["id"],"x-vendor-objectname":"payments","type":"object"},"paymentsCancelRespCard_details":{"properties":{"auth_result_code":{"type":"string","x-samplevalue":"eWZBDh"},"avs_status":{"type":"string","x-samplevalue":"AVS_ACCEPTED"},"card":{"$ref":"#/definitions/paymentsCancelRespCard_detailsCard"},"cvv_status":{"type":"string","x-samplevalue":"CVV_ACCEPTED"},"entry_method":{"type":"string","x-samplevalue":"KEYED"},"status":{"type":"string","x-samplevalue":"VOIDED"}},"title":"card_details","type":"object"},"tender":{"properties":{"card_brand":{"type":"string"},"entry_method":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"pan_suffix":{"type":"string"},"receipt_url":{"type":"string"},"refunded_money":{"$ref":"#/definitions/refunded_money"},"total_money":{"$ref":"#/definitions/total_money"},"type":{"type":"string"}},"type":"object"},"LaborShiftsListWageHourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":1100},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"hourly_rate","type":"object"},"locationsPayments":{"properties":{"additive_tax_money":{"$ref":"#/definitions/additive_tax_money"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"creator_id":{"type":"string"},"discount_money":{"$ref":"#/definitions/discount_money"},"gross_sales_money":{"$ref":"#/definitions/locationsPaymentsGross_sales_money"},"id":{"type":"string","x-readOnly":true},"inclusive_tax_money":{"$ref":"#/definitions/inclusive_tax_money"},"itemizations":{"items":{"$ref":"#/definitions/itemizations"},"type":"array"},"merchant_id":{"type":"string"},"net_sales_money":{"$ref":"#/definitions/locationsPaymentsNet_sales_money"},"net_total_money":{"$ref":"#/definitions/net_total_money"},"payment_url":{"type":"string"},"processing_fee_money":{"$ref":"#/definitions/processing_fee_money"},"receipt_url":{"type":"string"},"refunded_money":{"$ref":"#/definitions/locationsPaymentsRefunded_money"},"swedish_rounding_money":{"$ref":"#/definitions/swedish_rounding_money"},"tax_money":{"$ref":"#/definitions/tax_money"},"tender":{"items":{"$ref":"#/definitions/tender"},"type":"array"},"tip_money":{"$ref":"#/definitions/tip_money"},"total_collected_money":{"$ref":"#/definitions/total_collected_money"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"payments","type":"object"},"objectsMetadataFields":{"properties":{"mask":{"type":"string"},"type":{"type":"string"},"vendorDisplayName":{"type":"string"},"vendorPath":{"type":"string"},"vendorReadOnly":{"type":"boolean"},"vendorRequired":{"type":"boolean"}},"type":"object"},"processing_fee_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency":{"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD"],"type":"string"}},"type":"object"},"employeeCreate":{"properties":{"email":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"role_ids":{"items":{"type":"string"},"type":"array"}},"required":["last_name","first_name"],"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"employees","type":"object"},"timesheetsListObject":{"properties":{"clockin_location_id":{"type":"string","x-readOnly":true},"clockin_time":{"format":"date-time","type":"string","x-searchable":true,"x-searchable-operators":["="],"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"clockout_location_id":{"type":"string"},"clockout_time":{"format":"date-time","type":"string","x-searchable":true,"x-searchable-operators":["="],"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"deleted":{"type":"boolean"},"doubletime_seconds_worked":{"format":"int32","type":"integer"},"employee_id":{"type":"string","x-readOnly":true,"x-searchable":true,"x-searchable-operators":["="]},"id":{"type":"string","x-readOnly":true},"overtime_seconds_worked":{"format":"int32","type":"integer"},"regular_seconds_worked":{"format":"int32","type":"integer"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-searchable-joins":["and"],"x-vendor-objectname":"timecards","type":"object"},"tip_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsCompleteRespTotal_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"total_money","type":"object"},"LaborShiftsUpdate":{"properties":{"breaks":{"items":{"$ref":"#/definitions/LaborShiftsUpdateBreaks"},"type":"array"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"employee_id":{"type":"string","x-samplevalue":"string"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"id":{"type":"string","x-samplevalue":"string"},"location_id":{"type":"string","x-samplevalue":"string"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"status":{"type":"string","x-samplevalue":"string"},"timezone":{"type":"string","x-samplevalue":"string"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"version":{"format":"int32","type":"integer","x-samplevalue":0},"wage":{"$ref":"#/definitions/LaborShiftsUpdateWage"}},"required":["start_at","employee_id"],"title":"LaborShiftsUpdate","x-primary-key":["id"],"x-vendor-objectname":"shifts","type":"object"},"LaboutShiftsGetByIdRespBreaks":{"properties":{"break_type_id":{"type":"string","x-samplevalue":"REGS1EQR1TPZ5"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:16:00-05:00"},"expected_duration":{"type":"string","x-samplevalue":"PT5M"},"id":{"type":"string","x-samplevalue":"X7GAQYVVRRG6P"},"is_paid":{"type":"boolean","x-samplevalue":true},"name":{"type":"string","x-samplevalue":"Tea Break"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:11:00-05:00"}},"title":"breaks","type":"object"},"locationsByIdCoordinates":{"properties":{"latitude":{"format":"int32","type":"integer","x-samplevalue":0},"longitude":{"format":"int32","type":"integer","x-samplevalue":0}},"title":"coordinates","type":"object"},"swaggertags":{"x-has-customfields":false,"title":"tags","properties":{"name":{"x-samplevalue":"contacts","type":"string"}},"type":"object"},"transaction":{"properties":{"client_id":{"type":"string"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"id":{"type":"string","x-readOnly":true},"location_id":{"type":"string","x-readOnly":true},"order_id":{"type":"string"},"product":{"type":"string"},"reference_id":{"type":"string"},"refunds":{"items":{"$ref":"#/definitions/refunds"},"type":"array"},"shipping_address":{"$ref":"#/definitions/tendershipping_address"},"tenders":{"items":{"$ref":"#/definitions/tenders"},"type":"array"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"transactions","type":"object"},"transactionDelete":{"properties":{"locationId":{"type":"string"},"status":{"type":"string"},"transactionId":{"type":"string"}},"type":"object"},"paymentsGetAllAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":20000},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"paymentsCancelResp":{"properties":{"amount_money":{"$ref":"#/definitions/paymentsCancelRespAmount_money"},"app_fee_money":{"$ref":"#/definitions/paymentsCancelRespApp_fee_money"},"card_details":{"$ref":"#/definitions/paymentsCancelRespCard_details"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2018-10-17T20:38:46.743Z"},"id":{"type":"string","x-samplevalue":"YNR82sYrdgYlEEvJHnkJ7jrRuaB"},"reference_id":{"type":"string","x-samplevalue":"12323232323"},"source_type":{"type":"string","x-samplevalue":"CARD"},"status":{"type":"string","x-samplevalue":"CANCELED"},"total_money":{"$ref":"#/definitions/paymentsCancelRespTotal_money"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2018-10-17T20:38:57.693Z"}},"title":"paymentsCancelResp","x-primary-key":["id"],"x-vendor-objectname":"payments","type":"object"},"customerUpdate":{"properties":{"address":{"properties":{"address_line_1":{"description":"Fields that start with address_line provide the address's most specific details, like street number, street name, and building name. They do not provide less specific details like city, state/province, or country (these details are provided in other fields).","type":"string","x-samplevalue":"15950 Bent Tree"},"address_line_2":{"description":"The second line of the address, if any.","type":"string","x-samplevalue":"Forest Circle"},"address_line_3":{"description":"The third line of the address, if any.","type":"string","x-samplevalue":"Apt #2020"},"administrative_district_level_1":{"description":"A civil entity within the address's country. In the US, this is the state.","type":"string","x-samplevalue":"TX"},"administrative_district_level_2":{"description":"A civil entity within the address's administrative_district_level_1. In the US, this is the county.","type":"string","x-samplevalue":"TX"},"administrative_district_level_3":{"description":"A civil entity within the address's administrative_district_level_2, if any.","type":"string","x-samplevalue":"TX"},"country":{"description":"The address's country, in ISO 3166-1-alpha-2 format.","type":"string","x-samplevalue":"US"},"first_name":{"type":"string","x-samplevalue":"Naga Seshu Babu"},"last_name":{"type":"string","x-samplevalue":"Ede"},"locality":{"description":"The city or town of the address.","type":"string","x-samplevalue":"Dallas"},"organization":{"description":"Optional organization name when it's representing recipient.","type":"string","x-samplevalue":"Cloud Elements"},"postal_code":{"type":"string","x-samplevalue":"10003"},"sublocality":{"description":"A civil region within the address's locality, if any.","type":"string","x-samplevalue":"Dallas"},"sublocality_2":{"description":"A civil region within the address's sublocality, if any.","type":"string","x-samplevalue":"Dallas"},"sublocality_3":{"description":"A civil region within the address's sublocality_2, if any.","type":"string","x-samplevalue":"Dallas"}},"$ref":"#/definitions/address"},"company_name":{"description":"The customer's phone number.","type":"string","x-samplevalue":"Cloud Elements"},"email_address":{"description":"The customer's email address.","type":"string","x-samplevalue":"naga.ede@cloudelements.com"},"family_name":{"description":"The customer's family (i.e., last) name.","type":"string","x-samplevalue":"Ede"},"given_name":{"description":"The customer's given (i.e., first) name.","type":"string","x-samplevalue":"Naga Seshu Babu"},"nickname":{"type":"string","x-samplevalue":"Bangaro"},"note":{"type":"string","x-samplevalue":"A Customer"},"phone_number":{"description":"The customer's phone number.","type":"string","x-samplevalue":"1-111-111-1111"},"reference_id":{"description":"An optional second ID you can set to associate the customer with an entity in another system.","type":"string","x-samplevalue":"NAGA_CLOUD_ELEMENTS"}},"title":"customerUpdate","x-has-customfields":false,"x-vendor-objectname":"customers","type":"object"},"laborShiftsCreateWage":{"properties":{"hourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":0},"currency":{"type":"string","x-samplevalue":"string"}},"$ref":"#/definitions/laborShiftsCreateWageHourly_rate"},"title":{"type":"string","x-samplevalue":"string"}},"title":"wage","type":"object"},"swedish_rounding_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsCompleteRespCard_details":{"properties":{"auth_result_code":{"type":"string","x-samplevalue":"MhIjEN"},"avs_status":{"type":"string","x-samplevalue":"AVS_ACCEPTED"},"card":{"$ref":"#/definitions/paymentsCompleteRespCard_detailsCard"},"cvv_status":{"type":"string","x-samplevalue":"CVV_ACCEPTED"},"entry_method":{"type":"string","x-samplevalue":"ON_FILE"},"status":{"type":"string","x-samplevalue":"CAPTURED"}},"title":"card_details","type":"object"},"employeeUpdate":{"properties":{"first_name":{"type":"string"},"last_name":{"type":"string"},"role_ids":{"items":{"type":"string"},"type":"array"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"employees","type":"object"},"LaborShiftsUpdateRespBreaks":{"properties":{"break_type_id":{"type":"string","x-samplevalue":"REGS1EQR1TPZ5"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:16:00-05:00"},"expected_duration":{"type":"string","x-samplevalue":"PT5M"},"id":{"type":"string","x-samplevalue":"X7GAQYVVRRG6P"},"is_paid":{"type":"boolean","x-samplevalue":true},"name":{"type":"string","x-samplevalue":"Tea Break"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T06:11:00-05:00"}},"title":"breaks","type":"object"},"locationsTransactionsListTendersAmount_money":{"properties":{"amount":{"format":"int32","type":"integer","x-displayName":"Amount","x-samplevalue":500},"currency":{"type":"string","x-displayName":"Currency","x-samplevalue":"USD"}},"title":"amount_money","type":"object"},"LaborShiftsUpdateRespWageHourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":1100},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"hourly_rate","type":"object"},"objectsMetadata":{"properties":{"fields":{"items":{"$ref":"#/definitions/objectsMetadataFields"},"type":"array"}},"type":"object"},"locationsById":{"properties":{"address":{"$ref":"#/definitions/locationsByIdAddress"},"business_email":{"type":"string","x-samplevalue":"string"},"business_hours":{"type":"string","x-samplevalue":"string"},"business_name":{"type":"string","x-samplevalue":"string"},"capabilities":{"items":{"type":"string"},"type":"array","x-samplevalue":["string"]},"coordinates":{"$ref":"#/definitions/locationsByIdCoordinates"},"country":{"type":"string","x-samplevalue":"string"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-07T05:11:41.894Z"},"currency":{"type":"string","x-samplevalue":"string"},"description":{"type":"string","x-samplevalue":"String"},"facebook_url":{"type":"string","x-samplevalue":"string"},"id":{"type":"string","x-samplevalue":"string"},"instagram_username":{"type":"string","x-samplevalue":"string"},"language_code":{"type":"string","x-samplevalue":"string"},"logo_url":{"type":"string","x-samplevalue":"String"},"mcc":{"type":"string","x-samplevalue":"string"},"merchant_id":{"type":"string","x-samplevalue":"string"},"name":{"type":"string","x-samplevalue":"string"},"phone_number":{"type":"string","x-samplevalue":"String"},"pos_background_url":{"type":"string","x-samplevalue":"String"},"status":{"type":"string","x-samplevalue":"string"},"timezone":{"type":"string","x-samplevalue":"string"},"twitter_username":{"type":"string","x-samplevalue":"String"},"type":{"type":"string","x-samplevalue":"string"},"website_url":{"type":"string","x-samplevalue":"String"}},"title":"locationsById","x-primary-key":["id"],"x-vendor-objectname":"locations","type":"object"},"locationsUpdateResp":{"properties":{"address":{"$ref":"#/definitions/locationsUpdateRespAddress"},"business_email":{"type":"string","x-samplevalue":"string"},"business_hours":{"type":"string","x-samplevalue":"string"},"business_name":{"type":"string","x-samplevalue":"string"},"capabilities":{"items":{"type":"string"},"type":"array","x-samplevalue":["string"]},"coordinates":{"$ref":"#/definitions/locationsUpdateRespCoordinates"},"country":{"type":"string","x-samplevalue":"string"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"currency":{"type":"string","x-samplevalue":"string"},"description":{"type":"string","x-samplevalue":"string"},"facebook_url":{"type":"string","x-samplevalue":"string"},"id":{"type":"string","x-samplevalue":"string"},"instagram_username":{"type":"string","x-samplevalue":"string"},"language_code":{"type":"string","x-samplevalue":"string"},"logo_url":{"type":"string","x-samplevalue":"string"},"mcc":{"type":"string","x-samplevalue":"string"},"merchant_id":{"type":"string","x-samplevalue":"string"},"name":{"type":"string","x-samplevalue":"string"},"phone_number":{"type":"string","x-samplevalue":"string"},"pos_background_url":{"type":"string","x-samplevalue":"string"},"status":{"type":"string","x-samplevalue":"string"},"timezone":{"type":"string","x-samplevalue":"string"},"twitter_username":{"type":"string","x-samplevalue":"string"},"type":{"type":"string","x-samplevalue":"string"},"website_url":{"type":"string","x-samplevalue":"string"}},"title":"locationsUpdateResp","x-primary-key":["id"],"x-vendor-objectname":"locations","type":"object"},"LaborShiftsUpdateWageHourly_rate":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":0},"currency":{"type":"string","x-samplevalue":"string"}},"title":"hourly_rate","type":"object"},"swaggerschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact-POST-Response","type":"string"}}},"laborBreakTypesCreate":{"properties":{"break_name":{"type":"string","x-samplevalue":"Lunch Break"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"expected_duration":{"type":"string","x-samplevalue":"PT30M"},"id":{"type":"string","x-samplevalue":"49SSVDJG76WF3"},"is_paid":{"type":"boolean","x-samplevalue":true},"location_id":{"type":"string","x-samplevalue":"CGJN03P1D08GF"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-26T22:42:54Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1}},"required":["break_name","expected_duration","is_paid","location_id"],"title":"laborBreakTypesCreate","type":"object"},"swaggerparametersschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact","type":"string"}}},"LaborShiftsListObject":{"properties":{"breaks":{"items":{"$ref":"#/definitions/LaborShiftsListBreaks"},"type":"array"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"employee_id":{"type":"string","x-samplevalue":"ormj0jJJZ5OZIzxrZYJI","x-searchable":true,"x-searchable-operators":["IN"]},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T13:11:00-05:00","x-searchable":true,"x-searchable-operators":["="]},"id":{"type":"string","x-samplevalue":"K0YH4CV5462JB"},"location_id":{"type":"string","x-samplevalue":"PAA1RJZZKXBFG","x-searchable":true,"x-searchable-operators":["IN"]},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-01-25T03:11:00-05:00","x-searchable":true,"x-searchable-operators":["="]},"status":{"type":"string","x-samplevalue":"CLOSED","x-searchable":true,"x-searchable-operators":["="]},"timezone":{"type":"string","x-samplevalue":"America/New_York","x-searchable":true,"x-searchable-operators":["="]},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2019-02-28T00:39:02Z"},"version":{"format":"int32","type":"integer","x-samplevalue":1},"wage":{"$ref":"#/definitions/LaborShiftsListWage"}},"title":"LaborShiftsList","type":"object","x-primary-key":["id"],"x-searchable-joins":["and"],"x-vendor-objectname":"shifts"},"swaggerresponses":{"x-has-customfields":false,"type":"object","title":"responses","properties":{"200":{"$ref":"#/definitions/swagger200"},"400":{"$ref":"#/definitions/swagger400"},"401":{"$ref":"#/definitions/swagger401"},"403":{"$ref":"#/definitions/swagger403"},"404":{"$ref":"#/definitions/swagger404"},"405":{"$ref":"#/definitions/swagger405"},"406":{"$ref":"#/definitions/swagger406"},"409":{"$ref":"#/definitions/swagger409"},"415":{"$ref":"#/definitions/swagger415"},"500":{"$ref":"#/definitions/swagger500"},"502":{"$ref":"#/definitions/swagger502"}}},"paymentsCreateRespCard_details":{"properties":{"auth_result_code":{"type":"string","x-samplevalue":"nsAyY2"},"avs_status":{"type":"string","x-samplevalue":"AVS_ACCEPTED"},"card":{"$ref":"#/definitions/paymentsCreateRespCard_detailsCard"},"cvv_status":{"type":"string","x-samplevalue":"CVV_ACCEPTED"},"entry_method":{"type":"string","x-samplevalue":"ON_FILE"},"status":{"type":"string","x-samplevalue":"CAPTURED"}},"title":"card_details","type":"object"},"swaggerproperties":{"x-has-customfields":false,"type":"object","title":"properties","properties":{"definition-property":{"$ref":"#/definitions/swaggerdefinition-property"}}},"shipping_address":{"properties":{"address_line_1":{"type":"string"},"administrative_district_level_1":{"type":"string"},"country_code":{"type":"string"},"locality":{"type":"string"},"postal_code":{"type":"string"}},"type":"object"},"paymentsCancelRespTotal_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":200},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"total_money","type":"object"},"locationsListAddress":{"properties":{"address_line_1":{"type":"string","x-displayName":"Address Line 1","x-samplevalue":"1600 Pennsylvania Ave NW"},"administrative_district_level_1":{"type":"string","x-displayName":"Administrative District Level 1","x-samplevalue":"DC"},"country":{"type":"string","x-displayName":"Country","x-samplevalue":"US"},"locality":{"type":"string","x-displayName":"Locality","x-samplevalue":"Washington"},"postal_code":{"type":"string","x-displayName":"Postal Code","x-samplevalue":"20500"}},"title":"address","type":"object"},"laborShiftsCreateBreaks":{"properties":{"break_type_id":{"type":"string","x-samplevalue":"string"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"expected_duration":{"type":"string","x-samplevalue":"string"},"id":{"type":"string","x-samplevalue":"string"},"is_paid":{"type":"boolean","x-samplevalue":true},"name":{"type":"string","x-samplevalue":"string"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"}},"title":"breaks","type":"object"},"locationsPaymentsGross_sales_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"paymentsListObject":{"properties":{"additive_tax_money":{"$ref":"#/definitions/additive_tax_money"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"creator_id":{"type":"string"},"device":{"$ref":"#/definitions/device"},"discount_money":{"$ref":"#/definitions/discount_money"},"gross_sales_money":{"$ref":"#/definitions/gross_sales_money"},"id":{"type":"string","x-readOnly":true},"inclusive_tax_money":{"$ref":"#/definitions/inclusive_tax_money"},"itemizations":{"items":{"$ref":"#/definitions/itemizations"},"type":"array"},"merchant_id":{"type":"string"},"net_sales_money":{"$ref":"#/definitions/paymentsListNet_sales_money"},"net_total_money":{"$ref":"#/definitions/net_total_money"},"payment_url":{"type":"string"},"processing_fee_money":{"$ref":"#/definitions/processing_fee_money"},"receipt_url":{"type":"string"},"refunded_money":{"$ref":"#/definitions/paymentsListRefunded_money"},"swedish_rounding_money":{"$ref":"#/definitions/swedish_rounding_money"},"tax_money":{"$ref":"#/definitions/tax_money"},"tender":{"items":{"$ref":"#/definitions/tender"},"type":"array"},"tip_money":{"$ref":"#/definitions/tip_money"},"total_collected_money":{"$ref":"#/definitions/total_collected_money"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"payments","type":"object"},"groups":{"properties":{"id":{"type":"string","x-samplevalue":"9RTMBAK20H3KH.REACHABLE"},"name":{"type":"string","x-samplevalue":"Reachable"}},"title":"groups","x-has-customfields":false,"type":"object"},"locationsUpdateRespCoordinates":{"properties":{"latitude":{"format":"int32","type":"integer","x-samplevalue":0},"longitude":{"format":"int32","type":"integer","x-samplevalue":0}},"title":"coordinates","type":"object"},"paymentsGetAllTotal_money":{"properties":{"amount":{"format":"int32","type":"integer","x-samplevalue":20000},"currency":{"type":"string","x-samplevalue":"USD"}},"title":"total_money","type":"object"},"roleCreate":{"properties":{"is_owner":{"type":"boolean"},"name":{"type":"string"},"permissions":{"items":{"enum":["REGISTER_ACCESS_SALES_HISTORY","REGISTER_APPLY_RESTRICTED_DISCOUNTS","REGISTER_CHANGE_SETTINGS","REGISTER_EDIT_ITEM","REGISTER_ISSUE_REFUNDS","REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE","REGISTER_VIEW_SUMMARY_REPORTS"],"type":"string"},"type":"array"}},"required":["name","permissions"],"x-has-customfields":false,"x-vendor-objectname":"roles","type":"object"},"timesheet":{"properties":{"clockin_location_id":{"type":"string","x-readOnly":true},"clockin_time":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"clockout_location_id":{"type":"string"},"clockout_time":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"deleted":{"type":"boolean"},"doubletime_seconds_worked":{"format":"int32","type":"integer"},"employee_id":{"type":"string","x-readOnly":true},"id":{"type":"string","x-readOnly":true},"overtime_seconds_worked":{"format":"int32","type":"integer"},"regular_seconds_worked":{"format":"int32","type":"integer"},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"timecards","type":"object"},"customersListPreferences":{"properties":{"email_unsubscribed":{"type":"boolean","x-displayName":"Email Unsubscribed","x-samplevalue":false}},"title":"preferences","type":"object"},"total_collected_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"inclusive_tax_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency_code":{"type":"string"}},"type":"object"},"employeePUT":{"properties":{"authorized_location_ids":{"items":{"type":"string"},"type":"array","x-readOnly":true},"created_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"},"email":{"type":"string","x-readOnly":true},"first_name":{"type":"string"},"id":{"type":"string","x-readOnly":true},"last_name":{"type":"string"},"role_ids":{"items":{"type":"string"},"type":"array"},"status":{"type":"string","x-readOnly":true},"updated_at":{"format":"date-time","type":"string","x-readOnly":true,"x-mask":"yyyy-MM-dd'T'HH:mm:ssZ"}},"x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"employees","type":"object"},"LaborShiftsUpdateBreaks":{"properties":{"break_type_id":{"type":"string","x-samplevalue":"string"},"end_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"},"expected_duration":{"type":"string","x-samplevalue":"string"},"id":{"type":"string","x-samplevalue":"string"},"is_paid":{"type":"boolean","x-samplevalue":true},"name":{"type":"string","x-samplevalue":"string"},"start_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-11-11T12:23:40.335Z"}},"title":"breaks","type":"object"},"paymentsById":{"properties":{"amount_money":{"$ref":"#/definitions/paymentsByIdAmount_money"},"card_details":{"$ref":"#/definitions/paymentsByIdCard_details"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-10-08T05:35:15.381Z"},"employee_id":{"type":"string","x-samplevalue":"APP5JTYW917TW"},"id":{"type":"string","x-samplevalue":"gNHLHZrKUE4cVPBvK7PuEtMF"},"location_id":{"type":"string","x-samplevalue":"APP5JTYW917TW"},"order_id":{"type":"string","x-samplevalue":"0pLZi0woLiVmEss2zO8CazMF"},"source_type":{"type":"string","x-samplevalue":"CARD"},"status":{"type":"string","x-samplevalue":"FAILED"},"total_money":{"$ref":"#/definitions/paymentsByIdTotal_money"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX","x-samplevalue":"2019-10-08T05:35:15.442Z"}},"title":"paymentsById","x-primary-key":["id"],"x-vendor-objectname":"payments","type":"object"},"additional_recipientsAmount_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency":{"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD"],"type":"string"}},"type":"object"},"refundsProcessing_fee_money":{"properties":{"amount":{"format":"int32","type":"integer"},"currency":{"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD"],"type":"string"}},"type":"object"},"pingResponse":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"},"valid":{"type":"boolean"}},"title":"pingResponse","x-has-customfields":false,"x-vendor-objectname":"ping","type":"object"},"customer":{"properties":{"address":{"$ref":"#/definitions/address"},"company_name":{"type":"string","x-samplevalue":"Cloud Elements"},"created_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ss.SSSZ","x-readOnly":true,"x-samplevalue":"2018-01-05T22:32:53.136Z"},"email_address":{"type":"string","x-samplevalue":"naga.ede@cloudelements.com"},"family_name":{"type":"string","x-samplevalue":"Ede"},"given_name":{"type":"string","x-samplevalue":"Naga Seshu Babu"},"groups":{"items":{"$ref":"#/definitions/groups"},"type":"array"},"id":{"type":"string","x-readOnly":true,"x-samplevalue":"3WNVTV44TD5CYVAJCFJABDB6ZG"},"nickname":{"type":"string","x-samplevalue":"Bangaro"},"note":{"type":"string","x-samplevalue":"A Customer"},"phone_number":{"type":"string","x-samplevalue":"1-111-111-1111"},"preferences":{"$ref":"#/definitions/preferences"},"reference_id":{"type":"string","x-readOnly":true,"x-samplevalue":"NAGA_CLOUD_ELEMENTS"},"updated_at":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-readOnly":true,"x-samplevalue":"2018-01-05T22:32:53Z"}},"title":"customer","x-has-customfields":false,"x-primary-key":["id"],"x-vendor-objectname":"customers","type":"object"}},"swagger":"2.0","info":{"x-element-name":"SquareSandbox","x-element-hub":"general","x-element-key":"squaresandbox","contact":{"email":"support@cloud-elements.com"},"title":"squaresandbox","x-element-id":27226,"version":"api-v2"},"tags":[{"name":"generals"},{"name":"business"},{"name":"ping"},{"name":"roles"},{"name":"labor-shifts"},{"name":"payments"},{"name":"objects"},{"name":"labor-break-types"},{"name":"timesheets"},{"name":"objectName"},{"name":"locations"},{"name":"customers"},{"name":"bulk"},{"name":"search-customers"}]}