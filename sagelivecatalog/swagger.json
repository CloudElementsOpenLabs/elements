{"basePath":"/elements/api-v2","paths":{"/balances/{id}":{"get":{"summary":"Retrieve balances for a ledger account  ","operationId":"getBalanceById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/balances"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The balance ID ","type":"string","required":true}],"tags":["balances"]}},"/bill-numbers":{"get":{"summary":"Search for bill numbers ","operationId":"getBillNumbers","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/billNumbersListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["bill-numbers"]}},"/bill-numbers/{id}":{"patch":{"summary":"Update a bill number by ID  ","operationId":"updateBillNumberById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/billNumbers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The bill number ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/billNumbers"},"in":"body","name":"body","description":"The bill number object body","required":true}],"tags":["bill-numbers"]},"get":{"summary":"Retrieve a bill number by ID  ","operationId":"getBillNumberById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/billNumbers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The bill number ID","type":"string","required":true}],"tags":["bill-numbers"]}},"/bulk/download":{"post":{"summary":"Create a new bulk download job (asynchronous)","operationId":"createBulkDownload","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkQuery"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/bulkDownloadRequest"},"in":"body","name":"body","description":"The object body","required":true}],"tags":["bulk"]}},"/bulk/jobs":{"get":{"operationId":"getBulkJobs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'","in":"query","name":"where","required":false,"type":"string"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The page size for pagination, which defaults to 200 if not supplied","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkJobList"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Fetch all the bulk jobs for an instance","tags":["bulk"]}},"/bulk/query":{"post":{"operationId":"createBulkQuery","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The Url to send the notification to when the Job is completed","in":"header","name":"Elements-Async-Callback-Url","required":false,"type":"string"},{"description":"The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.","in":"query","name":"q","required":false,"type":"string"},{"description":"The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"lastRunDate","required":false,"type":"string"},{"description":"The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"from","required":false,"type":"string"},{"description":"The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'","in":"query","name":"to","required":false,"type":"string"},{"description":"Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ","in":"formData","name":"metaData","required":false,"type":"string"}],"consumes":["multipart/form-data"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkQuery"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an asynchronous bulk query job.","tags":["bulk"]}},"/bulk/{id}/cancel":{"put":{"operationId":"replaceBulkCancel","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to cancel.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkStatus"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Cancel an asynchronous bulk query job.","tags":["bulk"]}},"/bulk/{id}/errors":{"get":{"operationId":"getBulkErrors","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to retrieve its errors.","in":"path","name":"id","required":true,"type":"string"},{"description":"The page size for pagination, which defaults to 200 if not supplied","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the errors of a bulk job.","tags":["bulk"]}},"/bulk/{id}/status":{"get":{"operationId":"getBulkStatus","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job to retrieve its status.","in":"path","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkStatus"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the status of a bulk job.","tags":["bulk"]}},"/bulk/{id}/{objectName}":{"get":{"operationId":"getBulkByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The ID of the bulk job","in":"path","name":"id","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"file"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve the results of an asynchronous bulk query.","tags":["bulk"],"produces":["text/csv","application/json","application/jsonl"]}},"/bulk/{objectName}":{"post":{"operationId":"createBulkByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The Url to send the notification to when the Job is completed","in":"header","name":"Elements-Async-Callback-Url","required":false,"type":"string"},{"description":"The name of the object for which data needs to be uploaded.","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Optional JSON MetaData that contains callback-payload, path or format, ex: {\"path\" : <path for the sub resource>, \"format\": <json/csv>, \"callback-payload\":<json>}. path - is passed to the endpoint for bulk loading the data into a nested object. Optional JSON Metadata that contains identifierFieldName, action, listId or campaignId. The identifierField name is used for upserts and the optional fields like listId or campaignId. Example: {\"listId\":\"1014\",\"action\":\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\":\"json\"}. callback-payload - is passed back in bulk job notification ","in":"formData","name":"metaData","required":false,"type":"string"},{"description":"The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line","in":"formData","name":"file","type":"file"}],"consumes":["multipart/form-data"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/BulkUploadResponse"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Upload a file of objects to be bulk uploaded to the provider.","tags":["bulk"]}},"/customers":{"post":{"summary":"Create a customer","operationId":"createCustomer","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/customers"},"in":"body","name":"body","description":"The customers object body","required":true}],"tags":["customers"]},"get":{"summary":"Search for customers  ","operationId":"getCustomers","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/customersListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["customers"]}},"/customers/{id}":{"patch":{"summary":"Update a customer by ID  ","operationId":"updateCustomerById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The customer ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/customers"},"in":"body","name":"body","description":"The customer object body","required":true}],"tags":["customers"]},"get":{"summary":"Retrieve a customer by ID  ","operationId":"getCustomerById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/customers"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The customer ID","type":"string","required":true}],"tags":["customers"]},"delete":{"summary":"Delete a customer by ID  ","operationId":"deleteCustomerById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The customer ID","type":"string","required":true}],"tags":["customers"]}},"/dimensions":{"post":{"summary":"Create a dimension ","operationId":"createDimension","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/dimensions"},"in":"body","name":"body","description":"The dimension object body","required":true}],"tags":["dimensions"]},"get":{"summary":"Search for dimensions","operationId":"getDimensions","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/dimensionsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["dimensions"]}},"/dimensions/{id}":{"patch":{"summary":"Update a dimension by ID ","operationId":"updateDimensionById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/dimensions"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The dimension ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/dimensions"},"in":"body","name":"body","description":"The dimension object body","required":true}],"tags":["dimensions"]},"get":{"summary":"Retrieve a dimension by ID ","operationId":"getDimensionById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/dimensions"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The dimension ID","type":"string","required":true}],"tags":["dimensions"]},"delete":{"summary":"Delete a dimension","operationId":"deleteDimensionById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The dimension ID","type":"string","required":true}],"tags":["dimensions"]}},"/employees":{"post":{"summary":"Create an employee","operationId":"createEmployee","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/employees"},"in":"body","name":"body","description":"The employee object body","required":true}],"tags":["employees"]},"get":{"summary":"Search for employees ","operationId":"getEmployees","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["employees"]}},"/employees/{id}":{"patch":{"summary":"Update an employee by ID  ","operationId":"updateEmployeeById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/employees"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The employee ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/employees"},"in":"body","name":"body","description":"The employee object body","required":true}],"tags":["employees"]},"get":{"summary":"Retrieve an employee by ID","operationId":"getEmployeeById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/employees"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The employee ID","type":"string","required":true}],"tags":["employees"]},"delete":{"summary":"Delete an employee by ID  ","operationId":"deleteEmployeeById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The employee ID","type":"string","required":true}],"tags":["employees"]}},"/journals":{"post":{"summary":"Create a journal entry ","operationId":"createJournal","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/journals"},"in":"body","name":"body","description":"The journal object body","required":true}],"tags":["journals"]},"get":{"summary":"Search for journals  ","operationId":"getJournals","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/journalsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["journals"]}},"/journals/post":{"post":{"summary":"Create a journal post ","operationId":"createJournalPost","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/journalsPost"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/journalsPost"},"in":"body","name":"body","description":"The post object body","required":true}],"tags":["journals"]},"delete":{"summary":"Unpost a journal ","operationId":"deleteJournalsPost","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/journalsPost"},"in":"body","name":"body","description":"The post object body","required":true}],"tags":["journals"]}},"/journals/{id}":{"patch":{"summary":"Update a journal","operationId":"updateJournalById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/journals"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The journal ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/journals"},"in":"body","name":"body","description":"The journals object body","required":true}],"tags":["journals"]},"get":{"summary":"Retrieve a journal by ID","operationId":"getJournalById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/journals"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The journal ID ","type":"string","required":true}],"tags":["journals"]},"delete":{"summary":"Delete a journal ","operationId":"deleteJournalById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The journal ID","type":"string","required":true}],"tags":["journals"]}},"/journals/{id}/tags":{"get":{"summary":"Search for tags for a journal  ","operationId":"getJournalsTags","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/journalsTagsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The journal ID","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["journals"]}},"/ledger-accounts":{"post":{"summary":"Create a ledger account","operationId":"createLedgerAccount","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/ledgerAccounts"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/ledgerAccounts"},"in":"body","name":"body","description":"The ledger-accounts object","required":true}],"tags":["ledger-accounts"]},"get":{"summary":"Search for ledger accounts ","operationId":"getLedgerAccounts","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/ledgerAccountsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["ledger-accounts"]}},"/ledger-accounts/{id}":{"patch":{"summary":"Update a ledger account","operationId":"updateLedgerAccountById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/ledgerAccounts"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The ledger-accounts ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/ledgerAccounts"},"in":"body","name":"body","description":"The ledger-accounts object","required":true}],"tags":["ledger-accounts"]},"get":{"summary":"Retrieve a ledger account","operationId":"getLedgerAccountById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/ledgerAccounts"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The ledger account ID","type":"string","required":true}],"tags":["ledger-accounts"]},"delete":{"summary":"Delete a ledger account","operationId":"deleteLedgerAccountById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The ledger-accounts ID","type":"string","required":true}],"tags":["ledger-accounts"]}},"/ledger-accounts/{id}/balances":{"get":{"summary":"Search balances for a ledger account ","operationId":"getLedgerAccountsBalances","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/ledgerAccountsBalancesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The ledger account ID ","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression.","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["ledger-accounts"]}},"/objects":{"get":{"operationId":"getObjects","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"type":"string"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the available objects.","tags":["objects"]}},"/objects/{objectName}/docs":{"get":{"operationId":"getObjectsObjectNameDocs","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Include discovery metadata in definitions","in":"query","name":"discovery","required":false,"type":"boolean"},{"description":"Optionally resolve swagger references for an inline object definition","in":"query","name":"resolveReferences","required":false,"type":"boolean"},{"description":"Include only OpenAPI / Swagger properties in definitions","in":"query","name":"basic","required":false,"type":"boolean"},{"description":"The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger","in":"query","name":"version","required":false,"default":"-1","type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/swaggerDocs"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get swagger docs for an object.","tags":["objects"]}},"/objects/{objectName}/metadata":{"get":{"operationId":"getObjectsObjectNameMetadata","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen","in":"header","name":"Elements-Version","required":false,"type":"string","enum":["Hydrogen","Helium"]}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/objectsMetadata"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Get a list of all the field for an object.","tags":["objects"]}},"/ping":{"get":{"operationId":"getPing","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Pong"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.","tags":["ping"]}},"/posting-rules":{"get":{"summary":"Search for posting rules ","operationId":"getPostingRules","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/postingRulesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["posting-rules"]}},"/posting-rules/{id}":{"get":{"summary":"Retrieve a posting rule","operationId":"getPostingRuleById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/postingRules"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The posting-rules ID","type":"string","required":true}],"tags":["posting-rules"]}},"/tags":{"post":{"summary":"Create a tag","operationId":"createTag","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/tags"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/tags"},"in":"body","name":"body","description":"The tags object. Both Name and Dimension are required fields, where the value of Dimension is the Name of the existing Sage Dimension","required":true}],"tags":["tags"]},"get":{"summary":"Search for tags","operationId":"getTags","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/tagsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["tags"]}},"/tags/{id}":{"patch":{"summary":"Update a tag","operationId":"updateTagById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/tags"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tags ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/tags"},"in":"body","name":"body","description":"The tags object","required":true}],"tags":["tags"]},"get":{"summary":"Retrieve a tag","operationId":"getTagById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/tags"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tags ID","type":"string","required":true}],"tags":["tags"]},"delete":{"summary":"Delete a tag","operationId":"deleteTagById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tags ID","type":"string","required":true}],"tags":["tags"]}},"/tax-codes":{"post":{"summary":"Create a tax code ","operationId":"createTaxCode","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxCodes"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/taxCodes"},"in":"body","name":"body","description":"The tax-codes object","required":true}],"tags":["tax-codes"]},"get":{"summary":"Search for tax codes  ","operationId":"getTaxCodes","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/taxCodesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["tax-codes"]}},"/tax-codes/{id}":{"patch":{"summary":"Update a tax code","operationId":"updateTaxCodeById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxCodes"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-codes ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/taxCodes"},"in":"body","name":"body","description":"The tax-codes object","required":true}],"tags":["tax-codes"]},"get":{"summary":"Retrieve a tax code","operationId":"getTaxCodeById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxCodes"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-codes ID","type":"string","required":true}],"tags":["tax-codes"]},"delete":{"summary":"Delete a tax code","operationId":"deleteTaxCodeById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-codes ID","type":"string","required":true}],"tags":["tax-codes"]}},"/tax-rates":{"post":{"summary":"Create a tax rates ","operationId":"createTaxRate","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxRates"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/taxRates"},"in":"body","name":"body","description":"The tax-rates object","required":true}],"tags":["tax-rates"]},"get":{"summary":"Search for tax rates","operationId":"getTaxRates","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/taxRatesListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["tax-rates"]}},"/tax-rates/{id}":{"get":{"summary":"Retrieve a tax rate","operationId":"getTaxRateById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxRates"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-rates ID","type":"string","required":true}],"tags":["tax-rates"]},"delete":{"summary":"Delete a tax-rates","operationId":"deleteTaxRateById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-rates ID","type":"string","required":true}],"tags":["tax-rates"]}},"/tax-treatments":{"post":{"summary":"Create a tax treatment","operationId":"createTaxTreatment","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxTreatments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/taxTreatments"},"in":"body","name":"body","description":"The tax-treatments object","required":true}],"tags":["tax-treatments"]},"get":{"summary":"Search for tax treatments ","operationId":"getTaxTreatments","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/taxTreatmentsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["tax-treatments"]}},"/tax-treatments/{id}":{"patch":{"summary":"Update a tax treatment","operationId":"updateTaxTreatmentById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxTreatments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-treatments ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/taxTreatments"},"in":"body","name":"body","description":"The tax-treatments object","required":true}],"tags":["tax-treatments"]},"get":{"summary":"Retrieve a tax treatment","operationId":"getTaxTreatmentById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/taxTreatments"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-treatments ID","type":"string","required":true}],"tags":["tax-treatments"]},"delete":{"summary":"Delete a tax treatment ","operationId":"deleteTaxTreatmentById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The tax-treatments ID","type":"string","required":true}],"tags":["tax-treatments"]}},"/vendors":{"post":{"summary":"Create a vendor","operationId":"createVendor","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/vendors"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"schema":{"$ref":"#/definitions/vendors"},"in":"body","name":"body","description":"The vendor object body","required":true}],"tags":["vendors"]},"get":{"summary":"Search for vendors ","operationId":"getVendors","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"type":"array","items":{"$ref":"#/definitions/vendorsListObject"}}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"query","name":"pageSize","format":"int64","description":"The number of resources to return in a given page","type":"string","required":false},{"in":"query","name":"where","description":"The CEQL search expression. All fields are searchable with AND/OR, =, >, <, and LIKE operators supported. An example where query would be <i> LastModifiedDate>'2016-06-16T23:58:03Z' </i> ","type":"string","required":false},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"tags":["vendors"]}},"/vendors/{id}":{"patch":{"summary":"Update a vendor by ID  ","operationId":"updateVendorById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/vendors"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The vendor ID","type":"string","required":true},{"schema":{"$ref":"#/definitions/vendors"},"in":"body","name":"body","description":"The vendor object body","required":true}],"tags":["vendors"]},"get":{"summary":"Retrieve a vendor by ID  ","operationId":"getVendorById","responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/vendors"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The vendor ID","type":"string","required":true}],"tags":["vendors"]},"delete":{"summary":"Delete a vendor by ID  ","operationId":"deleteVendorById","responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"},"404":{"description":"Not found - The requested resource is not found"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"}},"parameters":[{"in":"header","name":"Authorization","description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string","required":true},{"in":"path","name":"id","description":"The vendor ID","type":"string","required":true}],"tags":["vendors"]}},"/{objectName}":{"get":{"operationId":"getByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {objectName}","tags":["objectName"]},"post":{"operationId":"createByObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}":{"delete":{"operationId":"deleteObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {objectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"}],"produces":["application/json","application/pdf"],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {objectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the 'Accept' header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}":{"get":{"operationId":"getObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The CEQL search expression.","in":"query","name":"where","required":false,"type":"string"},{"description":"The page size. Defaults to 200 if not provided. Maximum of 5000.","format":"int64","in":"query","name":"pageSize","required":false,"type":"integer"},{"description":"The next page cursor, taken from the response header: `elements-next-page-token`","in":"query","name":"nextPage","required":false,"type":"string"},{"description":"The fields to return on the response. Can be a single field or a comma-separated list of fields","in":"query","name":"fields","required":false,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"items":{"$ref":"#/definitions/Object"},"type":"array"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Search for {childObjectName}","tags":["objectName"]},"post":{"operationId":"createObjectNameByChildObjectName","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {childObjectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Create an {objectName}","tags":["objectName"]}},"/{objectName}/{objectId}/{childObjectName}/{childObjectId}":{"delete":{"operationId":"deleteObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected"},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Delete an {childObjectName}","tags":["objectName"]},"get":{"operationId":"getObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Retrieve an {childObjectName}","tags":["objectName"]},"patch":{"operationId":"updateObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]},"put":{"operationId":"replaceObjectNameByChildObjectId","parameters":[{"description":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","in":"header","name":"Authorization","required":true,"type":"string"},{"description":"The name of the object","in":"path","name":"objectName","required":true,"type":"string"},{"description":"The name of the childObjectName","in":"path","name":"childObjectName","required":true,"type":"string"},{"description":"The {objectName} ID","in":"path","name":"objectId","required":true,"type":"string"},{"description":"The {childObjectName} ID","in":"path","name":"childObjectId","required":true,"type":"string"},{"description":"The {objectName}","in":"body","name":"Body","required":true,"schema":{"$ref":"#/definitions/Object"}}],"responses":{"200":{"description":"OK - Everything worked as expected","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad Request - Often due to a missing request parameter"},"401":{"description":"Unauthorized - An invalid element token, user secret and/or org secret provided"},"403":{"description":"Forbidden - Access to the resource by the provider is forbidden"},"404":{"description":"Not found - The requested resource is not found"},"405":{"description":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"},"406":{"description":"Not acceptable - The response content type does not match the &quot;Accept&quot; header value"},"409":{"description":"Conflict - If a resource being created already exists"},"415":{"description":"Unsupported media type - The server cannot handle the requested Content-Type"},"500":{"description":"Server error - Something went wrong on the Cloud Elements server"},"502":{"description":"Provider server error - Something went wrong on the Provider or Endpoint's server"}},"summary":"Update an {childObjectName}","tags":["objectName"]}}},"schemes":["https"],"definitions":{"bulkDownloadRequest":{"properties":{"apiLimit":{"format":"int32","type":"integer","x-samplevalue":100},"continueFromJobId":{"format":"int32","type":"integer","x-samplevalue":1},"docsHubDetails":{"$ref":"#/definitions/bulkDownloadRequestDocsHubDetails"},"filterDateField":{"type":"string","x-samplevalue":"lastModifiedDate"},"filterNulls":{"type":"boolean","x-samplevalue":true},"format":{"enum":["application/json","txt/csv","application/jsonl"],"type":"string","x-samplevalue":"application/json"},"from":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2014-10-06T13:22:17-08:00"},"limit":{"format":"int32","type":"integer","x-samplevalue":107},"notificationUrl":{"type":"string","x-samplevalue":"https://myreceiver.com/whatever"},"objectName":{"type":"string","x-samplevalue":"accounts"},"pageSize":{"format":"int32","type":"integer","x-samplevalue":200},"query":{"$ref":"#/definitions/bulkDownloadRequestQuery"},"selectFields":{"type":"string","x-samplevalue":"a,b,c"},"to":{"format":"date-time","type":"string","x-mask":"yyyy-MM-dd'T'HH:mm:ssZ","x-samplevalue":"2014-10-10T13:22:17-08:00"},"where":{"type":"string","x-samplevalue":"name='Alex' and gender='male'"}},"required":["objectName","format"],"title":"bulkDownloadRequest","type":"object"},"Account":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"Company":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"BalanceAccount":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"BulkUploadResponse":{"description":"BulkLoad response of bulk download.","properties":{"id":{"description":"Id of the bulk job","type":"string"},"instanceId":{"description":"Instance Id of the bulk job","format":"int64","type":"integer"},"status":{"description":"Status of the bulk job","type":"string"}},"type":"object"},"swaggerdefinitions":{"x-has-customfields":false,"type":"object","title":"definitions","properties":{"definition-name":{"$ref":"#/definitions/swaggerdefinition-name"}}},"Product":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"FieldsValueMap":{"properties":{},"type":"object"},"Unit":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"swaggerdefinition-name":{"x-has-customfields":false,"type":"object","title":"definition-name","properties":{"properties":{"$ref":"#/definitions/swaggerproperties"}}},"swaggerparameters":{"x-has-customfields":false,"title":"parameters","properties":{"schema":{"$ref":"#/definitions/swaggerparametersschema"},"in":{"x-samplevalue":"header","type":"string"},"name":{"x-samplevalue":"Authorization","type":"string"},"description":{"x-samplevalue":"The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'","type":"string"},"type":{"x-samplevalue":"string","type":"string"},"required":{"x-samplevalue":true,"type":"boolean"}},"type":"object"},"postingRulesListObject":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Credit":{"type":"string"},"Currency":{"type":"string"},"Debit":{"type":"string"},"Description":{"type":"string"},"ExchangeRate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"ItemType":{"type":"string"},"JournalType":{"type":"string"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Layer":{"type":"string"},"LedgerAccount":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"RuleType":{"type":"string"},"SourceApplication":{"type":"string"},"SourceDocument":{"type":"string"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"UID":{"type":"string"},"Version":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"taxRates":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"Priority":{"format":"double","type":"number"},"Rate":{"format":"double","type":"number"},"Rounding":{"type":"string"},"SystemModstamp":{"type":"string"},"Type":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"Items":{"properties":{"Amount":{"format":"double","type":"number"},"FieldValueMap":{"$ref":"#/definitions/FieldValueMap"},"FieldsValueMap":{"$ref":"#/definitions/FieldsValueMap"},"IsCredit":{"type":"boolean"},"ItemDate":{"type":"string"},"ItemTaxCode":{"$ref":"#/definitions/ItemTaxCode"},"ItemTextualReference":{"type":"string"},"Reference":{"$ref":"#/definitions/Reference"},"Tags":{"items":{"$ref":"#/definitions/Tags"},"type":"array"},"Type":{"type":"string"}},"type":"object"},"swagger-contacts-path":{"x-has-customfields":false,"type":"object","title":"/contacts","properties":{"post":{"$ref":"#/definitions/swaggerpost"}}},"vendors":{"properties":{"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"Tags":{"properties":{"Account":{"$ref":"#/definitions/Account"},"Active":{"type":"boolean"},"BaseBudget":{"type":"string"},"BaseCredit":{"format":"int32","type":"integer"},"BaseCreditLimit":{"type":"string"},"BaseDebit":{"format":"int32","type":"integer"},"Company":{"$ref":"#/definitions/Company"},"Dimension":{"$ref":"#/definitions/Dimension"},"EndDate":{"type":"string"},"FieldValueMap":{"$ref":"#/definitions/FieldValueMap"},"FieldsValueMap":{"$ref":"#/definitions/FieldsValueMap"},"ForeignCredit":{"format":"int32","type":"integer"},"ForeignDebit":{"format":"int32","type":"integer"},"IsPublic":{"type":"boolean"},"LedgerAccount":{"$ref":"#/definitions/LedgerAccount"},"Level1":{"type":"string"},"Level2":{"type":"string"},"Level3":{"type":"string"},"Product":{"$ref":"#/definitions/Product"},"Reference":{"$ref":"#/definitions/Reference"},"StartDate":{"type":"string"},"TagCurrency":{"$ref":"#/definitions/TagCurrency"},"Unit":{"$ref":"#/definitions/Unit"},"UnitCredit":{"format":"int32","type":"integer"},"UnitDebit":{"format":"int32","type":"integer"},"UnitValue":{"format":"int32","type":"integer"}},"type":"object"},"swagger200":{"x-has-customfields":false,"type":"object","title":"200","properties":{"schema":{"$ref":"#/definitions/swaggerschema"},"description":{"x-samplevalue":"OK - Everything worked as expected","type":"string"}}},"vendorsListObject":{"properties":{"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swagger400":{"x-has-customfields":false,"type":"object","title":"400","properties":{"description":{"x-samplevalue":"Bad Request - Often due to a missing request parameter","type":"string"}}},"swagger401":{"x-has-customfields":false,"type":"object","title":"401","properties":{"description":{"x-samplevalue":"Unauthorized - An invalid element token, user secret and/or org secret provided","type":"string"}}},"swagger403":{"x-has-customfields":false,"type":"object","title":"403","properties":{"description":{"x-samplevalue":"Forbidden - Access to the resource by the provider is forbidden","type":"string"}}},"TagCurrency":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"swagger404":{"x-has-customfields":false,"type":"object","title":"404","properties":{"description":{"x-samplevalue":"Not found - The requested resource is not found","type":"string"}}},"swagger405":{"x-has-customfields":false,"type":"object","title":"405","properties":{"description":{"x-samplevalue":"Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected","type":"string"}}},"JournalCompany":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"taxTreatmentsListObject":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"Type":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swaggerDocs":{"x-has-customfields":false,"title":"swaggerDocs","properties":{"basePath":{"x-samplevalue":"/elements/api-v2/hubs/crm","type":"string"},"paths":{"$ref":"#/definitions/swaggerpaths"},"host":{"x-samplevalue":"localhost:5050","type":"string"},"schemes":{"x-samplevalue":["http"],"type":"array","items":{"type":"string"}},"definitions":{"$ref":"#/definitions/swaggerdefinitions"},"swagger":{"x-samplevalue":"2.0","type":"string"},"info":{"$ref":"#/definitions/swaggerinfo"},"tags":{"type":"array","items":{"$ref":"#/definitions/swaggertags"}}},"type":"object"},"journals":{"properties":{"Description":{"type":"string"},"FieldValueMap":{"$ref":"#/definitions/FieldValueMap"},"FieldsValueMap":{"$ref":"#/definitions/FieldsValueMap"},"Items":{"items":{"$ref":"#/definitions/Items"},"type":"array"},"JournalCompany":{"$ref":"#/definitions/JournalCompany"},"JournalCurrency":{"$ref":"#/definitions/JournalCurrency"},"JournalDate":{"type":"string"},"JournalExchangeRate":{"type":"string"},"JournalTaxTreatment":{"$ref":"#/definitions/JournalTaxTreatment"},"JournalTextualReference":{"type":"string"},"JournalType":{"$ref":"#/definitions/JournalType"},"Operation":{"type":"string"},"Reference":{"$ref":"#/definitions/Reference"},"Status":{"type":"string"},"Tags":{"items":{"$ref":"#/definitions/Tags"},"type":"array"},"TotalAmount":{"format":"double","type":"number"},"TotalCredit":{"format":"double","type":"number"},"TotalDebit":{"format":"double","type":"number"}},"type":"object"},"ItemTaxCode":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"tags":{"properties":{"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name","Dimension"],"type":"object"},"taxTreatments":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"SystemModstamp":{"type":"string"},"Type":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"swaggercontact":{"x-has-customfields":false,"type":"object","title":"contact","properties":{"email":{"x-samplevalue":"support@cloud-elements.com","type":"string"}}},"bulkDownloadRequestQuery":{"properties":{"anyKey":{"type":"string","x-samplevalue":"anyValue"}},"title":"query","type":"object"},"taxCodesListObject":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swagger406":{"x-has-customfields":false,"type":"object","title":"406","properties":{"description":{"x-samplevalue":"Not acceptable - The response content type does not match the 'Accept' header value","type":"string"}}},"swaggerdefinition-property":{"x-has-customfields":false,"type":"object","title":"#/definitions/definition-property","properties":{"type":{"x-samplevalue":"string","type":"string"}}},"Object":{"description":"Fields for the object. There will be fields associated with an Object, which are not all described here.","properties":{"objectField":{"type":"string"}},"type":"object"},"dimensionsListObject":{"properties":{"AllowNewValues":{"type":"boolean"},"BalanceAccount":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"IsPostingRuleMapping":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsUniversal":{"type":"boolean"},"Key":{"type":"string"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"MaintainPeriodValues":{"type":"boolean"},"MaintainUnitValues":{"type":"boolean"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ShowOnMobileMenu":{"type":"boolean"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"TreatCreditAsPositive":{"type":"boolean"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"},"s2cor__Protect_Posting__c":{"type":"boolean"}},"type":"object"},"swagger409":{"x-has-customfields":false,"type":"object","title":"409","properties":{"description":{"x-samplevalue":"Conflict - If a resource being created already exists","type":"string"}}},"employees":{"properties":{"Account":{"type":"string"},"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"journalsTagsListObject":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Dimension":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"Journal":{"type":"string"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"SystemModstamp":{"type":"string"},"Tag":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"objectsMetadata":{"properties":{"fields":{"items":{"$ref":"#/definitions/objectsMetadataFields"},"type":"array"}},"type":"object"},"Pong":{"properties":{"dateTime":{"format":"date-time","type":"string"},"endpoint":{"type":"string"},"valid":{"type":"boolean"}},"type":"object"},"swaggerschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact-POST-Response","type":"string"}}},"billNumbersListObject":{"properties":{"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Level1":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ReconciledDate":{"type":"string"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swagger415":{"x-has-customfields":false,"type":"object","title":"415","properties":{"description":{"x-samplevalue":"Unsupported media type - The server cannot handle the requested Content-Type","type":"string"}}},"billNumbers":{"properties":{"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"BulkQuery":{"properties":{"id":{"type":"string"},"status":{"type":"string"},"instance_id":{"type":"number"}},"type":"object"},"FieldValueMap":{"properties":{},"type":"object"},"swaggerparametersschema":{"x-has-customfields":false,"type":"object","title":"schema","properties":{"$ref":{"x-samplevalue":"#/definitions/Contact","type":"string"}}},"swaggerresponses":{"x-has-customfields":false,"type":"object","title":"responses","properties":{"200":{"$ref":"#/definitions/swagger200"},"400":{"$ref":"#/definitions/swagger400"},"401":{"$ref":"#/definitions/swagger401"},"403":{"$ref":"#/definitions/swagger403"},"404":{"$ref":"#/definitions/swagger404"},"405":{"$ref":"#/definitions/swagger405"},"406":{"$ref":"#/definitions/swagger406"},"409":{"$ref":"#/definitions/swagger409"},"415":{"$ref":"#/definitions/swagger415"},"500":{"$ref":"#/definitions/swagger500"},"502":{"$ref":"#/definitions/swagger502"}}},"balances":{"properties":{"BaseClosingBalance":{"format":"double","type":"number"},"BaseClosingBalanceS":{"format":"double","type":"number"},"BaseOpeningBalance":{"format":"double","type":"number"},"BaseOpeningBalanceS":{"format":"double","type":"number"},"BaseOpeningTTDBalance":{"format":"double","type":"number"},"BaseOpeningTTDBalanceS":{"format":"double","type":"number"},"BaseOpeningTTDCredit":{"format":"double","type":"number"},"BaseOpeningTTDDebit":{"format":"double","type":"number"},"BaseOpeningYTDBalance":{"format":"double","type":"number"},"BaseOpeningYTDBalanceS":{"format":"double","type":"number"},"BaseOpeningYTDCredit":{"format":"double","type":"number"},"BaseOpeningYTDDebit":{"format":"double","type":"number"},"BasePeriodBalance":{"format":"double","type":"number"},"BasePeriodBalanceS":{"format":"double","type":"number"},"BasePeriodCredit":{"format":"double","type":"number"},"BasePeriodDebit":{"format":"double","type":"number"},"BaseTTDBalance":{"format":"double","type":"number"},"BaseTTDBalanceS":{"format":"double","type":"number"},"BaseTTDCredit":{"format":"double","type":"number"},"BaseTTDDebit":{"format":"double","type":"number"},"BaseYTDBalance":{"format":"double","type":"number"},"BaseYTDBalanceS":{"format":"double","type":"number"},"BaseYTDCredit":{"format":"double","type":"number"},"BaseYTDDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"FY":{"format":"double","type":"number"},"FYLabel":{"type":"string"},"ForeignClosingBalance":{"format":"double","type":"number"},"ForeignClosingBalanceS":{"format":"double","type":"number"},"ForeignOpeningBalance":{"format":"double","type":"number"},"ForeignOpeningBalanceS":{"format":"double","type":"number"},"ForeignOpeningTTDBalance":{"format":"double","type":"number"},"ForeignOpeningTTDBalanceS":{"format":"double","type":"number"},"ForeignOpeningTTDCredit":{"format":"double","type":"number"},"ForeignOpeningTTDDebit":{"format":"double","type":"number"},"ForeignOpeningYTDBalance":{"format":"double","type":"number"},"ForeignOpeningYTDBalanceS":{"format":"double","type":"number"},"ForeignOpeningYTDCredit":{"format":"double","type":"number"},"ForeignOpeningYTDDebit":{"format":"double","type":"number"},"ForeignPeriodBalance":{"format":"double","type":"number"},"ForeignPeriodBalanceS":{"format":"double","type":"number"},"ForeignPeriodCredit":{"format":"double","type":"number"},"ForeignPeriodDebit":{"format":"double","type":"number"},"ForeignTTDBalance":{"format":"double","type":"number"},"ForeignTTDBalanceS":{"format":"double","type":"number"},"ForeignTTDCredit":{"format":"double","type":"number"},"ForeignTTDDebit":{"format":"double","type":"number"},"ForeignYTDBalance":{"format":"double","type":"number"},"ForeignYTDBalanceS":{"format":"double","type":"number"},"ForeignYTDCredit":{"format":"double","type":"number"},"ForeignYTDDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsBaseCurrency":{"type":"boolean"},"IsCurrentCompany":{"type":"boolean"},"IsCurrentPeriod":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsReportingFY":{"type":"boolean"},"IsReportingPeriod":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"LedgerAccount":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"Period":{"format":"double","type":"number"},"PeriodName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitClosingBalance":{"format":"double","type":"number"},"UnitClosingBalanceS":{"format":"double","type":"number"},"UnitOpeningBalance":{"format":"double","type":"number"},"UnitOpeningBalanceS":{"format":"double","type":"number"},"UnitOpeningTTDBalance":{"format":"double","type":"number"},"UnitOpeningTTDBalanceS":{"format":"double","type":"number"},"UnitOpeningTTDCredit":{"format":"double","type":"number"},"UnitOpeningTTDDebit":{"format":"double","type":"number"},"UnitOpeningYTDBalance":{"format":"double","type":"number"},"UnitOpeningYTDBalanceS":{"format":"double","type":"number"},"UnitOpeningYTDCredit":{"format":"double","type":"number"},"UnitOpeningYTDDebit":{"format":"double","type":"number"},"UnitPeriodBalance":{"format":"double","type":"number"},"UnitPeriodBalanceS":{"format":"double","type":"number"},"UnitPeriodCredit":{"format":"double","type":"number"},"UnitPeriodDebit":{"format":"double","type":"number"},"UnitTTDBalance":{"format":"double","type":"number"},"UnitTTDBalanceS":{"format":"double","type":"number"},"UnitTTDCredit":{"format":"double","type":"number"},"UnitTTDDebit":{"format":"double","type":"number"},"UnitYTDBalance":{"format":"double","type":"number"},"UnitYTDBalanceS":{"format":"double","type":"number"},"UnitYTDCredit":{"format":"double","type":"number"},"UnitYTDDebit":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swaggerproperties":{"x-has-customfields":false,"type":"object","title":"properties","properties":{"definition-property":{"$ref":"#/definitions/swaggerdefinition-property"}}},"LedgerAccount":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"taxCodes":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"journalsPost":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"customers":{"properties":{"Account":{"type":"string"},"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"taxRatesListObject":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"DateFrom":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Legislation":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"Rate":{"format":"double","type":"number"},"Rounding":{"type":"string"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"Type":{"type":"string"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swaggerinfo":{"x-has-customfields":false,"type":"object","title":"info","properties":{"contact":{"$ref":"#/definitions/swaggercontact"},"title":{"x-samplevalue":"hubspotcrm","type":"string"},"version":{"x-samplevalue":"api-v2","type":"string"}}},"customersListObject":{"properties":{"Account":{"type":"string"},"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ShortName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swagger500":{"x-has-customfields":false,"type":"object","title":"500","properties":{"description":{"x-samplevalue":"Server error - Something went wrong on the Cloud Elements server","type":"string"}}},"swaggerpaths":{"x-has-customfields":false,"type":"object","title":"paths","properties":{"/contacts":{"$ref":"#/definitions/swagger-contacts-path"}}},"swagger502":{"x-has-customfields":false,"type":"object","title":"502","properties":{"description":{"x-samplevalue":"Provider server error - Something went wrong on the Provider or Endpoint's server","type":"string"}}},"Reference":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"BulkStatus":{"description":"Status of the bulk upload.","type":"object","properties":{"batchId":{"description":"Contact/Leads loaded","type":"number"},"message":{"type":"string"},"numOfLeadsProcessed":{"description":"Contact/Leads loaded","type":"number"},"numOfRowsFailed":{"description":"Failed count","type":"number"},"numOfRowsWithWarning":{"description":"Contact/Leads that had warnings","type":"number"},"status":{"description":"Status of the bulk job","type":"string"}}},"ledgerAccountsListObject":{"properties":{"AccountClass":{"type":"string"},"AccountId":{"type":"string"},"AccountName":{"type":"string"},"AccountType":{"type":"string"},"AllowUnitPostings":{"type":"boolean"},"ClassId":{"type":"string"},"ClassName":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"FullName":{"type":"string"},"Id":{"type":"string"},"Index":{"format":"double","type":"number"},"IndexedAccount":{"type":"string"},"IndexedAccountName":{"type":"string"},"IndexedClass":{"type":"string"},"IndexedClassName":{"type":"string"},"IndexedFullName":{"type":"string"},"IndexedName":{"type":"string"},"IndexedSubaccount":{"type":"string"},"IndexedSubaccountName":{"type":"string"},"IndexedType":{"type":"string"},"IndexedTypeName":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LedgerAccountType":{"type":"string"},"Level":{"format":"double","type":"number"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"Parent":{"type":"string"},"ParentType":{"type":"string"},"ReverseToSelf":{"type":"boolean"},"SubaccountName":{"type":"string"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"TreatCreditAsPositive":{"type":"boolean"},"TypeId":{"type":"string"},"TypeName":{"type":"string"},"UID":{"type":"string"},"WeightedIndex":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"},"s2cor__Usage__c":{"type":"string"}},"type":"object"},"BulkJobList":{"title":"BulkJobList","properties":{"record_count":{"x-samplevalue":41,"format":"int32","type":"integer"},"job_query":{"x-samplevalue":"SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'","type":"string"},"job_reset_attempt":{"x-samplevalue":0,"format":"int32","type":"integer"},"completion_time":{"x-samplevalue":1542829827804,"format":"int64","type":"integer"},"status":{"x-samplevalue":"COMPLETED","type":"string"},"notification_url":{"type":"string"},"job_direction":{"x-samplevalue":"DOWNLOAD","type":"string"},"error_count":{"x-samplevalue":0,"format":"int32","type":"integer"},"job_state":{"type":"string"},"createdDate":{"x-samplevalue":1542829826619,"format":"int64","type":"integer"},"id":{"x-samplevalue":1722,"format":"int32","type":"integer"},"instanceId":{"x-samplevalue":123453,"format":"int32","type":"integer"},"object_name":{"x-samplevalue":"systemuser","type":"string"},"fileFormat":{"x-samplevalue":"csv","type":"string"}},"type":"object"},"objectsMetadataFields":{"properties":{"mask":{"type":"string"},"type":{"type":"string"},"vendorDisplayName":{"type":"string"},"vendorPath":{"type":"string"},"vendorReadOnly":{"type":"boolean"},"vendorRequired":{"type":"boolean"}},"type":"object"},"Dimension":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"bulkDownloadRequestDocsHubDetails":{"properties":{"instanceId":{"type":"string","x-samplevalue":"1234"},"path":{"type":"string","x-samplevalue":"/myfolder/in/googledrive/myfilename.extention"}},"title":"docsHubDetails","type":"object"},"tagsListObject":{"properties":{"Account":{"type":"string"},"AccountBillingAddress":{"type":"string"},"Active":{"type":"boolean"},"AssociatedLedgerAccount":{"type":"string"},"BaseBalance":{"format":"double","type":"number"},"BaseBalanceSigned":{"format":"double","type":"number"},"BaseCredit":{"format":"double","type":"number"},"BaseDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"CurrencyBalance":{"format":"double","type":"number"},"DaysSinceStart":{"format":"double","type":"number"},"Dimension":{"type":"string"},"ExchangeRateDifference":{"format":"double","type":"number"},"ExchangeRateUnreconciled":{"type":"boolean"},"ForeignBalance":{"format":"double","type":"number"},"ForeignBalanceSigned":{"format":"double","type":"number"},"ForeignCredit":{"format":"double","type":"number"},"ForeignDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsFilteredTag":{"type":"boolean"},"IsPublic":{"type":"boolean"},"IsReconcilable":{"type":"boolean"},"IsReconciled":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Level1":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ProtectPosting":{"type":"boolean"},"ReconciledDate":{"type":"string"},"ShortName":{"type":"string"},"StartDate":{"type":"string"},"SystemModstamp":{"type":"string"},"TaxRate":{"type":"string"},"Template":{"type":"string"},"UID":{"type":"string"},"UnitBalance":{"format":"double","type":"number"},"UnitCredit":{"format":"double","type":"number"},"UnitDebit":{"format":"double","type":"number"},"UnitValue":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"journalsListObject":{"properties":{"ApprovalStatus":{"type":"string"},"Classification":{"type":"string"},"Company":{"type":"string"},"CreateTags":{"type":"boolean"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"Date":{"type":"string"},"DefaultTaxTreatment":{"type":"string"},"Description":{"type":"string"},"Id":{"type":"string"},"IsCurrentCompany":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsRecurrent":{"type":"boolean"},"IsSelectedByMe":{"type":"boolean"},"JournalType":{"type":"string"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ReturnLink":{"type":"string"},"Status":{"type":"string"},"SystemModstamp":{"type":"string"},"TotalAmount":{"format":"double","type":"number"},"TotalCredit":{"format":"double","type":"number"},"TotalDebit":{"format":"double","type":"number"},"TotalGross":{"format":"double","type":"number"},"TotalItems":{"format":"double","type":"number"},"TotalNet":{"format":"double","type":"number"},"TotalTax":{"format":"double","type":"number"},"UID":{"type":"string"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swaggerpost":{"x-has-customfields":false,"type":"object","title":"post","properties":{"summary":{"x-samplevalue":"Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.","type":"string"},"operationId":{"x-samplevalue":"createContact","type":"string"},"responses":{"$ref":"#/definitions/swaggerresponses"},"parameters":{"type":"array","items":{"$ref":"#/definitions/swaggerparameters"}},"tags":{"x-samplevalue":["contacts"],"type":"array","items":{"type":"string"}}}},"ledgerAccounts":{"properties":{"AccountType":{"type":"string"},"AllowUnitPostings":{"type":"boolean"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"FullName":{"type":"string"},"Id":{"type":"string"},"Index":{"format":"double","type":"number"},"IndexedFullName":{"type":"string"},"IndexedName":{"type":"string"},"IndexedType":{"type":"string"},"IndexedTypeName":{"type":"string"},"IsDeleted":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"LedgerAccountType":{"type":"string"},"Level":{"format":"double","type":"number"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"ParentType":{"type":"string"},"ReverseToSelf":{"type":"boolean"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"TreatCreditAsPositive":{"type":"boolean"},"TypeId":{"type":"string"},"TypeName":{"type":"string"},"UID":{"type":"string"},"WeightedIndex":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"required":["Name"],"type":"object"},"attributes":{"properties":{"type":{"type":"string"},"url":{"type":"string"}},"type":"object"},"JournalCurrency":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"ledgerAccountsBalancesListObject":{"properties":{"BaseClosingBalance":{"format":"double","type":"number"},"BaseClosingBalanceS":{"format":"double","type":"number"},"BaseOpeningBalance":{"format":"double","type":"number"},"BaseOpeningBalanceS":{"format":"double","type":"number"},"BaseOpeningTTDBalance":{"format":"double","type":"number"},"BaseOpeningTTDBalanceS":{"format":"double","type":"number"},"BaseOpeningTTDCredit":{"format":"double","type":"number"},"BaseOpeningTTDDebit":{"format":"double","type":"number"},"BaseOpeningYTDBalance":{"format":"double","type":"number"},"BaseOpeningYTDBalanceS":{"format":"double","type":"number"},"BaseOpeningYTDCredit":{"format":"double","type":"number"},"BaseOpeningYTDDebit":{"format":"double","type":"number"},"BasePeriodBalance":{"format":"double","type":"number"},"BasePeriodBalanceS":{"format":"double","type":"number"},"BasePeriodCredit":{"format":"double","type":"number"},"BasePeriodDebit":{"format":"double","type":"number"},"BaseTTDBalance":{"format":"double","type":"number"},"BaseTTDBalanceS":{"format":"double","type":"number"},"BaseTTDCredit":{"format":"double","type":"number"},"BaseTTDDebit":{"format":"double","type":"number"},"BaseYTDBalance":{"format":"double","type":"number"},"BaseYTDBalanceS":{"format":"double","type":"number"},"BaseYTDCredit":{"format":"double","type":"number"},"BaseYTDDebit":{"format":"double","type":"number"},"Company":{"type":"string"},"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Currency":{"type":"string"},"FY":{"format":"double","type":"number"},"FYLabel":{"type":"string"},"ForeignClosingBalance":{"format":"double","type":"number"},"ForeignClosingBalanceS":{"format":"double","type":"number"},"ForeignOpeningBalance":{"format":"double","type":"number"},"ForeignOpeningBalanceS":{"format":"double","type":"number"},"ForeignOpeningTTDBalance":{"format":"double","type":"number"},"ForeignOpeningTTDBalanceS":{"format":"double","type":"number"},"ForeignOpeningTTDCredit":{"format":"double","type":"number"},"ForeignOpeningTTDDebit":{"format":"double","type":"number"},"ForeignOpeningYTDBalance":{"format":"double","type":"number"},"ForeignOpeningYTDBalanceS":{"format":"double","type":"number"},"ForeignOpeningYTDCredit":{"format":"double","type":"number"},"ForeignOpeningYTDDebit":{"format":"double","type":"number"},"ForeignPeriodBalance":{"format":"double","type":"number"},"ForeignPeriodBalanceS":{"format":"double","type":"number"},"ForeignPeriodCredit":{"format":"double","type":"number"},"ForeignPeriodDebit":{"format":"double","type":"number"},"ForeignTTDBalance":{"format":"double","type":"number"},"ForeignTTDBalanceS":{"format":"double","type":"number"},"ForeignTTDCredit":{"format":"double","type":"number"},"ForeignTTDDebit":{"format":"double","type":"number"},"ForeignYTDBalance":{"format":"double","type":"number"},"ForeignYTDBalanceS":{"format":"double","type":"number"},"ForeignYTDCredit":{"format":"double","type":"number"},"ForeignYTDDebit":{"format":"double","type":"number"},"Id":{"type":"string"},"IsBaseCurrency":{"type":"boolean"},"IsCurrentCompany":{"type":"boolean"},"IsCurrentPeriod":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsReportingFY":{"type":"boolean"},"IsReportingPeriod":{"type":"boolean"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"LastReferencedDate":{"type":"string"},"LastViewedDate":{"type":"string"},"LedgerAccount":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"Period":{"format":"double","type":"number"},"PeriodName":{"type":"string"},"SystemModstamp":{"type":"string"},"UID":{"type":"string"},"UnitClosingBalance":{"format":"double","type":"number"},"UnitClosingBalanceS":{"format":"double","type":"number"},"UnitOpeningBalance":{"format":"double","type":"number"},"UnitOpeningBalanceS":{"format":"double","type":"number"},"UnitOpeningTTDBalance":{"format":"double","type":"number"},"UnitOpeningTTDBalanceS":{"format":"double","type":"number"},"UnitOpeningTTDCredit":{"format":"double","type":"number"},"UnitOpeningTTDDebit":{"format":"double","type":"number"},"UnitOpeningYTDBalance":{"format":"double","type":"number"},"UnitOpeningYTDBalanceS":{"format":"double","type":"number"},"UnitOpeningYTDCredit":{"format":"double","type":"number"},"UnitOpeningYTDDebit":{"format":"double","type":"number"},"UnitPeriodBalance":{"format":"double","type":"number"},"UnitPeriodBalanceS":{"format":"double","type":"number"},"UnitPeriodCredit":{"format":"double","type":"number"},"UnitPeriodDebit":{"format":"double","type":"number"},"UnitTTDBalance":{"format":"double","type":"number"},"UnitTTDBalanceS":{"format":"double","type":"number"},"UnitTTDCredit":{"format":"double","type":"number"},"UnitTTDDebit":{"format":"double","type":"number"},"UnitYTDBalance":{"format":"double","type":"number"},"UnitYTDBalanceS":{"format":"double","type":"number"},"UnitYTDCredit":{"format":"double","type":"number"},"UnitYTDDebit":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"JournalType":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"postingRules":{"properties":{"CreatedById":{"type":"string"},"CreatedDate":{"type":"string"},"Credit":{"type":"string"},"Description":{"type":"string"},"Id":{"type":"string"},"IsDeleted":{"type":"boolean"},"JournalType":{"type":"string"},"LastModifiedById":{"type":"string"},"LastModifiedDate":{"type":"string"},"Layer":{"type":"string"},"LedgerAccount":{"type":"string"},"Name":{"type":"string"},"OwnerId":{"type":"string"},"RuleType":{"type":"string"},"SourceApplication":{"type":"string"},"SourceDocument":{"type":"string"},"SystemModstamp":{"type":"string"},"Template":{"type":"string"},"UID":{"type":"string"},"Version":{"format":"double","type":"number"},"attributes":{"$ref":"#/definitions/attributes"}},"type":"object"},"swaggertags":{"x-has-customfields":false,"title":"tags","properties":{"name":{"x-samplevalue":"contacts","type":"string"}},"type":"object"},"JournalTaxTreatment":{"properties":{"Id":{"type":"string"},"Name":{"type":"string"},"UID":{"type":"string"}},"type":"object"},"dimensions":{"properties":{"AllowNewValues":{"type":"boolean"},"AutoNumberFormat":{"type":"string"},"AutoNumberStart":{"format":"int32","type":"integer"},"BalanceAccount":{"$ref":"#/definitions/BalanceAccount"},"FieldValueMap":{"$ref":"#/definitions/FieldValueMap"},"FieldsValueMap":{"$ref":"#/definitions/FieldsValueMap"},"IsPublic":{"type":"boolean"},"IsUniversal":{"type":"boolean"},"MaintainPeriodValues":{"type":"boolean"},"MaintainUnitValues":{"type":"boolean"},"Reference":{"$ref":"#/definitions/Reference"},"ShowInLookups":{"type":"boolean"}},"type":"object"}},"swagger":"2.0","info":{"x-element-name":"Sage Financials","x-element-hub":"sageaccounting","x-element-key":"sagelive","contact":{"email":"support@cloud-elements.com"},"title":"sagelive","x-element-id":50278,"version":"api-v2"},"tags":[{"name":"bill-numbers"},{"name":"ping"},{"name":"ledger-accounts"},{"name":"objects"},{"name":"journals"},{"name":"tax-treatments"},{"name":"tags"},{"name":"tax-rates"},{"name":"balances"},{"name":"posting-rules"},{"name":"tax-codes"},{"name":"objectName"},{"name":"customers"},{"name":"employees"},{"name":"bulk"},{"name":"vendors"},{"name":"dimensions"}]}
